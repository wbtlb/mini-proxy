{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4","program":"/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sharded_slab","--edition=2018","/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e9331ca475aa5291","-C","extra-filename=-e9331ca475aa5291","--out-dir","/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps","-L","dependency=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps","--extern","lazy_static=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps/liblazy_static-c481e70b9e077e91.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu"],"output":"/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps/libsharded_slab-e9331ca475aa5291.rmeta"},"prelude":{"crate_id":{"name":"sharded_slab","disambiguator":[6007967653804849154,0]},"crate_root":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src","external_crates":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/sync.rs","num":20,"id":{"name":"lazy_static","disambiguator":[5557959000602466733,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/sync.rs","num":21,"id":{"name":"spin","disambiguator":[16689960791893565133,0]}}],"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":0,"byte_end":36224,"line_start":1,"line_end":1092,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9216,"byte_end":9222,"line_start":218,"line_end":218,"column_start":15,"column_end":21},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1190},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9224,"byte_end":9237,"line_start":218,"line_end":218,"column_start":23,"column_end":36},"alias_span":null,"name":"DefaultConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9255,"byte_end":9260,"line_start":219,"line_end":219,"column_start":16,"column_end":21},"alias_span":null,"name":"Clear","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9291,"byte_end":9295,"line_start":221,"line_end":221,"column_start":15,"column_end":19},"alias_span":null,"name":"Pool","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":0,"byte_end":36224,"line_start":1,"line_end":1092,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":236},{"krate":0,"index":292},{"krate":0,"index":330},{"krate":0,"index":372},{"krate":0,"index":390},{"krate":0,"index":795},{"krate":0,"index":915},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1055},{"krate":0,"index":1302},{"krate":0,"index":1309},{"krate":0,"index":1063},{"krate":0,"index":1070},{"krate":0,"index":1075},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1113},{"krate":0,"index":1119},{"krate":0,"index":1124},{"krate":0,"index":1129},{"krate":0,"index":1134},{"krate":0,"index":1140},{"krate":0,"index":1145},{"krate":0,"index":1150},{"krate":0,"index":1154},{"krate":0,"index":1158},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1179}],"decl_id":null,"docs":" A lock-free concurrent slab.","sig":null,"attributes":[{"value":"/ A lock-free concurrent slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33,"byte_end":36,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Slabs provide pre-allocated storage for many instances of a single data","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":37,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ type. When a large number of values of a single type are required,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":113,"byte_end":183,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ this can be more efficient than allocating each item individually. Since the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":184,"byte_end":264,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ allocated items are the same size, memory fragmentation is reduced, and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":265,"byte_end":340,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ creating and removing new items can be very cheap.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":341,"byte_end":395,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":396,"byte_end":399,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This crate implements a lock-free concurrent slab, indexed by `usize`s.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":400,"byte_end":475,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":476,"byte_end":479,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":480,"byte_end":492,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":493,"byte_end":496,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ First, add this to your `Cargo.toml`:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":497,"byte_end":538,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":539,"byte_end":542,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":543,"byte_end":554,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ sharded-slab = \"0.1.1\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":555,"byte_end":581,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":582,"byte_end":589,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":590,"byte_end":593,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This crate provides two  types, [`Slab`] and [`Pool`], which provide","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":594,"byte_end":666,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ slightly different APIs for using a sharded slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":667,"byte_end":720,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":721,"byte_end":724,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`Slab`] implements a slab for _storing_ small types, sharing them between","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":725,"byte_end":803,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ threads, and accessing them by index. New entries are allocated by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":804,"byte_end":874,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ [inserting] data, moving it in by value. Similarly, entries may be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":875,"byte_end":945,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ deallocated by [taking] from the slab, moving the value out. This API is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":946,"byte_end":1022,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ similar to a `Vec<Option<T>>`, but allowing lock-free concurrent insertion","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1023,"byte_end":1101,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ and removal.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1102,"byte_end":1118,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1119,"byte_end":1122,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ In contrast, the [`Pool`] type provides an [object pool] style API for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1123,"byte_end":1197,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ _reusing storage_. Rather than constructing values and moving them into the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1198,"byte_end":1277,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ pool, as with [`Slab`], [allocating an entry][create] from the pool takes a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1278,"byte_end":1357,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ closure that's provided with a mutable reference to initialize the entry in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1358,"byte_end":1437,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ place. When entries are deallocated, they are [cleared] in place. Types","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1438,"byte_end":1513,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ which own a heap allocation can be cleared by dropping any _data_ they","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1514,"byte_end":1588,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ store, but retaining any previously-allocated capacity. This means that a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1589,"byte_end":1666,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ [`Pool`] may be used to reuse a set of existing heap allocations, reducing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1667,"byte_end":1745,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ allocator load.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1746,"byte_end":1765,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1766,"byte_end":1769,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [inserting]: Slab::insert","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1770,"byte_end":1799,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/ [taking]: Slab::take","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1800,"byte_end":1824,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/ [create]: Pool::create","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1825,"byte_end":1851,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ [cleared]: Clear","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1852,"byte_end":1872,"line_start":42,"line_end":42,"column_start":1,"column_end":21}},{"value":"/ [object pool]: https://en.wikipedia.org/wiki/Object_pool_pattern","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1873,"byte_end":1941,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1946,"byte_end":1960,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1961,"byte_end":1964,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Inserting an item into the slab, returning an index:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":1965,"byte_end":2021,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2022,"byte_end":2033,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2034,"byte_end":2063,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/ let slab = Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2064,"byte_end":2091,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2092,"byte_end":2095,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2096,"byte_end":2146,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(slab.get(key).unwrap(), \"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2147,"byte_end":2201,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2202,"byte_end":2209,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2210,"byte_end":2213,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ To share a slab across threads, it may be wrapped in an `Arc`:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2214,"byte_end":2280,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2281,"byte_end":2292,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2293,"byte_end":2322,"line_start":58,"line_end":58,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2323,"byte_end":2346,"line_start":59,"line_end":59,"column_start":1,"column_end":24}},{"value":"/ let slab = Arc::new(Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2347,"byte_end":2384,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2385,"byte_end":2388,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let slab2 = slab.clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2389,"byte_end":2418,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ let thread2 = std::thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2419,"byte_end":2465,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/     let key = slab2.insert(\"hello from thread two\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2466,"byte_end":2531,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/     assert_eq!(slab2.get(key).unwrap(), \"hello from thread two\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2532,"byte_end":2601,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/     key","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2602,"byte_end":2613,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2614,"byte_end":2621,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2622,"byte_end":2625,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let key1 = slab.insert(\"hello from thread one\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2626,"byte_end":2687,"line_start":69,"line_end":69,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(slab.get(key1).unwrap(), \"hello from thread one\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2688,"byte_end":2753,"line_start":70,"line_end":70,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2754,"byte_end":2757,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ // Wait for thread 2 to complete.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2758,"byte_end":2795,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ let key2 = thread2.join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2796,"byte_end":2835,"line_start":73,"line_end":73,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2836,"byte_end":2839,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // The item inserted by thread 2 remains in the slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2840,"byte_end":2897,"line_start":75,"line_end":75,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(slab.get(key2).unwrap(), \"hello from thread two\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2898,"byte_end":2963,"line_start":76,"line_end":76,"column_start":1,"column_end":66}},{"value":"/```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2964,"byte_end":2970,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2971,"byte_end":2974,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If items in the slab must be mutated, a `Mutex` or `RwLock` may be used for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":2975,"byte_end":3054,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/ each item, providing granular locking of items rather than of the slab:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3055,"byte_end":3130,"line_start":80,"line_end":80,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3131,"byte_end":3134,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3135,"byte_end":3146,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3147,"byte_end":3176,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/ use std::sync::{Arc, Mutex};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3177,"byte_end":3209,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/ let slab = Arc::new(Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3210,"byte_end":3247,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3248,"byte_end":3251,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let key = slab.insert(Mutex::new(String::from(\"hello world\"))).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3252,"byte_end":3328,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3329,"byte_end":3332,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ let slab2 = slab.clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3333,"byte_end":3362,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/ let thread2 = std::thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3363,"byte_end":3409,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"/     let hello = slab2.get(key).expect(\"item missing\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3410,"byte_end":3468,"line_start":91,"line_end":91,"column_start":1,"column_end":59}},{"value":"/     let mut hello = hello.lock().expect(\"mutex poisoned\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3469,"byte_end":3531,"line_start":92,"line_end":92,"column_start":1,"column_end":63}},{"value":"/     *hello = String::from(\"hello everyone!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3532,"byte_end":3581,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3582,"byte_end":3589,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3590,"byte_end":3593,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ thread2.join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3594,"byte_end":3622,"line_start":96,"line_end":96,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3623,"byte_end":3626,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ let hello = slab.get(key).expect(\"item missing\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3627,"byte_end":3680,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/ let mut hello = hello.lock().expect(\"mutex poisoned\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3681,"byte_end":3739,"line_start":99,"line_end":99,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(hello.as_str(), \"hello everyone!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3740,"byte_end":3790,"line_start":100,"line_end":100,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3791,"byte_end":3798,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3799,"byte_end":3802,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ # Configuration","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3803,"byte_end":3822,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3823,"byte_end":3826,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ For performance reasons, several values used by the slab are calculated as","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3827,"byte_end":3905,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ constants. In order to allow users to tune the slab's parameters, we provide","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3906,"byte_end":3986,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ a [`Config`] trait which defines these parameters as associated `consts`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":3987,"byte_end":4064,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/ The `Slab` type is generic over a `C: Config` parameter.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4065,"byte_end":4125,"line_start":108,"line_end":108,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4126,"byte_end":4129,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ [`Config`]: trait.Config.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4130,"byte_end":4163,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4164,"byte_end":4167,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Comparison with Similar Crates","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4168,"byte_end":4204,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4205,"byte_end":4208,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ - [`slab`]: Carl Lerche's `slab` crate provides a slab implementation with a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4209,"byte_end":4289,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/   similar API, implemented by storing all data in a single vector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4290,"byte_end":4360,"line_start":115,"line_end":115,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4361,"byte_end":4364,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/   Unlike `sharded_slab`, inserting and removing elements from the slab","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4365,"byte_end":4439,"line_start":117,"line_end":117,"column_start":1,"column_end":75}},{"value":"/   requires  mutable access. This means that if the slab is accessed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4440,"byte_end":4511,"line_start":118,"line_end":118,"column_start":1,"column_end":72}},{"value":"/   concurrently by multiple threads, it is necessary for it to be protected","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4512,"byte_end":4590,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/   by a `Mutex` or `RwLock`. Items may not be inserted or removed (or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4591,"byte_end":4663,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/   accessed, if a `Mutex` is used) concurrently, even when they are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4664,"byte_end":4734,"line_start":121,"line_end":121,"column_start":1,"column_end":71}},{"value":"/   unrelated. In many cases, the lock can become a significant bottleneck. On","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4735,"byte_end":4815,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/   the other hand, this crate allows separate indices in the slab to be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4816,"byte_end":4890,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/   accessed, inserted, and removed concurrently without requiring a global","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4891,"byte_end":4968,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/   lock. Therefore, when the slab is shared across multiple threads, this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":4969,"byte_end":5045,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/   crate offers significantly better performance than `slab`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5046,"byte_end":5110,"line_start":126,"line_end":126,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5111,"byte_end":5114,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/   However, the lock free slab introduces some additional constant-factor","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5115,"byte_end":5191,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/   overhead. This means that in use-cases where a slab is _not_ shared by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5192,"byte_end":5268,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/   multiple threads and locking is not required, this crate will likely offer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5269,"byte_end":5349,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/   slightly worse performance.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5350,"byte_end":5383,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5384,"byte_end":5387,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/   In summary: `sharded-slab` offers significantly improved performance in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5388,"byte_end":5465,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/   concurrent use-cases, while `slab` should be preferred in single-threaded","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5466,"byte_end":5545,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/   use-cases.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5546,"byte_end":5562,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5563,"byte_end":5566,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/loom","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5567,"byte_end":5610,"line_start":137,"line_end":137,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5611,"byte_end":5614,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # Safety and Correctness","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5615,"byte_end":5643,"line_start":139,"line_end":139,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5644,"byte_end":5647,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Most implementations of lock-free data structures in Rust require some","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5648,"byte_end":5722,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ amount of unsafe code, and this crate is not an exception. In order to catch","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5723,"byte_end":5803,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"/ potential bugs in this unsafe code, we make use of [`loom`], a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5804,"byte_end":5870,"line_start":143,"line_end":143,"column_start":1,"column_end":67}},{"value":"/ permutation-testing tool for concurrent Rust programs. All `unsafe` blocks","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5871,"byte_end":5949,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ this crate occur in accesses to `loom` `UnsafeCell`s. This means that when","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":5950,"byte_end":6028,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ those accesses occur in this crate's tests, `loom` will assert that they are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6029,"byte_end":6109,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"/ valid under the C11 memory model across multiple permutations of concurrent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6110,"byte_end":6189,"line_start":147,"line_end":147,"column_start":1,"column_end":80}},{"value":"/ executions of those tests.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6190,"byte_end":6220,"line_start":148,"line_end":148,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6221,"byte_end":6224,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ In order to guard against the [ABA problem][aba], this crate makes use of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6225,"byte_end":6302,"line_start":150,"line_end":150,"column_start":1,"column_end":78}},{"value":"/ _generational indices_. Each slot in the slab tracks a generation counter","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6303,"byte_end":6380,"line_start":151,"line_end":151,"column_start":1,"column_end":78}},{"value":"/ which is incremented every time a value is inserted into that slot, and the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6381,"byte_end":6460,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ indices returned by [`Slab::insert`] include the generation of the slot when","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6461,"byte_end":6541,"line_start":153,"line_end":153,"column_start":1,"column_end":81}},{"value":"/ the value was inserted, packed into the high-order bits of the index. This","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6542,"byte_end":6620,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/ ensures that if a value is inserted, removed,  and a new value is inserted","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6621,"byte_end":6699,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ into the same slot in the slab, the key returned by the first call to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6700,"byte_end":6773,"line_start":156,"line_end":156,"column_start":1,"column_end":74}},{"value":"/ `insert` will not map to the new value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6774,"byte_end":6817,"line_start":157,"line_end":157,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6818,"byte_end":6821,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Since a fixed number of bits are set aside to use for storing the generation","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6822,"byte_end":6902,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ counter, the counter will wrap  around after being incremented a number of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6903,"byte_end":6981,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ times. To avoid situations where a returned index lives long enough to see the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":6982,"byte_end":7064,"line_start":161,"line_end":161,"column_start":1,"column_end":83}},{"value":"/ generation counter wrap around to the same value, it is good to be fairly","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7065,"byte_end":7142,"line_start":162,"line_end":162,"column_start":1,"column_end":78}},{"value":"/ generous when configuring the allocation of index bits.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7143,"byte_end":7202,"line_start":163,"line_end":163,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7203,"byte_end":7206,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ [`loom`]: https://crates.io/crates/loom","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7207,"byte_end":7250,"line_start":165,"line_end":165,"column_start":1,"column_end":44}},{"value":"/ [aba]: https://en.wikipedia.org/wiki/ABA_problem","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7251,"byte_end":7303,"line_start":166,"line_end":166,"column_start":1,"column_end":53}},{"value":"/ [`Slab::insert`]: struct.Slab.html#method.insert","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7304,"byte_end":7356,"line_start":167,"line_end":167,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7357,"byte_end":7360,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7361,"byte_end":7378,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7379,"byte_end":7382,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ These graphs were produced by [benchmarks] of the sharded slab implementation,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7383,"byte_end":7465,"line_start":171,"line_end":171,"column_start":1,"column_end":83}},{"value":"/ using the [`criterion`] crate.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7466,"byte_end":7500,"line_start":172,"line_end":172,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7501,"byte_end":7504,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The first shows the results of a benchmark where an increasing number of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7505,"byte_end":7581,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ items are inserted and then removed into a slab concurrently by five","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7582,"byte_end":7654,"line_start":175,"line_end":175,"column_start":1,"column_end":73}},{"value":"/ threads. It compares the performance of the sharded slab implementation","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7655,"byte_end":7730,"line_start":176,"line_end":176,"column_start":1,"column_end":76}},{"value":"/ with a `RwLock<slab::Slab>`:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7731,"byte_end":7763,"line_start":177,"line_end":177,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7764,"byte_end":7767,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ <img width=\"1124\" alt=\"Screen Shot 2019-10-01 at 5 09 49 PM\" src=\"https://user-images.githubusercontent.com/2796466/66078398-cd6c9f80-e516-11e9-9923-0ed6292e8498.png\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7768,"byte_end":7939,"line_start":179,"line_end":179,"column_start":1,"column_end":172}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7940,"byte_end":7943,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ The second graph shows the results of a benchmark where an increasing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":7944,"byte_end":8017,"line_start":181,"line_end":181,"column_start":1,"column_end":74}},{"value":"/ number of items are inserted and then removed by a _single_ thread. It","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8018,"byte_end":8092,"line_start":182,"line_end":182,"column_start":1,"column_end":75}},{"value":"/ compares the performance of the sharded slab implementation with an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8093,"byte_end":8164,"line_start":183,"line_end":183,"column_start":1,"column_end":72}},{"value":"/ `RwLock<slab::Slab>` and a `mut slab::Slab`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8165,"byte_end":8213,"line_start":184,"line_end":184,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8214,"byte_end":8217,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ <img width=\"925\" alt=\"Screen Shot 2019-10-01 at 5 13 45 PM\" src=\"https://user-images.githubusercontent.com/2796466/66078469-f0974f00-e516-11e9-95b5-f65f0aa7e494.png\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8218,"byte_end":8388,"line_start":186,"line_end":186,"column_start":1,"column_end":171}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8389,"byte_end":8392,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ These benchmarks demonstrate that, while the sharded approach introduces","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8393,"byte_end":8469,"line_start":188,"line_end":188,"column_start":1,"column_end":77}},{"value":"/ a small constant-factor overhead, it offers significantly better","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8470,"byte_end":8538,"line_start":189,"line_end":189,"column_start":1,"column_end":69}},{"value":"/ performance across concurrent accesses.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8539,"byte_end":8582,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8583,"byte_end":8586,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [benchmarks]: https://github.com/hawkw/sharded-slab/blob/master/benches/bench.rs","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8587,"byte_end":8671,"line_start":192,"line_end":192,"column_start":1,"column_end":85}},{"value":"/ [`criterion`]: https://crates.io/crates/criterion","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8672,"byte_end":8725,"line_start":193,"line_end":193,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8726,"byte_end":8729,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ # Implementation Notes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8730,"byte_end":8756,"line_start":195,"line_end":195,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8757,"byte_end":8760,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ See [this page](crate::implementation) for details on this crate's design","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8761,"byte_end":8838,"line_start":197,"line_end":197,"column_start":1,"column_end":78}},{"value":"/ and implementation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8839,"byte_end":8862,"line_start":198,"line_end":198,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8863,"byte_end":8866,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"warn(missing_debug_implementations, missing_docs)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":8929,"byte_end":8982,"line_start":201,"line_end":201,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"implementation","qualname":"::implementation","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","parent":null,"children":[],"decl_id":null,"docs":" Notes on `sharded-slab`'s implementation and design.","sig":null,"attributes":[{"value":"/ Notes on `sharded-slab`'s implementation and design.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38462,"byte_end":38518,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38519,"byte_end":38522,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Design","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38523,"byte_end":38535,"line_start":6,"line_end":6,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38536,"byte_end":38539,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The sharded slab's design is strongly inspired by the ideas presented by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38540,"byte_end":38616,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ Leijen, Zorn, and de Moura in [Mimalloc: Free List Sharding in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38617,"byte_end":38683,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ Action][mimalloc]. In this report, the authors present a novel design for a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38684,"byte_end":38763,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ memory allocator based on a concept of _free list sharding_.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38764,"byte_end":38828,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38829,"byte_end":38832,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Memory allocators must keep track of what memory regions are not currently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38833,"byte_end":38911,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ allocated (\"free\") in order to provide them to future allocation requests.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38912,"byte_end":38990,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ The term [_free list_][freelist] refers to a technique for performing this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":38991,"byte_end":39069,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ bookkeeping, where each free block stores a pointer to the next free block,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39070,"byte_end":39149,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ forming a linked list. The memory allocator keeps a pointer to the most","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39150,"byte_end":39225,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ recently freed block, the _head_ of the free list. To allocate more memory,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39226,"byte_end":39305,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the allocator pops from the free list by setting the head pointer to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39306,"byte_end":39382,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ next free block of the current head block, and returning the previous head.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39383,"byte_end":39462,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ To deallocate a block, the block is pushed to the free list by setting its","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39463,"byte_end":39541,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ first word to the current head pointer, and the head pointer is set to point","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39542,"byte_end":39622,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ to the deallocated block. Most implementations of slab allocators backed by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39623,"byte_end":39702,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ arrays or vectors use a similar technique, where pointers are replaced by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39703,"byte_end":39780,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ indices into the backing array.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39781,"byte_end":39816,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39817,"byte_end":39820,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When allocations and deallocations can occur concurrently across threads,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39821,"byte_end":39898,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ they must synchronize accesses to the free list; either by putting the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39899,"byte_end":39973,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ entire allocator state inside of a lock, or by using atomic operations to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":39974,"byte_end":40051,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ treat the free list as a lock-free structure (such as a [Treiber stack]). In","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40052,"byte_end":40132,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ both cases, there is a significant performance cost — even when the free","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40133,"byte_end":40211,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ list is lock-free, it is likely that a noticeable amount of time will be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40212,"byte_end":40288,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ spent in compare-and-swap loops. Ideally, the global synchronzation point","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40289,"byte_end":40366,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ created by the single global free list could be avoided as much as possible.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40367,"byte_end":40447,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40448,"byte_end":40451,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The approach presented by Leijen, Zorn, and de Moura is to introduce","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40452,"byte_end":40524,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ sharding and thus increase the granularity of synchronization significantly.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40525,"byte_end":40605,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ In mimalloc, the heap is _sharded_ so that each thread has its own","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40606,"byte_end":40676,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ thread-local heap. Objects are always allocated from the local heap of the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40677,"byte_end":40755,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ thread where the allocation is performed. Because allocations are always","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40756,"byte_end":40832,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ done from a thread's local heap, they need not be synchronized.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40833,"byte_end":40900,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40901,"byte_end":40904,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ However, since objects can move between threads before being deallocated,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40905,"byte_end":40982,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ _deallocations_ may still occur concurrently. Therefore, Leijen et al.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":40983,"byte_end":41057,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ introduce a concept of _local_ and _global_ free lists. When an object is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41058,"byte_end":41135,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ deallocated on the same thread it was originally allocated on, it is placed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41136,"byte_end":41215,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ on the local free list; if it is deallocated on another thread, it goes on","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41216,"byte_end":41294,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ the global free list for the heap of the thread from which it originated. To","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41295,"byte_end":41375,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ allocate, the local free list is used first; if it is empty, the entire","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41376,"byte_end":41451,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ global free list is popped onto the local free list. Since the local free","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41452,"byte_end":41529,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ list is only ever accessed by the thread it belongs to, it does not require","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41530,"byte_end":41609,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ synchronization at all, and because the global free list is popped from","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41610,"byte_end":41685,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ infrequently, the cost of synchronization has a reduced impact. A majority","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41686,"byte_end":41764,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ of allocations can occur without any synchronization at all; and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41765,"byte_end":41833,"line_start":54,"line_end":54,"column_start":1,"column_end":69}},{"value":"/ deallocations only require synchronization when an object has left its","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41834,"byte_end":41908,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ parent thread (a relatively uncommon case).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41909,"byte_end":41956,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41957,"byte_end":41960,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [mimalloc]: https://www.microsoft.com/en-us/research/uploads/prod/2019/06/mimalloc-tr-v1.pdf","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":41961,"byte_end":42057,"line_start":58,"line_end":58,"column_start":1,"column_end":97}},{"value":"/ [freelist]: https://en.wikipedia.org/wiki/Free_list","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42058,"byte_end":42113,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [Treiber stack]: https://en.wikipedia.org/wiki/Treiber_stack","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42114,"byte_end":42178,"line_start":60,"line_end":60,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42179,"byte_end":42182,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42183,"byte_end":42203,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42204,"byte_end":42207,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ A slab is represented as an array of [`MAX_THREADS`] _shards_. A shard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42208,"byte_end":42282,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ consists of a vector of one or more _pages_ plus associated metadata.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42283,"byte_end":42356,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/ Finally, a page consists of an array of _slots_, head indices for the local","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42357,"byte_end":42436,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ and remote free lists.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42437,"byte_end":42463,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42464,"byte_end":42467,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42468,"byte_end":42479,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ ┌─────────────┐","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42480,"byte_end":42529,"line_start":70,"line_end":70,"column_start":1,"column_end":20}},{"value":"/ │ shard 1     │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42530,"byte_end":42553,"line_start":71,"line_end":71,"column_start":1,"column_end":20}},{"value":"/ │             │    ┌─────────────┐        ┌────────┐","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42554,"byte_end":42664,"line_start":72,"line_end":72,"column_start":1,"column_end":57}},{"value":"/ │ pages───────┼───▶│ page 1      │        │        │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42665,"byte_end":42755,"line_start":73,"line_end":73,"column_start":1,"column_end":57}},{"value":"/ ├─────────────┤    ├─────────────┤  ┌────▶│  next──┼─┐","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42756,"byte_end":42898,"line_start":74,"line_end":74,"column_start":1,"column_end":59}},{"value":"/ │ shard 2     │    │ page 2      │  │     ├────────┤ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42899,"byte_end":42989,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/ ├─────────────┤    │             │  │     │XXXXXXXX│ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":42990,"byte_end":43090,"line_start":76,"line_end":76,"column_start":1,"column_end":59}},{"value":"/ │ shard 3     │    │ local_head──┼──┘     ├────────┤ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":43091,"byte_end":43189,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/ └─────────────┘    │ remote_head─┼──┐     │        │◀┘","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":43190,"byte_end":43298,"line_start":78,"line_end":78,"column_start":1,"column_end":59}},{"value":"/       ...          ├─────────────┤  │     │  next──┼─┐","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":43299,"byte_end":43401,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/ ┌─────────────┐    │ page 3      │  │     ├────────┤ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":43402,"byte_end":43518,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/ │ shard n     │    └─────────────┘  │     │XXXXXXXX│ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":43519,"byte_end":43619,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ └─────────────┘          ...        │     ├────────┤ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":43620,"byte_end":43732,"line_start":82,"line_end":82,"column_start":1,"column_end":59}},{"value":"/                    ┌─────────────┐  │     │XXXXXXXX│ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":43733,"byte_end":43829,"line_start":83,"line_end":83,"column_start":1,"column_end":59}},{"value":"/                    │ page n      │  │     ├────────┤ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":43830,"byte_end":43916,"line_start":84,"line_end":84,"column_start":1,"column_end":59}},{"value":"/                    └─────────────┘  │     │        │◀┘","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":43917,"byte_end":44015,"line_start":85,"line_end":85,"column_start":1,"column_end":59}},{"value":"/                                     └────▶│  next──┼───▶  ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44016,"byte_end":44109,"line_start":86,"line_end":86,"column_start":1,"column_end":66}},{"value":"/                                           ├────────┤","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44110,"byte_end":44186,"line_start":87,"line_end":87,"column_start":1,"column_end":57}},{"value":"/                                           │XXXXXXXX│","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44187,"byte_end":44247,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/                                           └────────┘","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44248,"byte_end":44324,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44325,"byte_end":44332,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44333,"byte_end":44336,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44337,"byte_end":44340,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The size of the first page in a shard is always a power of two, and every","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44341,"byte_end":44418,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ subsequent page added after the first is twice as large as the page that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44419,"byte_end":44495,"line_start":94,"line_end":94,"column_start":1,"column_end":77}},{"value":"/ preceeds it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44496,"byte_end":44512,"line_start":95,"line_end":95,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44513,"byte_end":44516,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44517,"byte_end":44528,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44529,"byte_end":44532,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ pg.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44533,"byte_end":44540,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ ┌───┐   ┌─┬─┐","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44541,"byte_end":44578,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/ │ 0 │───▶ │ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44579,"byte_end":44612,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/ ├───┤   ├─┼─┼─┬─┐","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44613,"byte_end":44662,"line_start":102,"line_end":102,"column_start":1,"column_end":22}},{"value":"/ │ 1 │───▶ │ │ │ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44663,"byte_end":44704,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"/ ├───┤   ├─┼─┼─┼─┼─┬─┬─┬─┐","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44705,"byte_end":44778,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"/ │ 2 │───▶ │ │ │ │ │ │ │ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44779,"byte_end":44836,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ ├───┤   ├─┼─┼─┼─┼─┼─┼─┼─┼─┬─┬─┬─┬─┬─┬─┬─┐","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44837,"byte_end":44958,"line_start":106,"line_end":106,"column_start":1,"column_end":46}},{"value":"/ │ 3 │───▶ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │ │","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":44959,"byte_end":45048,"line_start":107,"line_end":107,"column_start":1,"column_end":46}},{"value":"/ └───┘   └─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┘","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45049,"byte_end":45170,"line_start":108,"line_end":108,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45171,"byte_end":45178,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45179,"byte_end":45182,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ When searching for a free slot, the smallest page is searched first, and if","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45183,"byte_end":45262,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/ it is full, the search proceeds to the next page until either a free slot is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45263,"byte_end":45343,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ found or all available pages have been searched. If all available pages have","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45344,"byte_end":45424,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/ been searched and the maximum number of pages has not yet been reached, a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45425,"byte_end":45502,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ new page is then allocated.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45503,"byte_end":45534,"line_start":115,"line_end":115,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45535,"byte_end":45538,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Since every page is twice as large as the previous page, and all page sizes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45539,"byte_end":45618,"line_start":117,"line_end":117,"column_start":1,"column_end":80}},{"value":"/ are powers of two, we can determine the page index that contains a given","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45619,"byte_end":45695,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ address by shifting the address down by the smallest page size and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45696,"byte_end":45766,"line_start":119,"line_end":119,"column_start":1,"column_end":71}},{"value":"/ looking at how many twos places necessary to represent that number,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45767,"byte_end":45838,"line_start":120,"line_end":120,"column_start":1,"column_end":72}},{"value":"/ telling us what power of two page size it fits inside of. We can","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45839,"byte_end":45907,"line_start":121,"line_end":121,"column_start":1,"column_end":69}},{"value":"/ determine the number of twos places by counting the number of leading","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45908,"byte_end":45981,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/ zeros (unused twos places) in the number's binary representation, and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":45982,"byte_end":46055,"line_start":123,"line_end":123,"column_start":1,"column_end":74}},{"value":"/ subtracting that count from the total number of bits in a word.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46056,"byte_end":46123,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46124,"byte_end":46127,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ The formula for determining the page number that contains an offset is thus:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46128,"byte_end":46208,"line_start":126,"line_end":126,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46209,"byte_end":46212,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46213,"byte_end":46231,"line_start":128,"line_end":128,"column_start":1,"column_end":19}},{"value":"/ WIDTH - ((offset + INITIAL_PAGE_SIZE) >> INDEX_SHIFT).leading_zeros()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46232,"byte_end":46305,"line_start":129,"line_end":129,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46306,"byte_end":46313,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46314,"byte_end":46317,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ where `WIDTH` is the number of bits in a `usize`, and `INDEX_SHIFT` is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46318,"byte_end":46392,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46393,"byte_end":46396,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46397,"byte_end":46415,"line_start":134,"line_end":134,"column_start":1,"column_end":19}},{"value":"/ INITIAL_PAGE_SIZE.trailing_zeros() + 1;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46416,"byte_end":46459,"line_start":135,"line_end":135,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46460,"byte_end":46467,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46468,"byte_end":46471,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ [`MAX_THREADS`]: https://docs.rs/sharded-slab/latest/sharded_slab/trait.Config.html#associatedconstant.MAX_THREADS","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/implementation.rs","byte_start":46472,"byte_end":46590,"line_start":138,"line_end":138,"column_start":1,"column_end":119}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pool","qualname":"::pool","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":53},{"krate":0,"index":60},{"krate":0,"index":67},{"krate":0,"index":73},{"krate":0,"index":79},{"krate":0,"index":84},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":120},{"krate":0,"index":126},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":148},{"krate":0,"index":154},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":169},{"krate":0,"index":174},{"krate":0,"index":179},{"krate":0,"index":184},{"krate":0,"index":188},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":209},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":233}],"decl_id":null,"docs":" A lock-free concurrent object pool.","sig":null,"attributes":[{"value":"/ A lock-free concurrent object pool.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":46592,"byte_end":46631,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":46632,"byte_end":46635,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the [`Pool` type's documentation][pool] for details on the object pool API and how","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":46636,"byte_end":46726,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/ it differs from the [`Slab`] API.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":46727,"byte_end":46764,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":46765,"byte_end":46768,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [pool]: ../struct.Pool.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":46769,"byte_end":46800,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/ [`Slab`]: ../struct.Slab.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":46801,"byte_end":46834,"line_start":7,"line_end":7,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":48},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49663,"byte_end":49667,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"Pool","qualname":"::pool::Pool","value":"Pool {  }","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" A lock-free concurrent object pool.","sig":null,"attributes":[{"value":"/ A lock-free concurrent object pool.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47011,"byte_end":47050,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47051,"byte_end":47054,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Slabs provide pre-allocated storage for many instances of a single type. But, when working with","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47055,"byte_end":47154,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"/ heap allocated objects, the advantages of a slab are lost, as the memory allocated for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47155,"byte_end":47249,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ object is freed when the object is removed from the slab. With a pool, we can instead reuse","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47250,"byte_end":47345,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"/ this memory for objects being added to the pool in the future, therefore reducing memory","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47346,"byte_end":47438,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ fragmentation and avoiding additional allocations.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47439,"byte_end":47493,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47494,"byte_end":47497,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type implements a lock-free concurrent pool, indexed by `usize`s. The items stored in this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47498,"byte_end":47597,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ type need to implement [`Clear`] and `Default`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47598,"byte_end":47649,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47650,"byte_end":47653,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The `Pool` type shares similar semantics to [`Slab`] when it comes to sharing across threads","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47654,"byte_end":47750,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/ and storing mutable shared data. The biggest difference is there are no [`Slab::insert`] and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47751,"byte_end":47847,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"/ [`Slab::take`] analouges for the `Pool` type. Instead new items are added to the pool by using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47848,"byte_end":47946,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ the [`Pool::create`] method, and marked for clearing by the [`Pool::clear`] method.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":47947,"byte_end":48034,"line_start":32,"line_end":32,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48035,"byte_end":48038,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48039,"byte_end":48053,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48054,"byte_end":48057,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Add an entry to the pool, returning an index:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48058,"byte_end":48107,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48108,"byte_end":48115,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48116,"byte_end":48145,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48146,"byte_end":48187,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48188,"byte_end":48191,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48192,"byte_end":48269,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48270,"byte_end":48338,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48339,"byte_end":48346,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48347,"byte_end":48350,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Create a new pooled item, returning a guard that allows mutable access:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48351,"byte_end":48426,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48427,"byte_end":48434,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48435,"byte_end":48464,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48465,"byte_end":48506,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48507,"byte_end":48510,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut guard = pool.create().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48511,"byte_end":48554,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/ let key = guard.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48555,"byte_end":48581,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ guard.push_str(\"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48582,"byte_end":48616,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48617,"byte_end":48620,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ drop(guard); // release the guard, allowing immutable access.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48621,"byte_end":48686,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48687,"byte_end":48755,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48756,"byte_end":48763,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48764,"byte_end":48767,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Pool entries can be cleared by calling [`Pool::clear`]. This marks the entry to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48768,"byte_end":48851,"line_start":58,"line_end":58,"column_start":1,"column_end":84}},{"value":"/ be cleared when the guards referencing to it are dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48852,"byte_end":48913,"line_start":59,"line_end":59,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48914,"byte_end":48921,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48922,"byte_end":48951,"line_start":61,"line_end":61,"column_start":1,"column_end":30}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48952,"byte_end":48993,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48994,"byte_end":48997,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":48998,"byte_end":49075,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49076,"byte_end":49079,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // Mark this entry to be cleared.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49080,"byte_end":49117,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/ pool.clear(key);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49118,"byte_end":49138,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49139,"byte_end":49142,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // The cleared entry is no longer available in the pool","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49143,"byte_end":49202,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/ assert!(pool.get(key).is_none());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49203,"byte_end":49240,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49241,"byte_end":49248,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # Configuration","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49249,"byte_end":49268,"line_start":72,"line_end":72,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49269,"byte_end":49272,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Both `Pool` and [`Slab`] share the same configuration mechanism. See [crate level documentation][config-doc]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49273,"byte_end":49385,"line_start":74,"line_end":74,"column_start":1,"column_end":113}},{"value":"/ for more details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49386,"byte_end":49407,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49408,"byte_end":49411,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`Slab::take`]: crate::Slab::take","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49412,"byte_end":49449,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/ [`Slab::insert`]: crate::Slab::insert","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49450,"byte_end":49491,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ [`Pool::create`]: Pool::create","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49492,"byte_end":49526,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ [`Pool::clear`]: Pool::clear","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49527,"byte_end":49559,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ [config-doc]: crate#configuration","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49560,"byte_end":49597,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/ [`Clear`]: crate::Clear","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49598,"byte_end":49625,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/ [`Slab`]: crate::Slab","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49626,"byte_end":49651,"line_start":83,"line_end":83,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50118,"byte_end":50121,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"Ref","qualname":"::pool::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" A guard that allows access to an object in a pool.","sig":null,"attributes":[{"value":"/ A guard that allows access to an object in a pool.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49803,"byte_end":49857,"line_start":93,"line_end":93,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49858,"byte_end":49861,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ While the guard exists, it indicates to the pool that the item the guard references is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49862,"byte_end":49952,"line_start":95,"line_end":95,"column_start":1,"column_end":91}},{"value":"/ currently being accessed. If the item is removed from the pool while the guard exists, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":49953,"byte_end":50047,"line_start":96,"line_end":96,"column_start":1,"column_end":95}},{"value":"/ removal will be deferred until all guards are dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50048,"byte_end":50106,"line_start":97,"line_end":97,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50695,"byte_end":50701,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"RefMut","qualname":"::pool::RefMut","value":"RefMut {  }","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" A guard that allows exclusive mutable access to an object in a pool.","sig":null,"attributes":[{"value":"/ A guard that allows exclusive mutable access to an object in a pool.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50283,"byte_end":50355,"line_start":108,"line_end":108,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50356,"byte_end":50359,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ While the guard exists, it indicates to the pool that the item the guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50360,"byte_end":50436,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ references is currently being accessed. If the item is removed from the pool","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50437,"byte_end":50517,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ while a guard exists, the removal will be deferred until the guard is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50518,"byte_end":50591,"line_start":112,"line_end":112,"column_start":1,"column_end":74}},{"value":"/ dropped. The slot cannot be accessed by other threads while it is accessed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50592,"byte_end":50670,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ mutably.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50671,"byte_end":50683,"line_start":114,"line_end":114,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53611,"byte_end":53619,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"OwnedRef","qualname":"::pool::OwnedRef","value":"OwnedRef {  }","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" An owned guard that allows shared immutable access to an object in a pool.","sig":null,"attributes":[{"value":"/ An owned guard that allows shared immutable access to an object in a pool.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50867,"byte_end":50945,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50946,"byte_end":50949,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ While the guard exists, it indicates to the pool that the item the guard references is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":50950,"byte_end":51040,"line_start":127,"line_end":127,"column_start":1,"column_end":91}},{"value":"/ currently being accessed. If the item is removed from the pool while the guard exists, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51041,"byte_end":51135,"line_start":128,"line_end":128,"column_start":1,"column_end":95}},{"value":"/ removal will be deferred until all guards are dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51136,"byte_end":51194,"line_start":129,"line_end":129,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51195,"byte_end":51198,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Unlike [`Ref`], which borrows the pool, an `OwnedRef` clones the `Arc`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51199,"byte_end":51273,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ around the pool. Therefore, it keeps the pool from being dropped until all","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51274,"byte_end":51352,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ such guards have been dropped. This means that an `OwnedRef` may be held for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51353,"byte_end":51433,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"/ an arbitrary lifetime.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51434,"byte_end":51460,"line_start":134,"line_end":134,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51461,"byte_end":51464,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51465,"byte_end":51468,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51469,"byte_end":51483,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51484,"byte_end":51487,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51488,"byte_end":51495,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51496,"byte_end":51525,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51526,"byte_end":51549,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51550,"byte_end":51553,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51554,"byte_end":51610,"line_start":143,"line_end":143,"column_start":1,"column_end":57}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51611,"byte_end":51688,"line_start":144,"line_end":144,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51689,"byte_end":51692,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ // Look up the created `Key`, returning an `OwnedRef`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51693,"byte_end":51751,"line_start":146,"line_end":146,"column_start":1,"column_end":59}},{"value":"/ let value = pool.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51752,"byte_end":51805,"line_start":147,"line_end":147,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51806,"byte_end":51809,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // Now, the original `Arc` clone of the pool may be dropped, but the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51810,"byte_end":51882,"line_start":149,"line_end":149,"column_start":1,"column_end":73}},{"value":"/ // returned `OwnedRef` can still access the value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51883,"byte_end":51937,"line_start":150,"line_end":150,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(value, String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51938,"byte_end":51989,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51990,"byte_end":51997,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":51998,"byte_end":52001,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Unlike [`Ref`], an `OwnedRef` may be stored in a struct which must live","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52002,"byte_end":52077,"line_start":154,"line_end":154,"column_start":1,"column_end":76}},{"value":"/ for the `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52078,"byte_end":52109,"line_start":155,"line_end":155,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52110,"byte_end":52113,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52114,"byte_end":52121,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52122,"byte_end":52151,"line_start":158,"line_end":158,"column_start":1,"column_end":30}},{"value":"/ use sharded_slab::pool::OwnedRef;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52152,"byte_end":52189,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52190,"byte_end":52213,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52214,"byte_end":52217,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ pub struct MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52218,"byte_end":52243,"line_start":162,"line_end":162,"column_start":1,"column_end":26}},{"value":"/     pool_ref: OwnedRef<String>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52244,"byte_end":52279,"line_start":163,"line_end":163,"column_start":1,"column_end":36}},{"value":"/     // ... other fields ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52280,"byte_end":52311,"line_start":164,"line_end":164,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52312,"byte_end":52317,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52318,"byte_end":52321,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ // Suppose this is some arbitrary function which requires a value that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52322,"byte_end":52396,"line_start":167,"line_end":167,"column_start":1,"column_end":75}},{"value":"/ // lives for the 'static lifetime...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52397,"byte_end":52437,"line_start":168,"line_end":168,"column_start":1,"column_end":41}},{"value":"/ fn function_requiring_static<T: 'static>(t: &T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52438,"byte_end":52491,"line_start":169,"line_end":169,"column_start":1,"column_end":54}},{"value":"/     // ... do something extremely important and interesting ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52492,"byte_end":52559,"line_start":170,"line_end":170,"column_start":1,"column_end":68}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52560,"byte_end":52565,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52566,"byte_end":52569,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52570,"byte_end":52626,"line_start":173,"line_end":173,"column_start":1,"column_end":57}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52627,"byte_end":52704,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52705,"byte_end":52708,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ // Look up the created `Key`, returning an `OwnedRef`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52709,"byte_end":52767,"line_start":176,"line_end":176,"column_start":1,"column_end":59}},{"value":"/ let pool_ref = pool.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52768,"byte_end":52824,"line_start":177,"line_end":177,"column_start":1,"column_end":57}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52825,"byte_end":52855,"line_start":178,"line_end":178,"column_start":1,"column_end":31}},{"value":"/     pool_ref,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52856,"byte_end":52873,"line_start":179,"line_end":179,"column_start":1,"column_end":18}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52874,"byte_end":52888,"line_start":180,"line_end":180,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52889,"byte_end":52895,"line_start":181,"line_end":181,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52896,"byte_end":52899,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ // We can use `my_struct` anywhere where it is required to have the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52900,"byte_end":52971,"line_start":183,"line_end":183,"column_start":1,"column_end":72}},{"value":"/ // `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52972,"byte_end":52998,"line_start":184,"line_end":184,"column_start":1,"column_end":27}},{"value":"/ function_requiring_static(&my_struct);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":52999,"byte_end":53041,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53042,"byte_end":53049,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53050,"byte_end":53053,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ `OwnedRef`s may be sent between threads:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53054,"byte_end":53098,"line_start":188,"line_end":188,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53099,"byte_end":53102,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53103,"byte_end":53110,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53111,"byte_end":53140,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/ use std::{thread, sync::Arc};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53141,"byte_end":53174,"line_start":192,"line_end":192,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53175,"byte_end":53178,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53179,"byte_end":53235,"line_start":194,"line_end":194,"column_start":1,"column_end":57}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53236,"byte_end":53313,"line_start":195,"line_end":195,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53314,"byte_end":53317,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ // Look up the created `Key`, returning an `OwnedRef`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53318,"byte_end":53376,"line_start":197,"line_end":197,"column_start":1,"column_end":59}},{"value":"/ let value = pool.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53377,"byte_end":53430,"line_start":198,"line_end":198,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53431,"byte_end":53434,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53435,"byte_end":53462,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(value, String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53463,"byte_end":53518,"line_start":201,"line_end":201,"column_start":1,"column_end":56}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53519,"byte_end":53533,"line_start":202,"line_end":202,"column_start":1,"column_end":15}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53534,"byte_end":53557,"line_start":203,"line_end":203,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53558,"byte_end":53565,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53566,"byte_end":53569,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ [`Ref`]: crate::pool::Ref","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53570,"byte_end":53599,"line_start":206,"line_end":206,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":73},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59002,"byte_end":59013,"line_start":371,"line_end":371,"column_start":12,"column_end":23},"name":"OwnedRefMut","qualname":"::pool::OwnedRefMut","value":"OwnedRefMut {  }","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" An owned guard that allows exclusive, mutable access to an object in a pool.","sig":null,"attributes":[{"value":"/ An owned guard that allows exclusive, mutable access to an object in a pool.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53776,"byte_end":53856,"line_start":217,"line_end":217,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53857,"byte_end":53860,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ An `OwnedRefMut<T>` functions more or less identically to an owned","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53861,"byte_end":53931,"line_start":219,"line_end":219,"column_start":1,"column_end":71}},{"value":"/ `Box<T>`: it can be passed to functions, stored in structure fields, and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":53932,"byte_end":54008,"line_start":220,"line_end":220,"column_start":1,"column_end":77}},{"value":"/ borrowed mutably or immutably, and can be owned for arbitrary lifetimes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54009,"byte_end":54085,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ The difference is that, unlike a `Box<T>`, the memory allocation for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54086,"byte_end":54162,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ `T` lives in the `Pool`; when an `OwnedRefMut` is created, it may reuse","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54163,"byte_end":54238,"line_start":223,"line_end":223,"column_start":1,"column_end":76}},{"value":"/ memory that was allocated for a previous pooled object that has been","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54239,"byte_end":54311,"line_start":224,"line_end":224,"column_start":1,"column_end":73}},{"value":"/ cleared. Additionally, the `OwnedRefMut` may be [downgraded] to an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54312,"byte_end":54382,"line_start":225,"line_end":225,"column_start":1,"column_end":71}},{"value":"/ [`OwnedRef`] which may be shared freely, essentially turning the `Box`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54383,"byte_end":54457,"line_start":226,"line_end":226,"column_start":1,"column_end":75}},{"value":"/ into an `Arc`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54458,"byte_end":54476,"line_start":227,"line_end":227,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54477,"byte_end":54480,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This is returned by [`Pool::create_owned`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54481,"byte_end":54528,"line_start":229,"line_end":229,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54529,"byte_end":54532,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ While the guard exists, it indicates to the pool that the item the guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54533,"byte_end":54609,"line_start":231,"line_end":231,"column_start":1,"column_end":77}},{"value":"/ references is currently being accessed. If the item is removed from the pool","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54610,"byte_end":54690,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ while the guard exists, theremoval will be deferred until all guards are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54691,"byte_end":54767,"line_start":233,"line_end":233,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54768,"byte_end":54780,"line_start":234,"line_end":234,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54781,"byte_end":54784,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ Unlike [`RefMut`], which borrows the pool, an `OwnedRefMut` clones the `Arc`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54785,"byte_end":54865,"line_start":236,"line_end":236,"column_start":1,"column_end":81}},{"value":"/ around the pool. Therefore, it keeps the pool from being dropped until all","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54866,"byte_end":54944,"line_start":237,"line_end":237,"column_start":1,"column_end":79}},{"value":"/ such guards have been dropped. This means that an `OwnedRefMut` may be held for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":54945,"byte_end":55028,"line_start":238,"line_end":238,"column_start":1,"column_end":84}},{"value":"/ an arbitrary lifetime.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55029,"byte_end":55055,"line_start":239,"line_end":239,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55056,"byte_end":55059,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55060,"byte_end":55074,"line_start":241,"line_end":241,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55075,"byte_end":55078,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55079,"byte_end":55090,"line_start":243,"line_end":243,"column_start":1,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55091,"byte_end":55120,"line_start":244,"line_end":244,"column_start":1,"column_end":30}},{"value":"/ # use std::thread;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55121,"byte_end":55143,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55144,"byte_end":55167,"line_start":246,"line_end":246,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55168,"byte_end":55171,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55172,"byte_end":55228,"line_start":248,"line_end":248,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55229,"byte_end":55232,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ // Create a new pooled item, returning an owned guard that allows mutable","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55233,"byte_end":55310,"line_start":250,"line_end":250,"column_start":1,"column_end":78}},{"value":"/ // access to the new item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55311,"byte_end":55341,"line_start":251,"line_end":251,"column_start":1,"column_end":31}},{"value":"/ let mut item = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55342,"byte_end":55398,"line_start":252,"line_end":252,"column_start":1,"column_end":57}},{"value":"/ // Return a key that allows indexing the created item once the guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55399,"byte_end":55471,"line_start":253,"line_end":253,"column_start":1,"column_end":73}},{"value":"/ // has been dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55472,"byte_end":55496,"line_start":254,"line_end":254,"column_start":1,"column_end":25}},{"value":"/ let key = item.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55497,"byte_end":55522,"line_start":255,"line_end":255,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55523,"byte_end":55526,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ // Mutate the item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55527,"byte_end":55550,"line_start":257,"line_end":257,"column_start":1,"column_end":24}},{"value":"/ item.push_str(\"Hello\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55551,"byte_end":55578,"line_start":258,"line_end":258,"column_start":1,"column_end":28}},{"value":"/ // Drop the guard, releasing mutable access to the new item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55579,"byte_end":55643,"line_start":259,"line_end":259,"column_start":1,"column_end":65}},{"value":"/ drop(item);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55644,"byte_end":55659,"line_start":260,"line_end":260,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55660,"byte_end":55663,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ /// Other threads may now (immutably) access the item using the returned key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55664,"byte_end":55745,"line_start":262,"line_end":262,"column_start":1,"column_end":82}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55746,"byte_end":55773,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"/    assert_eq!(pool.get(key).unwrap(), String::from(\"Hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55774,"byte_end":55839,"line_start":264,"line_end":264,"column_start":1,"column_end":66}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55840,"byte_end":55863,"line_start":265,"line_end":265,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55864,"byte_end":55871,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55872,"byte_end":55875,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55876,"byte_end":55887,"line_start":268,"line_end":268,"column_start":1,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55888,"byte_end":55917,"line_start":269,"line_end":269,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55918,"byte_end":55941,"line_start":270,"line_end":270,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55942,"byte_end":55945,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":55946,"byte_end":56002,"line_start":272,"line_end":272,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56003,"byte_end":56006,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ // Create a new item, returning an owned, mutable guard.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56007,"byte_end":56067,"line_start":274,"line_end":274,"column_start":1,"column_end":61}},{"value":"/ let mut value = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56068,"byte_end":56125,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56126,"byte_end":56129,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ // Now, the original `Arc` clone of the pool may be dropped, but the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56130,"byte_end":56202,"line_start":277,"line_end":277,"column_start":1,"column_end":73}},{"value":"/ // returned `OwnedRefMut` can still access the value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56203,"byte_end":56260,"line_start":278,"line_end":278,"column_start":1,"column_end":58}},{"value":"/ drop(pool);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56261,"byte_end":56276,"line_start":279,"line_end":279,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56277,"byte_end":56280,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ value.push_str(\"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56281,"byte_end":56315,"line_start":281,"line_end":281,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(value, String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56316,"byte_end":56367,"line_start":282,"line_end":282,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56368,"byte_end":56375,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56376,"byte_end":56379,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ Unlike [`RefMut`], an `OwnedRefMut` may be stored in a struct which must live","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56380,"byte_end":56461,"line_start":285,"line_end":285,"column_start":1,"column_end":82}},{"value":"/ for the `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56462,"byte_end":56493,"line_start":286,"line_end":286,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56494,"byte_end":56497,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56498,"byte_end":56505,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56506,"byte_end":56535,"line_start":289,"line_end":289,"column_start":1,"column_end":30}},{"value":"/ use sharded_slab::pool::OwnedRefMut;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56536,"byte_end":56576,"line_start":290,"line_end":290,"column_start":1,"column_end":41}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56577,"byte_end":56600,"line_start":291,"line_end":291,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56601,"byte_end":56604,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ pub struct MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56605,"byte_end":56630,"line_start":293,"line_end":293,"column_start":1,"column_end":26}},{"value":"/     pool_ref: OwnedRefMut<String>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56631,"byte_end":56669,"line_start":294,"line_end":294,"column_start":1,"column_end":39}},{"value":"/     // ... other fields ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56670,"byte_end":56701,"line_start":295,"line_end":295,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56702,"byte_end":56707,"line_start":296,"line_end":296,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56708,"byte_end":56711,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ // Suppose this is some arbitrary function which requires a value that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56712,"byte_end":56786,"line_start":298,"line_end":298,"column_start":1,"column_end":75}},{"value":"/ // lives for the 'static lifetime...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56787,"byte_end":56827,"line_start":299,"line_end":299,"column_start":1,"column_end":41}},{"value":"/ fn function_requiring_static<T: 'static>(t: &T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56828,"byte_end":56881,"line_start":300,"line_end":300,"column_start":1,"column_end":54}},{"value":"/     // ... do something extremely important and interesting ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56882,"byte_end":56949,"line_start":301,"line_end":301,"column_start":1,"column_end":68}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56950,"byte_end":56955,"line_start":302,"line_end":302,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56956,"byte_end":56959,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":56960,"byte_end":57016,"line_start":304,"line_end":304,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57017,"byte_end":57020,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ // Create a new item, returning a mutable owned reference.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57021,"byte_end":57083,"line_start":306,"line_end":306,"column_start":1,"column_end":63}},{"value":"/ let pool_ref = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57084,"byte_end":57140,"line_start":307,"line_end":307,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57141,"byte_end":57144,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57145,"byte_end":57175,"line_start":309,"line_end":309,"column_start":1,"column_end":31}},{"value":"/     pool_ref,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57176,"byte_end":57193,"line_start":310,"line_end":310,"column_start":1,"column_end":18}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57194,"byte_end":57208,"line_start":311,"line_end":311,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57209,"byte_end":57215,"line_start":312,"line_end":312,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57216,"byte_end":57219,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ // We can use `my_struct` anywhere where it is required to have the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57220,"byte_end":57291,"line_start":314,"line_end":314,"column_start":1,"column_end":72}},{"value":"/ // `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57292,"byte_end":57318,"line_start":315,"line_end":315,"column_start":1,"column_end":27}},{"value":"/ function_requiring_static(&my_struct);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57319,"byte_end":57361,"line_start":316,"line_end":316,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57362,"byte_end":57369,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57370,"byte_end":57373,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ `OwnedRefMut`s may be sent between threads:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57374,"byte_end":57421,"line_start":319,"line_end":319,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57422,"byte_end":57425,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57426,"byte_end":57433,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57434,"byte_end":57463,"line_start":322,"line_end":322,"column_start":1,"column_end":30}},{"value":"/ use std::{thread, sync::Arc};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57464,"byte_end":57497,"line_start":323,"line_end":323,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57498,"byte_end":57501,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57502,"byte_end":57558,"line_start":325,"line_end":325,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57559,"byte_end":57562,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ let mut value = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57563,"byte_end":57620,"line_start":327,"line_end":327,"column_start":1,"column_end":58}},{"value":"/ let key = value.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57621,"byte_end":57647,"line_start":328,"line_end":328,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57648,"byte_end":57651,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57652,"byte_end":57679,"line_start":330,"line_end":330,"column_start":1,"column_end":28}},{"value":"/     value.push_str(\"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57680,"byte_end":57718,"line_start":331,"line_end":331,"column_start":1,"column_end":39}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57719,"byte_end":57733,"line_start":332,"line_end":332,"column_start":1,"column_end":15}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57734,"byte_end":57757,"line_start":333,"line_end":333,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57758,"byte_end":57761,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ // Once the `OwnedRefMut` has been dropped by the other thread, we may","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57762,"byte_end":57836,"line_start":335,"line_end":335,"column_start":1,"column_end":75}},{"value":"/ // now access the value immutably on this thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57837,"byte_end":57890,"line_start":336,"line_end":336,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57891,"byte_end":57894,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57895,"byte_end":57963,"line_start":338,"line_end":338,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57964,"byte_end":57971,"line_start":339,"line_end":339,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57972,"byte_end":57975,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ Downgrading from a mutable to an immutable reference:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":57976,"byte_end":58033,"line_start":341,"line_end":341,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58034,"byte_end":58037,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58038,"byte_end":58045,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58046,"byte_end":58075,"line_start":344,"line_end":344,"column_start":1,"column_end":30}},{"value":"/ use std::{thread, sync::Arc};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58076,"byte_end":58109,"line_start":345,"line_end":345,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58110,"byte_end":58113,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58114,"byte_end":58170,"line_start":347,"line_end":347,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58171,"byte_end":58174,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ let mut value = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58175,"byte_end":58232,"line_start":349,"line_end":349,"column_start":1,"column_end":58}},{"value":"/ let key = value.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58233,"byte_end":58259,"line_start":350,"line_end":350,"column_start":1,"column_end":27}},{"value":"/ value.push_str(\"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58260,"byte_end":58294,"line_start":351,"line_end":351,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58295,"byte_end":58298,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ // Downgrade the mutable owned ref to an immutable owned ref.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58299,"byte_end":58364,"line_start":353,"line_end":353,"column_start":1,"column_end":66}},{"value":"/ let value = value.downgrade();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58365,"byte_end":58399,"line_start":354,"line_end":354,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58400,"byte_end":58403,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ // Once the `OwnedRefMut` has been downgraded, other threads may","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58404,"byte_end":58472,"line_start":356,"line_end":356,"column_start":1,"column_end":69}},{"value":"/ // immutably access the pooled value:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58473,"byte_end":58514,"line_start":357,"line_end":357,"column_start":1,"column_end":42}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58515,"byte_end":58542,"line_start":358,"line_end":358,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58543,"byte_end":58615,"line_start":359,"line_end":359,"column_start":1,"column_end":73}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58616,"byte_end":58639,"line_start":360,"line_end":360,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58640,"byte_end":58643,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ // This thread can still access the pooled value through the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58644,"byte_end":58708,"line_start":362,"line_end":362,"column_start":1,"column_end":65}},{"value":"/ // immutable owned ref:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58709,"byte_end":58736,"line_start":363,"line_end":363,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(value, String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58737,"byte_end":58788,"line_start":364,"line_end":364,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58789,"byte_end":58796,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58797,"byte_end":58800,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`Pool::create_owned`]: crate::Pool::create_owned","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58801,"byte_end":58854,"line_start":367,"line_end":367,"column_start":1,"column_end":54}},{"value":"/ [`RefMut`]: crate::pool::RefMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58855,"byte_end":58890,"line_start":368,"line_end":368,"column_start":1,"column_end":36}},{"value":"/ [`OwnedRefMut`]: crate::pool::OwnedRefMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58891,"byte_end":58936,"line_start":369,"line_end":369,"column_start":1,"column_end":46}},{"value":"/ [downgraded]: crate::pool::OwnedRefMut::downgrade","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":58937,"byte_end":58990,"line_start":370,"line_end":370,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59305,"byte_end":59308,"line_start":386,"line_end":386,"column_start":12,"column_end":15},"name":"new","qualname":"<Pool<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Pool` with the default configuration parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new `Pool` with the default configuration parameters.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59226,"byte_end":59293,"line_start":385,"line_end":385,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59444,"byte_end":59459,"line_start":391,"line_end":391,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<Pool<T>>::new_with_config","value":"pub fn new_with_config<C: cfg::Config>() -> Pool<T, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Pool` with the provided configuration parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new `Pool` with the provided configuration parameters.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59364,"byte_end":59432,"line_start":390,"line_end":390,"column_start":5,"column_end":73}}]},{"kind":"Const","id":{"krate":0,"index":87},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60360,"byte_end":60369,"line_start":418,"line_end":418,"column_start":15,"column_end":24},"name":"USED_BITS","qualname":"::pool::Pool::<T, C>::USED_BITS","value":"usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" The number of bits in each index which are used by the pool.","sig":null,"attributes":[{"value":"/ The number of bits in each index which are used by the pool.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59701,"byte_end":59765,"line_start":405,"line_end":405,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59770,"byte_end":59773,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If other data is packed into the `usize` indices returned by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59778,"byte_end":59842,"line_start":407,"line_end":407,"column_start":5,"column_end":69}},{"value":"/ [`Pool::create`], user code is free to use any bits higher than the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59847,"byte_end":59918,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/ `USED_BITS`-th bit freely.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59923,"byte_end":59953,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59958,"byte_end":59961,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This is determined by the [`Config`] type that configures the pool's","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59966,"byte_end":60038,"line_start":411,"line_end":411,"column_start":5,"column_end":77}},{"value":"/ parameters. By default, all bits are used; this can be changed by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60043,"byte_end":60112,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ overriding the [`Config::RESERVED_BITS`][res] constant.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60117,"byte_end":60176,"line_start":413,"line_end":413,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60181,"byte_end":60184,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`Config`]: trait.Config.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60189,"byte_end":60222,"line_start":415,"line_end":415,"column_start":5,"column_end":38}},{"value":"/ [res]: trait.Config.html#associatedconstant.RESERVED_BITS","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60227,"byte_end":60288,"line_start":416,"line_end":416,"column_start":5,"column_end":66}},{"value":"/ [`Slab::insert`]: struct.Slab.html#method.insert","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60293,"byte_end":60345,"line_start":417,"line_end":417,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61623,"byte_end":61629,"line_start":451,"line_end":451,"column_start":12,"column_end":18},"name":"create","qualname":"<Pool<T, C>>::create","value":"pub fn create(&Self) -> Option<RefMut<, T, C>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object in the pool, returning an [`RefMut`] guard that\n may be used to mutate the new object.","sig":null,"attributes":[{"value":"/ Creates a new object in the pool, returning an [`RefMut`] guard that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60398,"byte_end":60470,"line_start":420,"line_end":420,"column_start":5,"column_end":77}},{"value":"/ may be used to mutate the new object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60475,"byte_end":60516,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60521,"byte_end":60524,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If this function returns `None`, then the shard for the current thread is full and no items","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60529,"byte_end":60624,"line_start":423,"line_end":423,"column_start":5,"column_end":100}},{"value":"/ can be added until some are removed, or the maximum number of shards has been reached.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60629,"byte_end":60719,"line_start":424,"line_end":424,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60724,"byte_end":60727,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60732,"byte_end":60746,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60751,"byte_end":60762,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60767,"byte_end":60796,"line_start":428,"line_end":428,"column_start":5,"column_end":34}},{"value":"/ # use std::thread;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60801,"byte_end":60823,"line_start":429,"line_end":429,"column_start":5,"column_end":27}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60828,"byte_end":60869,"line_start":430,"line_end":430,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60874,"byte_end":60877,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ // Create a new pooled item, returning a guard that allows mutable","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60882,"byte_end":60952,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/ // access to the new item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60957,"byte_end":60987,"line_start":433,"line_end":433,"column_start":5,"column_end":35}},{"value":"/ let mut item = pool.create().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":60992,"byte_end":61034,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/ // Return a key that allows indexing the created item once the guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61039,"byte_end":61111,"line_start":435,"line_end":435,"column_start":5,"column_end":77}},{"value":"/ // has been dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61116,"byte_end":61140,"line_start":436,"line_end":436,"column_start":5,"column_end":29}},{"value":"/ let key = item.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61145,"byte_end":61170,"line_start":437,"line_end":437,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61175,"byte_end":61178,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ // Mutate the item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61183,"byte_end":61206,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/ item.push_str(\"Hello\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61211,"byte_end":61238,"line_start":440,"line_end":440,"column_start":5,"column_end":32}},{"value":"/ // Drop the guard, releasing mutable access to the new item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61243,"byte_end":61307,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ drop(item);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61312,"byte_end":61327,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61332,"byte_end":61335,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ /// Other threads may now (immutably) access the item using the returned key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61340,"byte_end":61421,"line_start":444,"line_end":444,"column_start":5,"column_end":86}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61426,"byte_end":61453,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/    assert_eq!(pool.get(key).unwrap(), String::from(\"Hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61458,"byte_end":61523,"line_start":446,"line_end":446,"column_start":5,"column_end":70}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61528,"byte_end":61551,"line_start":447,"line_end":447,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61556,"byte_end":61563,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61568,"byte_end":61571,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`RefMut`]: crate::pool::RefMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":61576,"byte_end":61611,"line_start":450,"line_end":450,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67881,"byte_end":67893,"line_start":619,"line_end":619,"column_start":12,"column_end":24},"name":"create_owned","qualname":"<Pool<T, C>>::create_owned","value":"pub fn create_owned(Arc<Self>) -> Option<OwnedRefMut<T, C>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object in the pool, returning an [`OwnedRefMut`] guard that\n may be used to mutate the new object.","sig":null,"attributes":[{"value":"/ Creates a new object in the pool, returning an [`OwnedRefMut`] guard that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62071,"byte_end":62148,"line_start":466,"line_end":466,"column_start":5,"column_end":82}},{"value":"/ may be used to mutate the new object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62153,"byte_end":62194,"line_start":467,"line_end":467,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62199,"byte_end":62202,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ If this function returns `None`, then the shard for the current thread","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62207,"byte_end":62281,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ is full and no items can be added until some are removed, or the maximum","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62286,"byte_end":62362,"line_start":470,"line_end":470,"column_start":5,"column_end":81}},{"value":"/ number of shards has been reached.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62367,"byte_end":62405,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62410,"byte_end":62413,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Unlike [`create`], which borrows the pool, this method _clones_ the `Arc`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62418,"byte_end":62495,"line_start":473,"line_end":473,"column_start":5,"column_end":82}},{"value":"/ around the pool if a value exists for the given key. This means that the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62500,"byte_end":62576,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ returned [`OwnedRefMut`] can be held for an arbitrary lifetime. However,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62581,"byte_end":62657,"line_start":475,"line_end":475,"column_start":5,"column_end":81}},{"value":"/ this method requires that the pool itself be wrapped in an `Arc`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62662,"byte_end":62731,"line_start":476,"line_end":476,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62736,"byte_end":62739,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ An `OwnedRefMut<T>` functions more or less identically to an owned","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62744,"byte_end":62814,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"/ `Box<T>`: it can be passed to functions, stored in structure fields, and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62819,"byte_end":62895,"line_start":479,"line_end":479,"column_start":5,"column_end":81}},{"value":"/ borrowed mutably or immutably, and can be owned for arbitrary lifetimes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62900,"byte_end":62976,"line_start":480,"line_end":480,"column_start":5,"column_end":81}},{"value":"/ The difference is that, unlike a `Box<T>`, the memory allocation for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":62981,"byte_end":63057,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/ `T` lives in the `Pool`; when an `OwnedRefMut` is created, it may reuse","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63062,"byte_end":63137,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ memory that was allocated for a previous pooled object that has been","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63142,"byte_end":63214,"line_start":483,"line_end":483,"column_start":5,"column_end":77}},{"value":"/ cleared. Additionally, the `OwnedRefMut` may be [downgraded] to an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63219,"byte_end":63289,"line_start":484,"line_end":484,"column_start":5,"column_end":75}},{"value":"/ [`OwnedRef`] which may be shared freely, essentially turning the `Box`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63294,"byte_end":63368,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/ into an `Arc`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63373,"byte_end":63391,"line_start":486,"line_end":486,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63396,"byte_end":63399,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63404,"byte_end":63418,"line_start":488,"line_end":488,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63423,"byte_end":63426,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63431,"byte_end":63442,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63447,"byte_end":63476,"line_start":491,"line_end":491,"column_start":5,"column_end":34}},{"value":"/ # use std::thread;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63481,"byte_end":63503,"line_start":492,"line_end":492,"column_start":5,"column_end":27}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63508,"byte_end":63531,"line_start":493,"line_end":493,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63536,"byte_end":63539,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63544,"byte_end":63600,"line_start":495,"line_end":495,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63605,"byte_end":63608,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ // Create a new pooled item, returning an owned guard that allows mutable","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63613,"byte_end":63690,"line_start":497,"line_end":497,"column_start":5,"column_end":82}},{"value":"/ // access to the new item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63695,"byte_end":63725,"line_start":498,"line_end":498,"column_start":5,"column_end":35}},{"value":"/ let mut item = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63730,"byte_end":63786,"line_start":499,"line_end":499,"column_start":5,"column_end":61}},{"value":"/ // Return a key that allows indexing the created item once the guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63791,"byte_end":63863,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ // has been dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63868,"byte_end":63892,"line_start":501,"line_end":501,"column_start":5,"column_end":29}},{"value":"/ let key = item.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63897,"byte_end":63922,"line_start":502,"line_end":502,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63927,"byte_end":63930,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ // Mutate the item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63935,"byte_end":63958,"line_start":504,"line_end":504,"column_start":5,"column_end":28}},{"value":"/ item.push_str(\"Hello\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63963,"byte_end":63990,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/ // Drop the guard, releasing mutable access to the new item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":63995,"byte_end":64059,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/ drop(item);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64064,"byte_end":64079,"line_start":507,"line_end":507,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64084,"byte_end":64087,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ /// Other threads may now (immutably) access the item using the returned key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64092,"byte_end":64173,"line_start":509,"line_end":509,"column_start":5,"column_end":86}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64178,"byte_end":64205,"line_start":510,"line_end":510,"column_start":5,"column_end":32}},{"value":"/    assert_eq!(pool.get(key).unwrap(), String::from(\"Hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64210,"byte_end":64275,"line_start":511,"line_end":511,"column_start":5,"column_end":70}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64280,"byte_end":64303,"line_start":512,"line_end":512,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64308,"byte_end":64315,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64320,"byte_end":64323,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64328,"byte_end":64339,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64344,"byte_end":64373,"line_start":516,"line_end":516,"column_start":5,"column_end":34}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64378,"byte_end":64401,"line_start":517,"line_end":517,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64406,"byte_end":64409,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64414,"byte_end":64470,"line_start":519,"line_end":519,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64475,"byte_end":64478,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ // Create a new item, returning an owned, mutable guard.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64483,"byte_end":64543,"line_start":521,"line_end":521,"column_start":5,"column_end":65}},{"value":"/ let mut value = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64548,"byte_end":64605,"line_start":522,"line_end":522,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64610,"byte_end":64613,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ // Now, the original `Arc` clone of the pool may be dropped, but the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64618,"byte_end":64690,"line_start":524,"line_end":524,"column_start":5,"column_end":77}},{"value":"/ // returned `OwnedRefMut` can still access the value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64695,"byte_end":64752,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ drop(pool);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64757,"byte_end":64772,"line_start":526,"line_end":526,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64777,"byte_end":64780,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ value.push_str(\"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64785,"byte_end":64819,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(value, String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64824,"byte_end":64875,"line_start":529,"line_end":529,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64880,"byte_end":64887,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64892,"byte_end":64895,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Unlike [`RefMut`], an `OwnedRefMut` may be stored in a struct which must live","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64900,"byte_end":64981,"line_start":532,"line_end":532,"column_start":5,"column_end":86}},{"value":"/ for the `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":64986,"byte_end":65017,"line_start":533,"line_end":533,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65022,"byte_end":65025,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65030,"byte_end":65037,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65042,"byte_end":65071,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/ use sharded_slab::pool::OwnedRefMut;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65076,"byte_end":65116,"line_start":537,"line_end":537,"column_start":5,"column_end":45}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65121,"byte_end":65144,"line_start":538,"line_end":538,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65149,"byte_end":65152,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ pub struct MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65157,"byte_end":65182,"line_start":540,"line_end":540,"column_start":5,"column_end":30}},{"value":"/     pool_ref: OwnedRefMut<String>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65187,"byte_end":65225,"line_start":541,"line_end":541,"column_start":5,"column_end":43}},{"value":"/     // ... other fields ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65230,"byte_end":65261,"line_start":542,"line_end":542,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65266,"byte_end":65271,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65276,"byte_end":65279,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ // Suppose this is some arbitrary function which requires a value that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65284,"byte_end":65358,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ // lives for the 'static lifetime...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65363,"byte_end":65403,"line_start":546,"line_end":546,"column_start":5,"column_end":45}},{"value":"/ fn function_requiring_static<T: 'static>(t: &T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65408,"byte_end":65461,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/     // ... do something extremely important and interesting ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65466,"byte_end":65533,"line_start":548,"line_end":548,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65538,"byte_end":65543,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65548,"byte_end":65551,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65556,"byte_end":65612,"line_start":551,"line_end":551,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65617,"byte_end":65620,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ // Create a new item, returning a mutable owned reference.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65625,"byte_end":65687,"line_start":553,"line_end":553,"column_start":5,"column_end":67}},{"value":"/ let pool_ref = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65692,"byte_end":65748,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65753,"byte_end":65756,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65761,"byte_end":65791,"line_start":556,"line_end":556,"column_start":5,"column_end":35}},{"value":"/     pool_ref,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65796,"byte_end":65813,"line_start":557,"line_end":557,"column_start":5,"column_end":22}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65818,"byte_end":65832,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65837,"byte_end":65843,"line_start":559,"line_end":559,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65848,"byte_end":65851,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ // We can use `my_struct` anywhere where it is required to have the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65856,"byte_end":65927,"line_start":561,"line_end":561,"column_start":5,"column_end":76}},{"value":"/ // `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65932,"byte_end":65958,"line_start":562,"line_end":562,"column_start":5,"column_end":31}},{"value":"/ function_requiring_static(&my_struct);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":65963,"byte_end":66005,"line_start":563,"line_end":563,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66010,"byte_end":66017,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66022,"byte_end":66025,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ `OwnedRefMut`s may be sent between threads:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66030,"byte_end":66077,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66082,"byte_end":66085,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66090,"byte_end":66097,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66102,"byte_end":66131,"line_start":569,"line_end":569,"column_start":5,"column_end":34}},{"value":"/ use std::{thread, sync::Arc};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66136,"byte_end":66169,"line_start":570,"line_end":570,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66174,"byte_end":66177,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66182,"byte_end":66238,"line_start":572,"line_end":572,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66243,"byte_end":66246,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ let mut value = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66251,"byte_end":66308,"line_start":574,"line_end":574,"column_start":5,"column_end":62}},{"value":"/ let key = value.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66313,"byte_end":66339,"line_start":575,"line_end":575,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66344,"byte_end":66347,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66352,"byte_end":66379,"line_start":577,"line_end":577,"column_start":5,"column_end":32}},{"value":"/     value.push_str(\"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66384,"byte_end":66422,"line_start":578,"line_end":578,"column_start":5,"column_end":43}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66427,"byte_end":66441,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66446,"byte_end":66469,"line_start":580,"line_end":580,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66474,"byte_end":66477,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ // Once the `OwnedRefMut` has been dropped by the other thread, we may","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66482,"byte_end":66556,"line_start":582,"line_end":582,"column_start":5,"column_end":79}},{"value":"/ // now access the value immutably on this thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66561,"byte_end":66614,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66619,"byte_end":66622,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66627,"byte_end":66695,"line_start":585,"line_end":585,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66700,"byte_end":66707,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66712,"byte_end":66715,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Downgrading from a mutable to an immutable reference:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66720,"byte_end":66777,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66782,"byte_end":66785,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66790,"byte_end":66797,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66802,"byte_end":66831,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ use std::{thread, sync::Arc};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66836,"byte_end":66869,"line_start":592,"line_end":592,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66874,"byte_end":66877,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66882,"byte_end":66938,"line_start":594,"line_end":594,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66943,"byte_end":66946,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let mut value = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":66951,"byte_end":67008,"line_start":596,"line_end":596,"column_start":5,"column_end":62}},{"value":"/ let key = value.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67013,"byte_end":67039,"line_start":597,"line_end":597,"column_start":5,"column_end":31}},{"value":"/ value.push_str(\"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67044,"byte_end":67078,"line_start":598,"line_end":598,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67083,"byte_end":67086,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ // Downgrade the mutable owned ref to an immutable owned ref.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67091,"byte_end":67156,"line_start":600,"line_end":600,"column_start":5,"column_end":70}},{"value":"/ let value = value.downgrade();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67161,"byte_end":67195,"line_start":601,"line_end":601,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67200,"byte_end":67203,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ // Once the `OwnedRefMut` has been downgraded, other threads may","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67208,"byte_end":67276,"line_start":603,"line_end":603,"column_start":5,"column_end":73}},{"value":"/ // immutably access the pooled value:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67281,"byte_end":67322,"line_start":604,"line_end":604,"column_start":5,"column_end":46}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67327,"byte_end":67354,"line_start":605,"line_end":605,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67359,"byte_end":67431,"line_start":606,"line_end":606,"column_start":5,"column_end":77}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67436,"byte_end":67459,"line_start":607,"line_end":607,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67464,"byte_end":67467,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ // This thread can still access the pooled value through the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67472,"byte_end":67536,"line_start":609,"line_end":609,"column_start":5,"column_end":69}},{"value":"/ // immutable owned ref:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67541,"byte_end":67568,"line_start":610,"line_end":610,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(value, String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67573,"byte_end":67624,"line_start":611,"line_end":611,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67629,"byte_end":67636,"line_start":612,"line_end":612,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67641,"byte_end":67644,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ [`create`]: Pool::create","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67649,"byte_end":67677,"line_start":614,"line_end":614,"column_start":5,"column_end":33}},{"value":"/ [`OwnedRef`]: crate::pool::OwnedRef","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67682,"byte_end":67721,"line_start":615,"line_end":615,"column_start":5,"column_end":44}},{"value":"/ [`RefMut`]: crate::pool::RefMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67726,"byte_end":67761,"line_start":616,"line_end":616,"column_start":5,"column_end":40}},{"value":"/ [`OwnedRefMut`]: crate::pool::OwnedRefMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67766,"byte_end":67811,"line_start":617,"line_end":617,"column_start":5,"column_end":50}},{"value":"/ [downgraded]: crate::pool::OwnedRefMut::downgrade","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":67816,"byte_end":67869,"line_start":618,"line_end":618,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69225,"byte_end":69236,"line_start":654,"line_end":654,"column_start":12,"column_end":23},"name":"create_with","qualname":"<Pool<T, C>>::create_with","value":"pub fn create_with<impl FnOnce(&mut T): FnOnce(&mut T) ->\n()>(&Self, impl FnOnce(&mut T)) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object in the pool with the provided initializer,\n returning a key that may be used to access the new object.","sig":null,"attributes":[{"value":"/ Creates a new object in the pool with the provided initializer,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68357,"byte_end":68424,"line_start":634,"line_end":634,"column_start":5,"column_end":72}},{"value":"/ returning a key that may be used to access the new object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68429,"byte_end":68491,"line_start":635,"line_end":635,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68496,"byte_end":68499,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ If this function returns `None`, then the shard for the current thread is full and no items","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68504,"byte_end":68599,"line_start":637,"line_end":637,"column_start":5,"column_end":100}},{"value":"/ can be added until some are removed, or the maximum number of shards has been reached.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68604,"byte_end":68694,"line_start":638,"line_end":638,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68699,"byte_end":68702,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68707,"byte_end":68721,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68726,"byte_end":68737,"line_start":641,"line_end":641,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68742,"byte_end":68771,"line_start":642,"line_end":642,"column_start":5,"column_end":34}},{"value":"/ # use std::thread;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68776,"byte_end":68798,"line_start":643,"line_end":643,"column_start":5,"column_end":27}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68803,"byte_end":68844,"line_start":644,"line_end":644,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68849,"byte_end":68852,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ // Create a new pooled item, returning its integer key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68857,"byte_end":68916,"line_start":646,"line_end":646,"column_start":5,"column_end":64}},{"value":"/ let key = pool.create_with(|s| s.push_str(\"Hello\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68921,"byte_end":68986,"line_start":647,"line_end":647,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68991,"byte_end":68994,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ /// Other threads may now (immutably) access the item using the key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":68999,"byte_end":69071,"line_start":649,"line_end":649,"column_start":5,"column_end":77}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69076,"byte_end":69103,"line_start":650,"line_end":650,"column_start":5,"column_end":32}},{"value":"/    assert_eq!(pool.get(key).unwrap(), String::from(\"Hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69108,"byte_end":69173,"line_start":651,"line_end":651,"column_start":5,"column_end":70}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69178,"byte_end":69201,"line_start":652,"line_end":652,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69206,"byte_end":69213,"line_start":653,"line_end":653,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69974,"byte_end":69977,"line_start":675,"line_end":675,"column_start":12,"column_end":15},"name":"get","qualname":"<Pool<T, C>>::get","value":"pub fn get(&Self, usize) -> Option<Ref<, T, C>>","parent":null,"children":[],"decl_id":null,"docs":" Return a borrowed reference to the value associated with the given key.","sig":null,"attributes":[{"value":"/ Return a borrowed reference to the value associated with the given key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69437,"byte_end":69512,"line_start":661,"line_end":661,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69517,"byte_end":69520,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ If the pool does not contain a value for the given key, `None` is returned instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69525,"byte_end":69612,"line_start":663,"line_end":663,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69617,"byte_end":69620,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69625,"byte_end":69639,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69644,"byte_end":69647,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69652,"byte_end":69663,"line_start":667,"line_end":667,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69668,"byte_end":69697,"line_start":668,"line_end":668,"column_start":5,"column_end":34}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69702,"byte_end":69743,"line_start":669,"line_end":669,"column_start":5,"column_end":46}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69748,"byte_end":69825,"line_start":670,"line_end":670,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69830,"byte_end":69833,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69838,"byte_end":69906,"line_start":672,"line_end":672,"column_start":5,"column_end":73}},{"value":"/ assert!(pool.get(12345).is_none());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69911,"byte_end":69950,"line_start":673,"line_end":673,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":69955,"byte_end":69962,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73335,"byte_end":73344,"line_start":766,"line_end":766,"column_start":12,"column_end":21},"name":"get_owned","qualname":"<Pool<T, C>>::get_owned","value":"pub fn get_owned(Arc<Self>, usize) -> Option<OwnedRef<T, C>>","parent":null,"children":[],"decl_id":null,"docs":" Return an owned reference to the value associated with the given key.","sig":null,"attributes":[{"value":"/ Return an owned reference to the value associated with the given key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70328,"byte_end":70401,"line_start":684,"line_end":684,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70406,"byte_end":70409,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ If the pool does not contain a value for the given key, `None` is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70414,"byte_end":70483,"line_start":686,"line_end":686,"column_start":5,"column_end":74}},{"value":"/ returned instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70488,"byte_end":70509,"line_start":687,"line_end":687,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70514,"byte_end":70517,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ Unlike [`get`], which borrows the pool, this method _clones_ the `Arc`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70522,"byte_end":70596,"line_start":689,"line_end":689,"column_start":5,"column_end":79}},{"value":"/ around the pool if a value exists for the given key. This means that the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70601,"byte_end":70677,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ returned [`OwnedRef`] can be held for an arbitrary lifetime. However,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70682,"byte_end":70755,"line_start":691,"line_end":691,"column_start":5,"column_end":78}},{"value":"/ this method requires that the pool itself be wrapped in an `Arc`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70760,"byte_end":70829,"line_start":692,"line_end":692,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70834,"byte_end":70837,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70842,"byte_end":70856,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70861,"byte_end":70864,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70869,"byte_end":70880,"line_start":696,"line_end":696,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70885,"byte_end":70914,"line_start":697,"line_end":697,"column_start":5,"column_end":34}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70919,"byte_end":70942,"line_start":698,"line_end":698,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70947,"byte_end":70950,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":70955,"byte_end":71011,"line_start":700,"line_end":700,"column_start":5,"column_end":61}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71016,"byte_end":71093,"line_start":701,"line_end":701,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71098,"byte_end":71101,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ // Look up the created `Key`, returning an `OwnedRef`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71106,"byte_end":71164,"line_start":703,"line_end":703,"column_start":5,"column_end":63}},{"value":"/ let value = pool.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71169,"byte_end":71222,"line_start":704,"line_end":704,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71227,"byte_end":71230,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ // Now, the original `Arc` clone of the pool may be dropped, but the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71235,"byte_end":71307,"line_start":706,"line_end":706,"column_start":5,"column_end":77}},{"value":"/ // returned `OwnedRef` can still access the value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71312,"byte_end":71366,"line_start":707,"line_end":707,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(value, String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71371,"byte_end":71422,"line_start":708,"line_end":708,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71427,"byte_end":71434,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71439,"byte_end":71442,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Ref`], an `OwnedRef` may be stored in a struct which must live","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71447,"byte_end":71522,"line_start":711,"line_end":711,"column_start":5,"column_end":80}},{"value":"/ for the `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71527,"byte_end":71558,"line_start":712,"line_end":712,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71563,"byte_end":71566,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71571,"byte_end":71578,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71583,"byte_end":71612,"line_start":715,"line_end":715,"column_start":5,"column_end":34}},{"value":"/ use sharded_slab::pool::OwnedRef;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71617,"byte_end":71654,"line_start":716,"line_end":716,"column_start":5,"column_end":42}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71659,"byte_end":71682,"line_start":717,"line_end":717,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71687,"byte_end":71690,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ pub struct MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71695,"byte_end":71720,"line_start":719,"line_end":719,"column_start":5,"column_end":30}},{"value":"/     pool_ref: OwnedRef<String>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71725,"byte_end":71760,"line_start":720,"line_end":720,"column_start":5,"column_end":40}},{"value":"/     // ... other fields ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71765,"byte_end":71796,"line_start":721,"line_end":721,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71801,"byte_end":71806,"line_start":722,"line_end":722,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71811,"byte_end":71814,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ // Suppose this is some arbitrary function which requires a value that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71819,"byte_end":71893,"line_start":724,"line_end":724,"column_start":5,"column_end":79}},{"value":"/ // lives for the 'static lifetime...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71898,"byte_end":71938,"line_start":725,"line_end":725,"column_start":5,"column_end":45}},{"value":"/ fn function_requiring_static<T: 'static>(t: &T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":71943,"byte_end":71996,"line_start":726,"line_end":726,"column_start":5,"column_end":58}},{"value":"/     // ... do something extremely important and interesting ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72001,"byte_end":72068,"line_start":727,"line_end":727,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72073,"byte_end":72078,"line_start":728,"line_end":728,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72083,"byte_end":72086,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72091,"byte_end":72147,"line_start":730,"line_end":730,"column_start":5,"column_end":61}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72152,"byte_end":72229,"line_start":731,"line_end":731,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72234,"byte_end":72237,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // Look up the created `Key`, returning an `OwnedRef`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72242,"byte_end":72300,"line_start":733,"line_end":733,"column_start":5,"column_end":63}},{"value":"/ let pool_ref = pool.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72305,"byte_end":72361,"line_start":734,"line_end":734,"column_start":5,"column_end":61}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72366,"byte_end":72396,"line_start":735,"line_end":735,"column_start":5,"column_end":35}},{"value":"/     pool_ref,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72401,"byte_end":72418,"line_start":736,"line_end":736,"column_start":5,"column_end":22}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72423,"byte_end":72437,"line_start":737,"line_end":737,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72442,"byte_end":72448,"line_start":738,"line_end":738,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72453,"byte_end":72456,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ // We can use `my_struct` anywhere where it is required to have the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72461,"byte_end":72532,"line_start":740,"line_end":740,"column_start":5,"column_end":76}},{"value":"/ // `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72537,"byte_end":72563,"line_start":741,"line_end":741,"column_start":5,"column_end":31}},{"value":"/ function_requiring_static(&my_struct);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72568,"byte_end":72610,"line_start":742,"line_end":742,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72615,"byte_end":72622,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72627,"byte_end":72630,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ `OwnedRef`s may be sent between threads:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72635,"byte_end":72679,"line_start":745,"line_end":745,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72684,"byte_end":72687,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72692,"byte_end":72699,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72704,"byte_end":72733,"line_start":748,"line_end":748,"column_start":5,"column_end":34}},{"value":"/ use std::{thread, sync::Arc};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72738,"byte_end":72771,"line_start":749,"line_end":749,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72776,"byte_end":72779,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ let pool: Arc<Pool<String>> = Arc::new(Pool::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72784,"byte_end":72840,"line_start":751,"line_end":751,"column_start":5,"column_end":61}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"hello world\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72845,"byte_end":72922,"line_start":752,"line_end":752,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72927,"byte_end":72930,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ // Look up the created `Key`, returning an `OwnedRef`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72935,"byte_end":72993,"line_start":754,"line_end":754,"column_start":5,"column_end":63}},{"value":"/ let value = pool.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":72998,"byte_end":73051,"line_start":755,"line_end":755,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73056,"byte_end":73059,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73064,"byte_end":73091,"line_start":757,"line_end":757,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(value, String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73096,"byte_end":73151,"line_start":758,"line_end":758,"column_start":5,"column_end":60}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73156,"byte_end":73170,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73175,"byte_end":73198,"line_start":760,"line_end":760,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73203,"byte_end":73210,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73215,"byte_end":73218,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ [`get`]: Pool::get","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73223,"byte_end":73245,"line_start":763,"line_end":763,"column_start":5,"column_end":27}},{"value":"/ [`OwnedRef`]: crate::pool::OwnedRef","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73250,"byte_end":73289,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/ [`Ref`]: crate::pool::Ref","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73294,"byte_end":73323,"line_start":765,"line_end":765,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75261,"byte_end":75266,"line_start":820,"line_end":820,"column_start":12,"column_end":17},"name":"clear","qualname":"<Pool<T, C>>::clear","value":"pub fn clear(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value using the storage associated with the given key from the pool, returning\n `true` if the value was removed.","sig":null,"attributes":[{"value":"/ Remove the value using the storage associated with the given key from the pool, returning","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73769,"byte_end":73862,"line_start":779,"line_end":779,"column_start":5,"column_end":98}},{"value":"/ `true` if the value was removed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73867,"byte_end":73903,"line_start":780,"line_end":780,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73908,"byte_end":73911,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ This method does _not_ block the current thread until the value can be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73916,"byte_end":73990,"line_start":782,"line_end":782,"column_start":5,"column_end":79}},{"value":"/ cleared. Instead, if another thread is currently accessing that value, this marks it to be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":73995,"byte_end":74089,"line_start":783,"line_end":783,"column_start":5,"column_end":99}},{"value":"/ cleared by that thread when it is done accessing that value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74094,"byte_end":74158,"line_start":784,"line_end":784,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74163,"byte_end":74166,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74171,"byte_end":74185,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74190,"byte_end":74193,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74198,"byte_end":74209,"line_start":788,"line_end":788,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74214,"byte_end":74243,"line_start":789,"line_end":789,"column_start":5,"column_end":34}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74248,"byte_end":74289,"line_start":790,"line_end":790,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74294,"byte_end":74297,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ // Check out an item from the pool.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74302,"byte_end":74341,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/ let mut item = pool.create().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74346,"byte_end":74388,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ let key = item.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74393,"byte_end":74418,"line_start":794,"line_end":794,"column_start":5,"column_end":30}},{"value":"/ item.push_str(\"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74423,"byte_end":74456,"line_start":795,"line_end":795,"column_start":5,"column_end":38}},{"value":"/ drop(item);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74461,"byte_end":74476,"line_start":796,"line_end":796,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74481,"byte_end":74484,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pool.get(key).unwrap(), String::from(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74489,"byte_end":74557,"line_start":798,"line_end":798,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74562,"byte_end":74565,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ pool.clear(key);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74570,"byte_end":74590,"line_start":800,"line_end":800,"column_start":5,"column_end":25}},{"value":"/ assert!(pool.get(key).is_none());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74595,"byte_end":74632,"line_start":801,"line_end":801,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74637,"byte_end":74644,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74649,"byte_end":74652,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74657,"byte_end":74664,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74669,"byte_end":74698,"line_start":805,"line_end":805,"column_start":5,"column_end":34}},{"value":"/ let pool: Pool<String> = Pool::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74703,"byte_end":74744,"line_start":806,"line_end":806,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74749,"byte_end":74752,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ let key = pool.create_with(|item| item.push_str(\"Hello world!\")).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74757,"byte_end":74835,"line_start":808,"line_end":808,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74840,"byte_end":74843,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ // Clearing a key that doesn't exist in the `Pool` will return `false`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74848,"byte_end":74922,"line_start":810,"line_end":810,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(pool.clear(key + 69420), false);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74927,"byte_end":74974,"line_start":811,"line_end":811,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74979,"byte_end":74982,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ // Clearing a key that does exist returns `true`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":74987,"byte_end":75039,"line_start":813,"line_end":813,"column_start":5,"column_end":57}},{"value":"/ assert!(pool.clear(key));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75044,"byte_end":75073,"line_start":814,"line_end":814,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75078,"byte_end":75081,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ // Clearing a key that has previously been cleared will return `false`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75086,"byte_end":75160,"line_start":816,"line_end":816,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(pool.clear(key), false);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75165,"byte_end":75204,"line_start":817,"line_end":817,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75209,"byte_end":75216,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ [`clear`]: #method.clear","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75221,"byte_end":75249,"line_start":819,"line_end":819,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":76465,"byte_end":76468,"line_start":879,"line_end":879,"column_start":12,"column_end":15},"name":"key","qualname":"<Ref>::key","value":"pub fn key(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the key used to access this guard\n","sig":null,"attributes":[{"value":"/ Returns the key used to access this guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":76408,"byte_end":76453,"line_start":878,"line_end":878,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78534,"byte_end":78537,"line_start":958,"line_end":958,"column_start":12,"column_end":15},"name":"key","qualname":"<RefMut>::key","value":"pub fn key(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the key used to access the guard.\n","sig":null,"attributes":[{"value":"/ Returns the key used to access the guard.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78477,"byte_end":78522,"line_start":957,"line_end":957,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79885,"byte_end":79894,"line_start":997,"line_end":997,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RefMut>::downgrade","value":"pub fn downgrade(Self) -> Ref","parent":null,"children":[],"decl_id":null,"docs":" Downgrades the mutable guard to an immutable guard, allowing access to\n the pooled value from other threads.","sig":null,"attributes":[{"value":"/ Downgrades the mutable guard to an immutable guard, allowing access to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78584,"byte_end":78658,"line_start":962,"line_end":962,"column_start":5,"column_end":79}},{"value":"/ the pooled value from other threads.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78663,"byte_end":78703,"line_start":963,"line_end":963,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78708,"byte_end":78711,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78716,"byte_end":78731,"line_start":965,"line_end":965,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78736,"byte_end":78739,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78744,"byte_end":78751,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78756,"byte_end":78785,"line_start":968,"line_end":968,"column_start":5,"column_end":34}},{"value":"/ # use std::{sync::Arc, thread};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78790,"byte_end":78825,"line_start":969,"line_end":969,"column_start":5,"column_end":40}},{"value":"/ let pool = Arc::new(Pool::<String>::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78830,"byte_end":78877,"line_start":970,"line_end":970,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78882,"byte_end":78885,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ let mut guard_mut = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78890,"byte_end":78951,"line_start":972,"line_end":972,"column_start":5,"column_end":66}},{"value":"/ let key = guard_mut.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78956,"byte_end":78986,"line_start":973,"line_end":973,"column_start":5,"column_end":35}},{"value":"/ guard_mut.push_str(\"Hello\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78991,"byte_end":79023,"line_start":974,"line_end":974,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79028,"byte_end":79031,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ // The pooled string is currently borrowed mutably, so other threads","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79036,"byte_end":79108,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ // may not access it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79113,"byte_end":79138,"line_start":977,"line_end":977,"column_start":5,"column_end":30}},{"value":"/ let pool2 = pool.clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79143,"byte_end":79172,"line_start":978,"line_end":978,"column_start":5,"column_end":34}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79177,"byte_end":79204,"line_start":979,"line_end":979,"column_start":5,"column_end":32}},{"value":"/     assert!(pool2.get(key).is_none())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79209,"byte_end":79250,"line_start":980,"line_end":980,"column_start":5,"column_end":46}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79255,"byte_end":79278,"line_start":981,"line_end":981,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79283,"byte_end":79286,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ // Downgrade the guard to an immutable reference.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79291,"byte_end":79344,"line_start":983,"line_end":983,"column_start":5,"column_end":58}},{"value":"/ let guard = guard_mut.downgrade();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79349,"byte_end":79387,"line_start":984,"line_end":984,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79392,"byte_end":79395,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ // Now, other threads may also access the pooled value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79400,"byte_end":79459,"line_start":986,"line_end":986,"column_start":5,"column_end":64}},{"value":"/ let pool2 = pool.clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79464,"byte_end":79493,"line_start":987,"line_end":987,"column_start":5,"column_end":34}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79498,"byte_end":79525,"line_start":988,"line_end":988,"column_start":5,"column_end":32}},{"value":"/     let guard = pool2.get(key)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79530,"byte_end":79564,"line_start":989,"line_end":989,"column_start":5,"column_end":39}},{"value":"/         .expect(\"the item may now be referenced by other threads\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79569,"byte_end":79640,"line_start":990,"line_end":990,"column_start":5,"column_end":76}},{"value":"/     assert_eq!(guard, String::from(\"Hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79645,"byte_end":79694,"line_start":991,"line_end":991,"column_start":5,"column_end":54}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79699,"byte_end":79722,"line_start":992,"line_end":992,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79727,"byte_end":79730,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ // We can still access the value immutably through the downgraded guard.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79735,"byte_end":79811,"line_start":994,"line_end":994,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(guard, String::from(\"Hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79816,"byte_end":79861,"line_start":995,"line_end":995,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":79866,"byte_end":79873,"line_start":996,"line_end":996,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":82076,"byte_end":82079,"line_start":1089,"line_end":1089,"column_start":12,"column_end":15},"name":"key","qualname":"<OwnedRef<T, C>>::key","value":"pub fn key(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the key used to access this guard\n","sig":null,"attributes":[{"value":"/ Returns the key used to access this guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":82019,"byte_end":82064,"line_start":1088,"line_end":1088,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84734,"byte_end":84737,"line_start":1188,"line_end":1188,"column_start":12,"column_end":15},"name":"key","qualname":"<OwnedRefMut<T, C>>::key","value":"pub fn key(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the key used to access this guard\n","sig":null,"attributes":[{"value":"/ Returns the key used to access this guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84677,"byte_end":84722,"line_start":1187,"line_end":1187,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":86097,"byte_end":86106,"line_start":1227,"line_end":1227,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<OwnedRefMut<T, C>>::downgrade","value":"pub fn downgrade(Self) -> OwnedRef<T, C>","parent":null,"children":[],"decl_id":null,"docs":" Downgrades the owned mutable guard to an owned immutable guard, allowing\n access to the pooled value from other threads.","sig":null,"attributes":[{"value":"/ Downgrades the owned mutable guard to an owned immutable guard, allowing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84784,"byte_end":84860,"line_start":1192,"line_end":1192,"column_start":5,"column_end":81}},{"value":"/ access to the pooled value from other threads.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84865,"byte_end":84915,"line_start":1193,"line_end":1193,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84920,"byte_end":84923,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84928,"byte_end":84943,"line_start":1195,"line_end":1195,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84948,"byte_end":84951,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84956,"byte_end":84963,"line_start":1197,"line_end":1197,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Pool;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84968,"byte_end":84997,"line_start":1198,"line_end":1198,"column_start":5,"column_end":34}},{"value":"/ # use std::{sync::Arc, thread};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85002,"byte_end":85037,"line_start":1199,"line_end":1199,"column_start":5,"column_end":40}},{"value":"/ let pool = Arc::new(Pool::<String>::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85042,"byte_end":85089,"line_start":1200,"line_end":1200,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85094,"byte_end":85097,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ let mut guard_mut = pool.clone().create_owned().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85102,"byte_end":85163,"line_start":1202,"line_end":1202,"column_start":5,"column_end":66}},{"value":"/ let key = guard_mut.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85168,"byte_end":85198,"line_start":1203,"line_end":1203,"column_start":5,"column_end":35}},{"value":"/ guard_mut.push_str(\"Hello\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85203,"byte_end":85235,"line_start":1204,"line_end":1204,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85240,"byte_end":85243,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ // The pooled string is currently borrowed mutably, so other threads","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85248,"byte_end":85320,"line_start":1206,"line_end":1206,"column_start":5,"column_end":77}},{"value":"/ // may not access it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85325,"byte_end":85350,"line_start":1207,"line_end":1207,"column_start":5,"column_end":30}},{"value":"/ let pool2 = pool.clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85355,"byte_end":85384,"line_start":1208,"line_end":1208,"column_start":5,"column_end":34}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85389,"byte_end":85416,"line_start":1209,"line_end":1209,"column_start":5,"column_end":32}},{"value":"/     assert!(pool2.get(key).is_none())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85421,"byte_end":85462,"line_start":1210,"line_end":1210,"column_start":5,"column_end":46}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85467,"byte_end":85490,"line_start":1211,"line_end":1211,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85495,"byte_end":85498,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ // Downgrade the guard to an immutable reference.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85503,"byte_end":85556,"line_start":1213,"line_end":1213,"column_start":5,"column_end":58}},{"value":"/ let guard = guard_mut.downgrade();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85561,"byte_end":85599,"line_start":1214,"line_end":1214,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85604,"byte_end":85607,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ // Now, other threads may also access the pooled value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85612,"byte_end":85671,"line_start":1216,"line_end":1216,"column_start":5,"column_end":64}},{"value":"/ let pool2 = pool.clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85676,"byte_end":85705,"line_start":1217,"line_end":1217,"column_start":5,"column_end":34}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85710,"byte_end":85737,"line_start":1218,"line_end":1218,"column_start":5,"column_end":32}},{"value":"/     let guard = pool2.get(key)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85742,"byte_end":85776,"line_start":1219,"line_end":1219,"column_start":5,"column_end":39}},{"value":"/         .expect(\"the item may now be referenced by other threads\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85781,"byte_end":85852,"line_start":1220,"line_end":1220,"column_start":5,"column_end":76}},{"value":"/     assert_eq!(guard, String::from(\"Hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85857,"byte_end":85906,"line_start":1221,"line_end":1221,"column_start":5,"column_end":54}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85911,"byte_end":85934,"line_start":1222,"line_end":1222,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85939,"byte_end":85942,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ // We can still access the value immutably through the downgraded guard.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":85947,"byte_end":86023,"line_start":1224,"line_end":1224,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(guard, String::from(\"Hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":86028,"byte_end":86073,"line_start":1225,"line_end":1225,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":86078,"byte_end":86085,"line_start":1226,"line_end":1226,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":89669,"byte_end":89675,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Config","qualname":"::cfg::Config","value":"Config: Sized","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Configuration parameters which can be overridden to tune the behavior of a slab.\n","sig":null,"attributes":[{"value":"/ Configuration parameters which can be overridden to tune the behavior of a slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":89574,"byte_end":89658,"line_start":7,"line_end":7,"column_start":1,"column_end":85}}]},{"kind":"Const","id":{"krate":0,"index":259},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90066,"byte_end":90077,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"MAX_THREADS","qualname":"::cfg::Config::MAX_THREADS","value":"usize","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" The maximum number of threads which can access the slab.","sig":null,"attributes":[{"value":"/ The maximum number of threads which can access the slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":89689,"byte_end":89749,"line_start":9,"line_end":9,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":89754,"byte_end":89757,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ This value (rounded to a power of two) determines the number of shards","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":89762,"byte_end":89836,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ in the slab. If a thread is created, accesses the slab, and then terminates,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":89841,"byte_end":89921,"line_start":12,"line_end":12,"column_start":5,"column_end":85}},{"value":"/ its shard may be reused and thus does not count against the maximum","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":89926,"byte_end":89997,"line_start":13,"line_end":13,"column_start":5,"column_end":76}},{"value":"/ number of threads once the thread has terminated.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90002,"byte_end":90055,"line_start":14,"line_end":14,"column_start":5,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":260},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90342,"byte_end":90351,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"name":"MAX_PAGES","qualname":"::cfg::Config::MAX_PAGES","value":"usize","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" The maximum number of pages in each shard in the slab.","sig":null,"attributes":[{"value":"/ The maximum number of pages in each shard in the slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90119,"byte_end":90177,"line_start":16,"line_end":16,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90182,"byte_end":90185,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This value, in combination with `INITIAL_PAGE_SIZE`, determines how many","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90190,"byte_end":90266,"line_start":18,"line_end":18,"column_start":5,"column_end":81}},{"value":"/ bits of each index are used to represent page addresses.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90271,"byte_end":90331,"line_start":19,"line_end":19,"column_start":5,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":261},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90865,"byte_end":90882,"line_start":30,"line_end":30,"column_start":11,"column_end":28},"name":"INITIAL_PAGE_SIZE","qualname":"::cfg::Config::INITIAL_PAGE_SIZE","value":"usize","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" The size of the first page in each shard.","sig":null,"attributes":[{"value":"/ The size of the first page in each shard.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90391,"byte_end":90436,"line_start":21,"line_end":21,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90441,"byte_end":90444,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ When a page in a shard has been filled with values, a new page","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90449,"byte_end":90515,"line_start":23,"line_end":23,"column_start":5,"column_end":71}},{"value":"/ will be allocated that is twice as large as the previous page. Thus, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90520,"byte_end":90596,"line_start":24,"line_end":24,"column_start":5,"column_end":81}},{"value":"/ second page will be twice this size, and the third will be four times","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90601,"byte_end":90674,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ this size, and so on.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90679,"byte_end":90704,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90709,"byte_end":90712,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Note that page sizes must be powers of two. If this value is not a power","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90717,"byte_end":90793,"line_start":28,"line_end":28,"column_start":5,"column_end":81}},{"value":"/ of two, it will be rounded to the next power of two.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90798,"byte_end":90854,"line_start":29,"line_end":29,"column_start":5,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":262},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":91433,"byte_end":91446,"line_start":39,"line_end":39,"column_start":11,"column_end":24},"name":"RESERVED_BITS","qualname":"::cfg::Config::RESERVED_BITS","value":"usize","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Sets a number of high-order bits in each index which are reserved from\n user code.","sig":null,"attributes":[{"value":"/ Sets a number of high-order bits in each index which are reserved from","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":90930,"byte_end":91004,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ user code.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":91009,"byte_end":91023,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":91028,"byte_end":91031,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that these bits are taken from the generation counter; if the page","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":91036,"byte_end":91111,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ address and thread IDs are configured to use a large number of bits,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":91116,"byte_end":91188,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ reserving additional bits will decrease the period of the generation","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":91193,"byte_end":91265,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ counter. These should thus be used relatively sparingly, to ensure that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":91270,"byte_end":91345,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"/ generation counters are able to effectively prevent the ABA problem.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":91350,"byte_end":91422,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1190},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":93624,"byte_end":93637,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"DefaultConfig","qualname":"::cfg::DefaultConfig","value":"DefaultConfig {  }","parent":null,"children":[{"krate":0,"index":1191}],"decl_id":null,"docs":" Default slab configuration values.\n","sig":null,"attributes":[{"value":"/ Default slab configuration values.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":93551,"byte_end":93589,"line_start":116,"line_end":116,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":344},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101388,"byte_end":101393,"line_start":24,"line_end":24,"column_start":11,"column_end":16},"name":"Clear","qualname":"::clear::Clear","value":"Clear","parent":null,"children":[{"krate":0,"index":345}],"decl_id":null,"docs":" Trait implemented by types which can be cleared in place, retaining any\n allocated memory.","sig":null,"attributes":[{"value":"/ Trait implemented by types which can be cleared in place, retaining any","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100065,"byte_end":100140,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ allocated memory.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100141,"byte_end":100162,"line_start":4,"line_end":4,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100163,"byte_end":100166,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is essentially a generalization of methods on standard library","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100167,"byte_end":100238,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ collection types, including as [`Vec::clear`], [`String::clear`], and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100239,"byte_end":100312,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ [`HashMap::clear`]. These methods drop all data stored in the collection,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100313,"byte_end":100390,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ but retain the collection's heap allocation for future use. Types such as","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100391,"byte_end":100468,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ `BTreeMap`, whose `clear` methods drops allocations, should not","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100469,"byte_end":100536,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ implement this trait.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100537,"byte_end":100562,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100563,"byte_end":100566,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ When implemented for types which do not own a heap allocation, `Clear`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100567,"byte_end":100641,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ should reset the type in place if possible. If the type has an empty state","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100642,"byte_end":100720,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ or stores `Option`s, those values should be reset to the empty state. For","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100721,"byte_end":100798,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ \"plain old data\" types, which hold no pointers to other data and do not have","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100799,"byte_end":100879,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ an empty or initial state, it's okay for a `Clear` implementation to be a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100880,"byte_end":100957,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ no-op. In that case, it essentially serves as a marker indicating that the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":100958,"byte_end":101036,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ type may be reused to store new data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101037,"byte_end":101078,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101079,"byte_end":101082,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`Vec::clear`]: https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.clear","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101083,"byte_end":101172,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ [`String::clear`]: https://doc.rust-lang.org/stable/std/string/struct.String.html#method.clear","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101173,"byte_end":101271,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ [`HashMap::clear`]: https://doc.rust-lang.org/stable/std/collections/struct.HashMap.html#method.clear","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101272,"byte_end":101377,"line_start":23,"line_end":23,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101472,"byte_end":101477,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"clear","qualname":"::clear::Clear::clear","value":"pub fn clear(&mut Self)","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Clear all data in `self`, retaining the allocated capacithy.\n","sig":null,"attributes":[{"value":"/ Clear all data in `self`, retaining the allocated capacithy.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101400,"byte_end":101464,"line_start":25,"line_end":25,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1211},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/iter.rs","byte_start":102798,"byte_end":102808,"line_start":5,"line_end":5,"column_start":12,"column_end":22},"name":"UniqueIter","qualname":"::iter::UniqueIter","value":"UniqueIter {  }","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1050},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9531,"byte_end":9535,"line_start":232,"line_end":232,"column_start":12,"column_end":16},"name":"Slab","qualname":"::Slab","value":"Slab {  }","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"decl_id":null,"docs":" A sharded slab.","sig":null,"attributes":[{"value":"/ A sharded slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9417,"byte_end":9436,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9437,"byte_end":9440,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ See the [crate-level documentation](crate) for details on using this type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9441,"byte_end":9519,"line_start":231,"line_end":231,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1055},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9972,"byte_end":9977,"line_start":243,"line_end":243,"column_start":12,"column_end":17},"name":"Entry","qualname":"::Entry","value":"Entry {  }","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"decl_id":null,"docs":" A handle that allows access to an occupied entry in a [`Slab`].","sig":null,"attributes":[{"value":"/ A handle that allows access to an occupied entry in a [`Slab`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9642,"byte_end":9709,"line_start":237,"line_end":237,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9710,"byte_end":9713,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ While the guard exists, it indicates to the slab that the item the guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9714,"byte_end":9790,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/ references is currently being accessed. If the item is removed from the slab","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9791,"byte_end":9871,"line_start":240,"line_end":240,"column_start":1,"column_end":81}},{"value":"/ while a guard exists, the removal will be deferred until all guards are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9872,"byte_end":9947,"line_start":241,"line_end":241,"column_start":1,"column_end":76}},{"value":"/ dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9948,"byte_end":9960,"line_start":242,"line_end":242,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1302},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10690,"byte_end":10701,"line_start":273,"line_end":273,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308}],"decl_id":null,"docs":" A handle to a vacant entry in a [`Slab`].","sig":null,"attributes":[{"value":"/ A handle to a vacant entry in a [`Slab`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10146,"byte_end":10191,"line_start":250,"line_end":250,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10192,"byte_end":10195,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ `VacantEntry` allows constructing values with the key that they will be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10196,"byte_end":10271,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"/ assigned to.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10272,"byte_end":10288,"line_start":253,"line_end":253,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10289,"byte_end":10292,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10293,"byte_end":10307,"line_start":255,"line_end":255,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10308,"byte_end":10311,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10312,"byte_end":10319,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10320,"byte_end":10349,"line_start":258,"line_end":258,"column_start":1,"column_end":30}},{"value":"/ let mut slab = Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10350,"byte_end":10381,"line_start":259,"line_end":259,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10382,"byte_end":10385,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ let hello = {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10386,"byte_end":10403,"line_start":261,"line_end":261,"column_start":1,"column_end":18}},{"value":"/     let entry = slab.vacant_entry().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10404,"byte_end":10453,"line_start":262,"line_end":262,"column_start":1,"column_end":50}},{"value":"/     let key = entry.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10454,"byte_end":10484,"line_start":263,"line_end":263,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10485,"byte_end":10488,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/     entry.insert((key, \"hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10489,"byte_end":10526,"line_start":265,"line_end":265,"column_start":1,"column_end":38}},{"value":"/     key","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10527,"byte_end":10538,"line_start":266,"line_end":266,"column_start":1,"column_end":12}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10539,"byte_end":10545,"line_start":267,"line_end":267,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10546,"byte_end":10549,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(hello, slab.get(hello).unwrap().0);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10550,"byte_end":10600,"line_start":269,"line_end":269,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"hello\", slab.get(hello).unwrap().1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10601,"byte_end":10653,"line_start":270,"line_end":270,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10654,"byte_end":10661,"line_start":271,"line_end":271,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1063},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13506,"byte_end":13516,"line_start":362,"line_end":362,"column_start":12,"column_end":22},"name":"OwnedEntry","qualname":"::OwnedEntry","value":"OwnedEntry {  }","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069}],"decl_id":null,"docs":" An owned reference to an occupied entry in a [`Slab`].","sig":null,"attributes":[{"value":"/ An owned reference to an occupied entry in a [`Slab`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10840,"byte_end":10898,"line_start":279,"line_end":279,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10899,"byte_end":10902,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ While the guard exists, it indicates to the slab that the item the guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10903,"byte_end":10979,"line_start":281,"line_end":281,"column_start":1,"column_end":77}},{"value":"/ references is currently being accessed. If the item is removed from the slab","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":10980,"byte_end":11060,"line_start":282,"line_end":282,"column_start":1,"column_end":81}},{"value":"/ while the guard exists, the  removal will be deferred until all guards are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11061,"byte_end":11139,"line_start":283,"line_end":283,"column_start":1,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11140,"byte_end":11152,"line_start":284,"line_end":284,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11153,"byte_end":11156,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Unlike [`Entry`], which borrows the slab, an `OwnedEntry` clones the [`Arc`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11157,"byte_end":11237,"line_start":286,"line_end":286,"column_start":1,"column_end":81}},{"value":"/ around the slab. Therefore, it keeps the slab from being dropped until all","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11238,"byte_end":11316,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ such guards have been dropped. This means that an `OwnedEntry` may be held for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11317,"byte_end":11399,"line_start":288,"line_end":288,"column_start":1,"column_end":83}},{"value":"/ an arbitrary lifetime.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11400,"byte_end":11426,"line_start":289,"line_end":289,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11427,"byte_end":11430,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11431,"byte_end":11445,"line_start":291,"line_end":291,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11446,"byte_end":11449,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11450,"byte_end":11457,"line_start":293,"line_end":293,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11458,"byte_end":11487,"line_start":294,"line_end":294,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11488,"byte_end":11511,"line_start":295,"line_end":295,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11512,"byte_end":11515,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ let slab: Arc<Slab<&'static str>> = Arc::new(Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11516,"byte_end":11578,"line_start":297,"line_end":297,"column_start":1,"column_end":63}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11579,"byte_end":11629,"line_start":298,"line_end":298,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11630,"byte_end":11633,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ // Look up the created key, returning an `OwnedEntry`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11634,"byte_end":11692,"line_start":300,"line_end":300,"column_start":1,"column_end":59}},{"value":"/ let value = slab.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11693,"byte_end":11746,"line_start":301,"line_end":301,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11747,"byte_end":11750,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ // Now, the original `Arc` clone of the slab may be dropped, but the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11751,"byte_end":11823,"line_start":303,"line_end":303,"column_start":1,"column_end":73}},{"value":"/ // returned `OwnedEntry` can still access the value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11824,"byte_end":11880,"line_start":304,"line_end":304,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(value, \"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11881,"byte_end":11918,"line_start":305,"line_end":305,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11919,"byte_end":11926,"line_start":306,"line_end":306,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11927,"byte_end":11930,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ Unlike [`Entry`], an `OwnedEntry` may be stored in a struct which must live","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":11931,"byte_end":12010,"line_start":308,"line_end":308,"column_start":1,"column_end":80}},{"value":"/ for the `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12011,"byte_end":12042,"line_start":309,"line_end":309,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12043,"byte_end":12046,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12047,"byte_end":12054,"line_start":311,"line_end":311,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12055,"byte_end":12084,"line_start":312,"line_end":312,"column_start":1,"column_end":30}},{"value":"/ use sharded_slab::OwnedEntry;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12085,"byte_end":12118,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12119,"byte_end":12142,"line_start":314,"line_end":314,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12143,"byte_end":12146,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ pub struct MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12147,"byte_end":12172,"line_start":316,"line_end":316,"column_start":1,"column_end":26}},{"value":"/     entry: OwnedEntry<&'static str>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12173,"byte_end":12213,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/     // ... other fields ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12214,"byte_end":12245,"line_start":318,"line_end":318,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12246,"byte_end":12251,"line_start":319,"line_end":319,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12252,"byte_end":12255,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ // Suppose this is some arbitrary function which requires a value that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12256,"byte_end":12330,"line_start":321,"line_end":321,"column_start":1,"column_end":75}},{"value":"/ // lives for the 'static lifetime...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12331,"byte_end":12371,"line_start":322,"line_end":322,"column_start":1,"column_end":41}},{"value":"/ fn function_requiring_static<T: 'static>(t: &T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12372,"byte_end":12425,"line_start":323,"line_end":323,"column_start":1,"column_end":54}},{"value":"/     // ... do something extremely important and interesting ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12426,"byte_end":12493,"line_start":324,"line_end":324,"column_start":1,"column_end":68}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12494,"byte_end":12499,"line_start":325,"line_end":325,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12500,"byte_end":12503,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ let slab: Arc<Slab<&'static str>> = Arc::new(Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12504,"byte_end":12566,"line_start":327,"line_end":327,"column_start":1,"column_end":63}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12567,"byte_end":12617,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12618,"byte_end":12621,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ // Look up the created key, returning an `OwnedEntry`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12622,"byte_end":12680,"line_start":330,"line_end":330,"column_start":1,"column_end":59}},{"value":"/ let entry = slab.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12681,"byte_end":12734,"line_start":331,"line_end":331,"column_start":1,"column_end":54}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12735,"byte_end":12765,"line_start":332,"line_end":332,"column_start":1,"column_end":31}},{"value":"/     entry,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12766,"byte_end":12780,"line_start":333,"line_end":333,"column_start":1,"column_end":15}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12781,"byte_end":12795,"line_start":334,"line_end":334,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12796,"byte_end":12802,"line_start":335,"line_end":335,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12803,"byte_end":12806,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ // We can use `my_struct` anywhere where it is required to have the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12807,"byte_end":12878,"line_start":337,"line_end":337,"column_start":1,"column_end":72}},{"value":"/ // `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12879,"byte_end":12905,"line_start":338,"line_end":338,"column_start":1,"column_end":27}},{"value":"/ function_requiring_static(&my_struct);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12906,"byte_end":12948,"line_start":339,"line_end":339,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12949,"byte_end":12956,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12957,"byte_end":12960,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ `OwnedEntry`s may be sent between threads:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":12961,"byte_end":13007,"line_start":342,"line_end":342,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13008,"byte_end":13011,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13012,"byte_end":13019,"line_start":344,"line_end":344,"column_start":1,"column_end":8}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13020,"byte_end":13049,"line_start":345,"line_end":345,"column_start":1,"column_end":30}},{"value":"/ use std::{thread, sync::Arc};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13050,"byte_end":13083,"line_start":346,"line_end":346,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13084,"byte_end":13087,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ let slab: Arc<Slab<&'static str>> = Arc::new(Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13088,"byte_end":13150,"line_start":348,"line_end":348,"column_start":1,"column_end":63}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13151,"byte_end":13201,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13202,"byte_end":13205,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ // Look up the created key, returning an `OwnedEntry`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13206,"byte_end":13264,"line_start":351,"line_end":351,"column_start":1,"column_end":59}},{"value":"/ let value = slab.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13265,"byte_end":13318,"line_start":352,"line_end":352,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13319,"byte_end":13322,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13323,"byte_end":13350,"line_start":354,"line_end":354,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(value, \"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13351,"byte_end":13392,"line_start":355,"line_end":355,"column_start":1,"column_end":42}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13393,"byte_end":13407,"line_start":356,"line_end":356,"column_start":1,"column_end":15}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13408,"byte_end":13431,"line_start":357,"line_end":357,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13432,"byte_end":13439,"line_start":358,"line_end":358,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13440,"byte_end":13443,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ [`get`]: Slab::get","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13444,"byte_end":13466,"line_start":360,"line_end":360,"column_start":1,"column_end":23}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13467,"byte_end":13494,"line_start":361,"line_end":361,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13784,"byte_end":13787,"line_start":374,"line_end":374,"column_start":12,"column_end":15},"name":"new","qualname":"<Slab<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new slab with the default configuration parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new slab with the default configuration parameters.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13707,"byte_end":13772,"line_start":373,"line_end":373,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13921,"byte_end":13936,"line_start":379,"line_end":379,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<Slab<T>>::new_with_config","value":"pub fn new_with_config<C: cfg::Config>() -> Slab<T, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new slab with the provided configuration parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new slab with the provided configuration parameters.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13843,"byte_end":13909,"line_start":378,"line_end":378,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":1078},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14682,"byte_end":14691,"line_start":400,"line_end":400,"column_start":15,"column_end":24},"name":"USED_BITS","qualname":"::Slab::<T, C>::USED_BITS","value":"usize","parent":{"krate":0,"index":1075},"children":[],"decl_id":null,"docs":" The number of bits in each index which are used by the slab.","sig":null,"attributes":[{"value":"/ The number of bits in each index which are used by the slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14141,"byte_end":14205,"line_start":389,"line_end":389,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14210,"byte_end":14213,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ If other data is packed into the `usize` indices returned by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14218,"byte_end":14282,"line_start":391,"line_end":391,"column_start":5,"column_end":69}},{"value":"/ [`Slab::insert`], user code is free to use any bits higher than the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14287,"byte_end":14358,"line_start":392,"line_end":392,"column_start":5,"column_end":76}},{"value":"/ `USED_BITS`-th bit freely.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14363,"byte_end":14393,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14398,"byte_end":14401,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ This is determined by the [`Config`] type that configures the slab's","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14406,"byte_end":14478,"line_start":395,"line_end":395,"column_start":5,"column_end":77}},{"value":"/ parameters. By default, all bits are used; this can be changed by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14483,"byte_end":14552,"line_start":396,"line_end":396,"column_start":5,"column_end":74}},{"value":"/ overriding the [`Config::RESERVED_BITS`][res] constant.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14557,"byte_end":14616,"line_start":397,"line_end":397,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14621,"byte_end":14624,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [res]: crate::Config#RESERVED_BITS","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14629,"byte_end":14667,"line_start":399,"line_end":399,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15339,"byte_end":15345,"line_start":417,"line_end":417,"column_start":12,"column_end":18},"name":"insert","qualname":"<Slab<T, C>>::insert","value":"pub fn insert(&Self, T) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value into the slab, returning the integer index at which that\n value was inserted. This index can then be used to access the entry.","sig":null,"attributes":[{"value":"/ Inserts a value into the slab, returning the integer index at which that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14720,"byte_end":14796,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/ value was inserted. This index can then be used to access the entry.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14801,"byte_end":14873,"line_start":403,"line_end":403,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14878,"byte_end":14881,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ If this function returns `None`, then the shard for the current thread","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14886,"byte_end":14960,"line_start":405,"line_end":405,"column_start":5,"column_end":79}},{"value":"/ is full and no items can be added until some are removed, or the maximum","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14965,"byte_end":15041,"line_start":406,"line_end":406,"column_start":5,"column_end":81}},{"value":"/ number of shards has been reached.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15046,"byte_end":15084,"line_start":407,"line_end":407,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15089,"byte_end":15092,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15097,"byte_end":15111,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15116,"byte_end":15127,"line_start":410,"line_end":410,"column_start":5,"column_end":16}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15132,"byte_end":15161,"line_start":411,"line_end":411,"column_start":5,"column_end":34}},{"value":"/ let slab = Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15166,"byte_end":15193,"line_start":412,"line_end":412,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15198,"byte_end":15201,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15206,"byte_end":15256,"line_start":414,"line_end":414,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(slab.get(key).unwrap(), \"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15261,"byte_end":15315,"line_start":415,"line_end":415,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15320,"byte_end":15327,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16460,"byte_end":16472,"line_start":452,"line_end":452,"column_start":12,"column_end":24},"name":"vacant_entry","qualname":"<Slab<T, C>>::vacant_entry","value":"pub fn vacant_entry(&Self) -> Option<VacantEntry<, T, C>>","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to a vacant entry allowing for further manipulation.","sig":null,"attributes":[{"value":"/ Return a handle to a vacant entry allowing for further manipulation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15715,"byte_end":15787,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15792,"byte_end":15795,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This function is useful when creating values that must contain their","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15800,"byte_end":15872,"line_start":431,"line_end":431,"column_start":5,"column_end":77}},{"value":"/ slab index. The returned [`VacantEntry`] reserves a slot in the slab and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15877,"byte_end":15953,"line_start":432,"line_end":432,"column_start":5,"column_end":81}},{"value":"/ is able to return the index of the entry.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":15958,"byte_end":16003,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16008,"byte_end":16011,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16016,"byte_end":16030,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16035,"byte_end":16038,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16043,"byte_end":16050,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16055,"byte_end":16084,"line_start":438,"line_end":438,"column_start":5,"column_end":34}},{"value":"/ let mut slab = Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16089,"byte_end":16120,"line_start":439,"line_end":439,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16125,"byte_end":16128,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let hello = {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16133,"byte_end":16150,"line_start":441,"line_end":441,"column_start":5,"column_end":22}},{"value":"/     let entry = slab.vacant_entry().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16155,"byte_end":16204,"line_start":442,"line_end":442,"column_start":5,"column_end":54}},{"value":"/     let key = entry.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16209,"byte_end":16239,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16244,"byte_end":16247,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     entry.insert((key, \"hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16252,"byte_end":16289,"line_start":445,"line_end":445,"column_start":5,"column_end":42}},{"value":"/     key","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16294,"byte_end":16305,"line_start":446,"line_end":446,"column_start":5,"column_end":16}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16310,"byte_end":16316,"line_start":447,"line_end":447,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16321,"byte_end":16324,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(hello, slab.get(hello).unwrap().0);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16329,"byte_end":16379,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(\"hello\", slab.get(hello).unwrap().1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16384,"byte_end":16436,"line_start":450,"line_end":450,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16441,"byte_end":16448,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18381,"byte_end":18387,"line_start":509,"line_end":509,"column_start":12,"column_end":18},"name":"remove","qualname":"<Slab<T, C>>::remove","value":"pub fn remove(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value at the given index in the slab, returning `true` if a\n value was removed.","sig":null,"attributes":[{"value":"/ Remove the value at the given index in the slab, returning `true` if a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16898,"byte_end":16972,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/ value was removed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":16977,"byte_end":16999,"line_start":467,"line_end":467,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17004,"byte_end":17007,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Unlike [`take`], this method does _not_ block the current thread until","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17012,"byte_end":17086,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ the value can be removed. Instead, if another thread is currently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17091,"byte_end":17160,"line_start":470,"line_end":470,"column_start":5,"column_end":74}},{"value":"/ accessing that value, this marks it to be removed by that thread when it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17165,"byte_end":17241,"line_start":471,"line_end":471,"column_start":5,"column_end":81}},{"value":"/ finishes accessing the value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17246,"byte_end":17279,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17284,"byte_end":17287,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17292,"byte_end":17306,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17311,"byte_end":17314,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17319,"byte_end":17330,"line_start":476,"line_end":476,"column_start":5,"column_end":16}},{"value":"/ let slab = sharded_slab::Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17335,"byte_end":17376,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17381,"byte_end":17431,"line_start":478,"line_end":478,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17436,"byte_end":17439,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ // Remove the item from the slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17444,"byte_end":17481,"line_start":480,"line_end":480,"column_start":5,"column_end":42}},{"value":"/ assert!(slab.remove(key));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17486,"byte_end":17516,"line_start":481,"line_end":481,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17521,"byte_end":17524,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ // Now, the slot is empty.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17529,"byte_end":17559,"line_start":483,"line_end":483,"column_start":5,"column_end":35}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17564,"byte_end":17597,"line_start":484,"line_end":484,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17602,"byte_end":17609,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17614,"byte_end":17617,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17622,"byte_end":17633,"line_start":487,"line_end":487,"column_start":5,"column_end":16}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17638,"byte_end":17661,"line_start":488,"line_end":488,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17666,"byte_end":17669,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let slab = Arc::new(sharded_slab::Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17674,"byte_end":17725,"line_start":490,"line_end":490,"column_start":5,"column_end":56}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17730,"byte_end":17780,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17785,"byte_end":17788,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ let slab2 = slab.clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17793,"byte_end":17822,"line_start":493,"line_end":493,"column_start":5,"column_end":34}},{"value":"/ let thread2 = std::thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17827,"byte_end":17873,"line_start":494,"line_end":494,"column_start":5,"column_end":51}},{"value":"/     // Depending on when this thread begins executing, the item may","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17878,"byte_end":17949,"line_start":495,"line_end":495,"column_start":5,"column_end":76}},{"value":"/     // or may not have already been removed...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":17954,"byte_end":18004,"line_start":496,"line_end":496,"column_start":5,"column_end":55}},{"value":"/     if let Some(item) = slab2.get(key) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18009,"byte_end":18053,"line_start":497,"line_end":497,"column_start":5,"column_end":49}},{"value":"/         assert_eq!(item, \"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18058,"byte_end":18102,"line_start":498,"line_end":498,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18107,"byte_end":18116,"line_start":499,"line_end":499,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18121,"byte_end":18128,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18133,"byte_end":18136,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ // The item will be removed by thread2 when it finishes accessing it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18141,"byte_end":18214,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ assert!(slab.remove(key));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18219,"byte_end":18249,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18254,"byte_end":18257,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread2.join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18262,"byte_end":18290,"line_start":505,"line_end":505,"column_start":5,"column_end":33}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18295,"byte_end":18328,"line_start":506,"line_end":506,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18333,"byte_end":18340,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ [`take`]: Slab::take","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":18345,"byte_end":18369,"line_start":508,"line_end":508,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21064,"byte_end":21068,"line_start":578,"line_end":578,"column_start":12,"column_end":16},"name":"take","qualname":"<Slab<T, C>>::take","value":"pub fn take(&Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the value associated with the given key from the slab, returning\n it.","sig":null,"attributes":[{"value":"/ Removes the value associated with the given key from the slab, returning","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19020,"byte_end":19096,"line_start":524,"line_end":524,"column_start":5,"column_end":81}},{"value":"/ it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19101,"byte_end":19108,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19113,"byte_end":19116,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ If the slab does not contain a value for that key, `None` is returned","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19121,"byte_end":19194,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19199,"byte_end":19211,"line_start":528,"line_end":528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19216,"byte_end":19219,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ If the value associated with the given key is currently being","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19224,"byte_end":19289,"line_start":530,"line_end":530,"column_start":5,"column_end":70}},{"value":"/ accessed by another thread, this method will block the current thread","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19294,"byte_end":19367,"line_start":531,"line_end":531,"column_start":5,"column_end":78}},{"value":"/ until the item is no longer accessed. If this is not desired, use","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19372,"byte_end":19441,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/ [`remove`] instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19446,"byte_end":19469,"line_start":533,"line_end":533,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19474,"byte_end":19477,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ **Note**: This method blocks the calling thread by spinning until the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19482,"byte_end":19555,"line_start":535,"line_end":535,"column_start":5,"column_end":78}},{"value":"/ currently outstanding references are released. Spinning for long periods","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19560,"byte_end":19636,"line_start":536,"line_end":536,"column_start":5,"column_end":81}},{"value":"/ of time can result in high CPU time and power consumption. Therefore,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19641,"byte_end":19714,"line_start":537,"line_end":537,"column_start":5,"column_end":78}},{"value":"/ `take` should only be called when other references to the slot are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19719,"byte_end":19789,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ expected to be dropped soon (e.g., when all accesses are relatively","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19794,"byte_end":19865,"line_start":539,"line_end":539,"column_start":5,"column_end":76}},{"value":"/ short).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19870,"byte_end":19881,"line_start":540,"line_end":540,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19886,"byte_end":19889,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19894,"byte_end":19908,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19913,"byte_end":19916,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19921,"byte_end":19932,"line_start":544,"line_end":544,"column_start":5,"column_end":16}},{"value":"/ let slab = sharded_slab::Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19937,"byte_end":19978,"line_start":545,"line_end":545,"column_start":5,"column_end":46}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":19983,"byte_end":20033,"line_start":546,"line_end":546,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20038,"byte_end":20041,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ // Remove the item from the slab, returning it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20046,"byte_end":20097,"line_start":548,"line_end":548,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(slab.take(key), Some(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20102,"byte_end":20154,"line_start":549,"line_end":549,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20159,"byte_end":20162,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ // Now, the slot is empty.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20167,"byte_end":20197,"line_start":551,"line_end":551,"column_start":5,"column_end":35}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20202,"byte_end":20235,"line_start":552,"line_end":552,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20240,"byte_end":20247,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20252,"byte_end":20255,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20260,"byte_end":20271,"line_start":555,"line_end":555,"column_start":5,"column_end":16}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20276,"byte_end":20299,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20304,"byte_end":20307,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let slab = Arc::new(sharded_slab::Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20312,"byte_end":20363,"line_start":558,"line_end":558,"column_start":5,"column_end":56}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20368,"byte_end":20418,"line_start":559,"line_end":559,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20423,"byte_end":20426,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let slab2 = slab.clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20431,"byte_end":20460,"line_start":561,"line_end":561,"column_start":5,"column_end":34}},{"value":"/ let thread2 = std::thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20465,"byte_end":20511,"line_start":562,"line_end":562,"column_start":5,"column_end":51}},{"value":"/     // Depending on when this thread begins executing, the item may","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20516,"byte_end":20587,"line_start":563,"line_end":563,"column_start":5,"column_end":76}},{"value":"/     // or may not have already been removed...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20592,"byte_end":20642,"line_start":564,"line_end":564,"column_start":5,"column_end":55}},{"value":"/     if let Some(item) = slab2.get(key) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20647,"byte_end":20691,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/         assert_eq!(item, \"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20696,"byte_end":20740,"line_start":566,"line_end":566,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20745,"byte_end":20754,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20759,"byte_end":20766,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20771,"byte_end":20774,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ // The item will only be removed when the other thread finishes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20779,"byte_end":20846,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/ // accessing it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20851,"byte_end":20871,"line_start":571,"line_end":571,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(slab.take(key), Some(\"hello world\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20876,"byte_end":20928,"line_start":572,"line_end":572,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20933,"byte_end":20936,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ thread2.join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20941,"byte_end":20969,"line_start":574,"line_end":574,"column_start":5,"column_end":33}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":20974,"byte_end":21007,"line_start":575,"line_end":575,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21012,"byte_end":21019,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ [`remove`]: Slab::remove","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21024,"byte_end":21052,"line_start":577,"line_end":577,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21921,"byte_end":21924,"line_start":605,"line_end":605,"column_start":12,"column_end":15},"name":"get","qualname":"<Slab<T, C>>::get","value":"pub fn get(&Self, usize) -> Option<Entry<, T, C>>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value associated with the given key.","sig":null,"attributes":[{"value":"/ Return a reference to the value associated with the given key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21372,"byte_end":21438,"line_start":590,"line_end":590,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21443,"byte_end":21446,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ If the slab does not contain a value for the given key, or if the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21451,"byte_end":21520,"line_start":592,"line_end":592,"column_start":5,"column_end":74}},{"value":"/ maximum number of concurrent references to the slot has been reached,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21525,"byte_end":21598,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `None` is returned instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21603,"byte_end":21634,"line_start":594,"line_end":594,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21639,"byte_end":21642,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21647,"byte_end":21661,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21666,"byte_end":21669,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21674,"byte_end":21685,"line_start":598,"line_end":598,"column_start":5,"column_end":16}},{"value":"/ let slab = sharded_slab::Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21690,"byte_end":21731,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21736,"byte_end":21786,"line_start":600,"line_end":600,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21791,"byte_end":21794,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(slab.get(key).unwrap(), \"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21799,"byte_end":21853,"line_start":602,"line_end":602,"column_start":5,"column_end":59}},{"value":"/ assert!(slab.get(12345).is_none());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21858,"byte_end":21897,"line_start":603,"line_end":603,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":21902,"byte_end":21909,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25291,"byte_end":25300,"line_start":703,"line_end":703,"column_start":12,"column_end":21},"name":"get_owned","qualname":"<Slab<T, C>>::get_owned","value":"pub fn get_owned(Arc<Self>, usize) -> Option<OwnedEntry<T, C>>","parent":null,"children":[],"decl_id":null,"docs":" Return an owned reference to the value at the given index.","sig":null,"attributes":[{"value":"/ Return an owned reference to the value at the given index.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22462,"byte_end":22524,"line_start":622,"line_end":622,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22529,"byte_end":22532,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ If the slab does not contain a value for the given key, `None` is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22537,"byte_end":22606,"line_start":624,"line_end":624,"column_start":5,"column_end":74}},{"value":"/ returned instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22611,"byte_end":22632,"line_start":625,"line_end":625,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22637,"byte_end":22640,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Unlike [`get`], which borrows the slab, this method _clones_ the [`Arc`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22645,"byte_end":22721,"line_start":627,"line_end":627,"column_start":5,"column_end":81}},{"value":"/ around the slab. This means that the returned [`OwnedEntry`] can be held","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22726,"byte_end":22802,"line_start":628,"line_end":628,"column_start":5,"column_end":81}},{"value":"/ for an arbitrary lifetime. However,  this method requires that the slab","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22807,"byte_end":22882,"line_start":629,"line_end":629,"column_start":5,"column_end":80}},{"value":"/ itself be wrapped in an `Arc`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22887,"byte_end":22921,"line_start":630,"line_end":630,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22926,"byte_end":22929,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22934,"byte_end":22948,"line_start":632,"line_end":632,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22953,"byte_end":22956,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22961,"byte_end":22968,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":22973,"byte_end":23002,"line_start":635,"line_end":635,"column_start":5,"column_end":34}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23007,"byte_end":23030,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23035,"byte_end":23038,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ let slab: Arc<Slab<&'static str>> = Arc::new(Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23043,"byte_end":23105,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23110,"byte_end":23160,"line_start":639,"line_end":639,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23165,"byte_end":23168,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ // Look up the created key, returning an `OwnedEntry`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23173,"byte_end":23231,"line_start":641,"line_end":641,"column_start":5,"column_end":63}},{"value":"/ let value = slab.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23236,"byte_end":23289,"line_start":642,"line_end":642,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23294,"byte_end":23297,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ // Now, the original `Arc` clone of the slab may be dropped, but the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23302,"byte_end":23374,"line_start":644,"line_end":644,"column_start":5,"column_end":77}},{"value":"/ // returned `OwnedEntry` can still access the value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23379,"byte_end":23435,"line_start":645,"line_end":645,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(value, \"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23440,"byte_end":23477,"line_start":646,"line_end":646,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23482,"byte_end":23489,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23494,"byte_end":23497,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Entry`], an `OwnedEntry` may be stored in a struct which must live","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23502,"byte_end":23581,"line_start":649,"line_end":649,"column_start":5,"column_end":84}},{"value":"/ for the `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23586,"byte_end":23617,"line_start":650,"line_end":650,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23622,"byte_end":23625,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23630,"byte_end":23637,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23642,"byte_end":23671,"line_start":653,"line_end":653,"column_start":5,"column_end":34}},{"value":"/ use sharded_slab::OwnedEntry;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23676,"byte_end":23709,"line_start":654,"line_end":654,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23714,"byte_end":23737,"line_start":655,"line_end":655,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23742,"byte_end":23745,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ pub struct MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23750,"byte_end":23775,"line_start":657,"line_end":657,"column_start":5,"column_end":30}},{"value":"/     entry: OwnedEntry<&'static str>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23780,"byte_end":23820,"line_start":658,"line_end":658,"column_start":5,"column_end":45}},{"value":"/     // ... other fields ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23825,"byte_end":23856,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23861,"byte_end":23866,"line_start":660,"line_end":660,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23871,"byte_end":23874,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ // Suppose this is some arbitrary function which requires a value that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23879,"byte_end":23953,"line_start":662,"line_end":662,"column_start":5,"column_end":79}},{"value":"/ // lives for the 'static lifetime...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":23958,"byte_end":23998,"line_start":663,"line_end":663,"column_start":5,"column_end":45}},{"value":"/ fn function_requiring_static<T: 'static>(t: &T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24003,"byte_end":24056,"line_start":664,"line_end":664,"column_start":5,"column_end":58}},{"value":"/     // ... do something extremely important and interesting ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24061,"byte_end":24128,"line_start":665,"line_end":665,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24133,"byte_end":24138,"line_start":666,"line_end":666,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24143,"byte_end":24146,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let slab: Arc<Slab<&'static str>> = Arc::new(Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24151,"byte_end":24213,"line_start":668,"line_end":668,"column_start":5,"column_end":67}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24218,"byte_end":24268,"line_start":669,"line_end":669,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24273,"byte_end":24276,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ // Look up the created key, returning an `OwnedEntry`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24281,"byte_end":24339,"line_start":671,"line_end":671,"column_start":5,"column_end":63}},{"value":"/ let entry = slab.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24344,"byte_end":24397,"line_start":672,"line_end":672,"column_start":5,"column_end":58}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24402,"byte_end":24432,"line_start":673,"line_end":673,"column_start":5,"column_end":35}},{"value":"/     entry,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24437,"byte_end":24451,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24456,"byte_end":24470,"line_start":675,"line_end":675,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24475,"byte_end":24481,"line_start":676,"line_end":676,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24486,"byte_end":24489,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ // We can use `my_struct` anywhere where it is required to have the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24494,"byte_end":24565,"line_start":678,"line_end":678,"column_start":5,"column_end":76}},{"value":"/ // `'static` lifetime:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24570,"byte_end":24596,"line_start":679,"line_end":679,"column_start":5,"column_end":31}},{"value":"/ function_requiring_static(&my_struct);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24601,"byte_end":24643,"line_start":680,"line_end":680,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24648,"byte_end":24655,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24660,"byte_end":24663,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ [`OwnedEntry`]s may be sent between threads:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24668,"byte_end":24716,"line_start":683,"line_end":683,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24721,"byte_end":24724,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24729,"byte_end":24736,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24741,"byte_end":24770,"line_start":686,"line_end":686,"column_start":5,"column_end":34}},{"value":"/ use std::{thread, sync::Arc};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24775,"byte_end":24808,"line_start":687,"line_end":687,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24813,"byte_end":24816,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ let slab: Arc<Slab<&'static str>> = Arc::new(Slab::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24821,"byte_end":24883,"line_start":689,"line_end":689,"column_start":5,"column_end":67}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24888,"byte_end":24938,"line_start":690,"line_end":690,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24943,"byte_end":24946,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ // Look up the created key, returning an `OwnedEntry`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":24951,"byte_end":25009,"line_start":692,"line_end":692,"column_start":5,"column_end":63}},{"value":"/ let value = slab.clone().get_owned(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25014,"byte_end":25067,"line_start":693,"line_end":693,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25072,"byte_end":25075,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25080,"byte_end":25107,"line_start":695,"line_end":695,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(value, \"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25112,"byte_end":25153,"line_start":696,"line_end":696,"column_start":5,"column_end":46}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25158,"byte_end":25172,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/ }).join().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25177,"byte_end":25200,"line_start":698,"line_end":698,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25205,"byte_end":25212,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25217,"byte_end":25220,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [`get`]: Slab::get","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25225,"byte_end":25247,"line_start":701,"line_end":701,"column_start":5,"column_end":27}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25252,"byte_end":25279,"line_start":702,"line_end":702,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26235,"byte_end":26243,"line_start":733,"line_end":733,"column_start":12,"column_end":20},"name":"contains","qualname":"<Slab<T, C>>::contains","value":"pub fn contains(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the slab contains a value for the given key.","sig":null,"attributes":[{"value":"/ Returns `true` if the slab contains a value for the given key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25873,"byte_end":25939,"line_start":720,"line_end":720,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25944,"byte_end":25947,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25952,"byte_end":25966,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25971,"byte_end":25974,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25979,"byte_end":25986,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ let slab = sharded_slab::Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":25991,"byte_end":26032,"line_start":725,"line_end":725,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26037,"byte_end":26040,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let key = slab.insert(\"hello world\").unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26045,"byte_end":26095,"line_start":727,"line_end":727,"column_start":5,"column_end":55}},{"value":"/ assert!(slab.contains(key));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26100,"byte_end":26132,"line_start":728,"line_end":728,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26137,"byte_end":26140,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ slab.take(key).unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26145,"byte_end":26173,"line_start":730,"line_end":730,"column_start":5,"column_end":33}},{"value":"/ assert!(!slab.contains(key));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26178,"byte_end":26211,"line_start":731,"line_end":731,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26216,"byte_end":26223,"line_start":732,"line_end":732,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26383,"byte_end":26394,"line_start":738,"line_end":738,"column_start":12,"column_end":23},"name":"unique_iter","qualname":"<Slab<T, C>>::unique_iter","value":"pub fn unique_iter(&mut Self) -> iter::UniqueIter<, T, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the items in the slab.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all the items in the slab.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26316,"byte_end":26371,"line_start":737,"line_end":737,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27373,"byte_end":27376,"line_start":773,"line_end":773,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the key used to access the guard.\n","sig":null,"attributes":[{"value":"/ Returns the key used to access the guard.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27316,"byte_end":27361,"line_start":772,"line_end":772,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29716,"byte_end":29722,"line_start":860,"line_end":860,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Insert a value in the entry.","sig":null,"attributes":[{"value":"/ Insert a value in the entry.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29059,"byte_end":29091,"line_start":836,"line_end":836,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29096,"byte_end":29099,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ To get the integer index at which this value will be inserted, use","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29104,"byte_end":29174,"line_start":838,"line_end":838,"column_start":5,"column_end":75}},{"value":"/ [`key`] prior to calling `insert`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29179,"byte_end":29217,"line_start":839,"line_end":839,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29222,"byte_end":29225,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29230,"byte_end":29244,"line_start":841,"line_end":841,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29249,"byte_end":29252,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29257,"byte_end":29264,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::Slab;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29269,"byte_end":29298,"line_start":844,"line_end":844,"column_start":5,"column_end":34}},{"value":"/ let mut slab = Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29303,"byte_end":29334,"line_start":845,"line_end":845,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29339,"byte_end":29342,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ let hello = {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29347,"byte_end":29364,"line_start":847,"line_end":847,"column_start":5,"column_end":22}},{"value":"/     let entry = slab.vacant_entry().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29369,"byte_end":29418,"line_start":848,"line_end":848,"column_start":5,"column_end":54}},{"value":"/     let key = entry.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29423,"byte_end":29453,"line_start":849,"line_end":849,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29458,"byte_end":29461,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/     entry.insert((key, \"hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29466,"byte_end":29503,"line_start":851,"line_end":851,"column_start":5,"column_end":42}},{"value":"/     key","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29508,"byte_end":29519,"line_start":852,"line_end":852,"column_start":5,"column_end":16}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29524,"byte_end":29530,"line_start":853,"line_end":853,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29535,"byte_end":29538,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(hello, slab.get(hello).unwrap().0);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29543,"byte_end":29593,"line_start":855,"line_end":855,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(\"hello\", slab.get(hello).unwrap().1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29598,"byte_end":29650,"line_start":856,"line_end":856,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29655,"byte_end":29662,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29667,"byte_end":29670,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ [`key`]: VacantEntry::key","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29675,"byte_end":29704,"line_start":859,"line_end":859,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31115,"byte_end":31118,"line_start":904,"line_end":904,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the integer index at which this entry will be inserted.","sig":null,"attributes":[{"value":"/ Return the integer index at which this entry will be inserted.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30516,"byte_end":30582,"line_start":883,"line_end":883,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30587,"byte_end":30590,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ A value stored in this entry will be associated with this key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30595,"byte_end":30661,"line_start":885,"line_end":885,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30666,"byte_end":30669,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30674,"byte_end":30688,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30693,"byte_end":30696,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30701,"byte_end":30708,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ # use sharded_slab::*;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30713,"byte_end":30739,"line_start":890,"line_end":890,"column_start":5,"column_end":31}},{"value":"/ let mut slab = Slab::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30744,"byte_end":30775,"line_start":891,"line_end":891,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30780,"byte_end":30783,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let hello = {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30788,"byte_end":30805,"line_start":893,"line_end":893,"column_start":5,"column_end":22}},{"value":"/     let entry = slab.vacant_entry().unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30810,"byte_end":30859,"line_start":894,"line_end":894,"column_start":5,"column_end":54}},{"value":"/     let key = entry.key();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30864,"byte_end":30894,"line_start":895,"line_end":895,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30899,"byte_end":30902,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/     entry.insert((key, \"hello\"));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30907,"byte_end":30944,"line_start":897,"line_end":897,"column_start":5,"column_end":42}},{"value":"/     key","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30949,"byte_end":30960,"line_start":898,"line_end":898,"column_start":5,"column_end":16}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30965,"byte_end":30971,"line_start":899,"line_end":899,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30976,"byte_end":30979,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(hello, slab.get(hello).unwrap().0);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":30984,"byte_end":31034,"line_start":901,"line_end":901,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(\"hello\", slab.get(hello).unwrap().1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31039,"byte_end":31091,"line_start":902,"line_end":902,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31096,"byte_end":31103,"line_start":903,"line_end":903,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31307,"byte_end":31310,"line_start":915,"line_end":915,"column_start":12,"column_end":15},"name":"key","qualname":"<OwnedEntry<T, C>>::key","value":"pub fn key(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the key used to access this guard\n","sig":null,"attributes":[{"value":"/ Returns the key used to access this guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31250,"byte_end":31295,"line_start":914,"line_end":914,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1171},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":34205,"byte_end":34209,"line_start":1018,"line_end":1018,"column_start":10,"column_end":14},"name":"Prev","qualname":"::Pack::Prev","value":"type Prev: Pack<C>;","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":" The type packed on the less significant side of this type.","sig":null,"attributes":[{"value":"/ The type packed on the less significant side of this type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33914,"byte_end":33976,"line_start":1012,"line_end":1012,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33981,"byte_end":33984,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ If this type is packed into the least significant bit of a usize, this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33989,"byte_end":34063,"line_start":1014,"line_end":1014,"column_start":5,"column_end":79}},{"value":"/ should be `()`, which occupies no bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":34068,"byte_end":34112,"line_start":1015,"line_end":1015,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":34117,"byte_end":34120,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ This is used to calculate the shift amount for packing this value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":34125,"byte_end":34195,"line_start":1017,"line_end":1017,"column_start":5,"column_end":75}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59182,"byte_end":59186,"line_start":381,"line_end":381,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59634,"byte_end":59638,"line_start":400,"line_end":400,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75702,"byte_end":75706,"line_start":836,"line_end":836,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75801,"byte_end":75805,"line_start":842,"line_end":842,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75894,"byte_end":75898,"line_start":849,"line_end":849,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":76016,"byte_end":76020,"line_start":858,"line_end":858,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":76338,"byte_end":76341,"line_start":873,"line_end":873,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":77032,"byte_end":77035,"line_start":896,"line_end":896,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":77213,"byte_end":77216,"line_start":908,"line_end":908,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":77966,"byte_end":77969,"line_start":930,"line_end":930,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78190,"byte_end":78193,"line_start":940,"line_end":940,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78404,"byte_end":78410,"line_start":952,"line_end":952,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":80421,"byte_end":80427,"line_start":1017,"line_end":1017,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":80619,"byte_end":80625,"line_start":1029,"line_end":1029,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":80996,"byte_end":81002,"line_start":1043,"line_end":1043,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":81522,"byte_end":81528,"line_start":1061,"line_end":1061,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":81749,"byte_end":81755,"line_start":1071,"line_end":1071,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":81948,"byte_end":81956,"line_start":1083,"line_end":1083,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":82639,"byte_end":82647,"line_start":1106,"line_end":1106,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":82817,"byte_end":82825,"line_start":1118,"line_end":1118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":83973,"byte_end":83981,"line_start":1146,"line_end":1146,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84194,"byte_end":84202,"line_start":1156,"line_end":1156,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84382,"byte_end":84390,"line_start":1166,"line_end":1166,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84486,"byte_end":84494,"line_start":1173,"line_end":1173,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84603,"byte_end":84614,"line_start":1182,"line_end":1182,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":87046,"byte_end":87057,"line_start":1255,"line_end":1255,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":87241,"byte_end":87252,"line_start":1267,"line_end":1267,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":87843,"byte_end":87854,"line_start":1284,"line_end":1284,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":88852,"byte_end":88863,"line_start":1310,"line_end":1310,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":89076,"byte_end":89087,"line_start":1320,"line_end":1320,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":89267,"byte_end":89278,"line_start":1330,"line_end":1330,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":89374,"byte_end":89385,"line_start":1337,"line_end":1337,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":93545,"byte_end":93546,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":94020,"byte_end":94033,"line_start":136,"line_end":136,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":94378,"byte_end":94391,"line_start":148,"line_end":148,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":94526,"byte_end":94537,"line_start":154,"line_end":154,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/sync.rs","byte_start":98647,"byte_end":98657,"line_start":85,"line_end":85,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/sync.rs","byte_start":99315,"byte_end":99320,"line_start":114,"line_end":114,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101511,"byte_end":101517,"line_start":29,"line_end":29,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101605,"byte_end":101608,"line_start":35,"line_end":35,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101734,"byte_end":101737,"line_start":45,"line_end":45,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101854,"byte_end":101861,"line_start":52,"line_end":52,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":102054,"byte_end":102061,"line_start":63,"line_end":63,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":102232,"byte_end":102238,"line_start":74,"line_end":74,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":102349,"byte_end":102354,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":102481,"byte_end":102487,"line_start":88,"line_end":88,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/iter.rs","byte_start":103068,"byte_end":103078,"line_start":11,"line_end":11,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":118264,"byte_end":118274,"line_start":56,"line_end":56,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":118729,"byte_end":118739,"line_start":75,"line_end":75,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":118933,"byte_end":118937,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":128729,"byte_end":128733,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":131583,"byte_end":131587,"line_start":420,"line_end":420,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":133915,"byte_end":133919,"line_start":491,"line_end":491,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":135614,"byte_end":135618,"line_start":537,"line_end":537,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136189,"byte_end":136199,"line_start":552,"line_end":552,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136362,"byte_end":136372,"line_start":558,"line_end":558,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136509,"byte_end":136519,"line_start":564,"line_end":564,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136637,"byte_end":136647,"line_start":570,"line_end":570,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136691,"byte_end":136701,"line_start":572,"line_end":572,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136862,"byte_end":136872,"line_start":578,"line_end":578,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":137011,"byte_end":137021,"line_start":584,"line_end":584,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":137126,"byte_end":137136,"line_start":590,"line_end":590,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":137191,"byte_end":137196,"line_start":594,"line_end":594,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":138557,"byte_end":138566,"line_start":634,"line_end":634,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":138902,"byte_end":138911,"line_start":649,"line_end":649,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":139402,"byte_end":139411,"line_start":670,"line_end":670,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":139516,"byte_end":139525,"line_start":676,"line_end":676,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":139556,"byte_end":139565,"line_start":678,"line_end":678,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":139765,"byte_end":139773,"line_start":686,"line_end":686,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140143,"byte_end":140151,"line_start":703,"line_end":703,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140581,"byte_end":140589,"line_start":722,"line_end":722,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140764,"byte_end":140772,"line_start":728,"line_end":728,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140890,"byte_end":140898,"line_start":734,"line_end":734,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140942,"byte_end":140950,"line_start":736,"line_end":736,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141111,"byte_end":141119,"line_start":742,"line_end":742,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141258,"byte_end":141266,"line_start":748,"line_end":748,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141378,"byte_end":141386,"line_start":754,"line_end":754,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141457,"byte_end":141469,"line_start":758,"line_end":758,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141736,"byte_end":141745,"line_start":771,"line_end":771,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/stack.rs","byte_start":147410,"byte_end":147423,"line_start":10,"line_end":10,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/stack.rs","byte_start":148796,"byte_end":148809,"line_start":55,"line_end":55,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/stack.rs","byte_start":148970,"byte_end":148983,"line_start":61,"line_end":61,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":104529,"byte_end":104533,"line_start":19,"line_end":19,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":105657,"byte_end":105661,"line_start":48,"line_end":48,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":106818,"byte_end":106823,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":107231,"byte_end":107236,"line_start":113,"line_end":113,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":107388,"byte_end":107394,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":109648,"byte_end":109654,"line_start":199,"line_end":199,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":111324,"byte_end":111330,"line_start":258,"line_end":258,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":114038,"byte_end":114043,"line_start":351,"line_end":351,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":114352,"byte_end":114358,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":114699,"byte_end":114703,"line_start":373,"line_end":373,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115021,"byte_end":115025,"line_start":383,"line_end":383,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115141,"byte_end":115145,"line_start":389,"line_end":389,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115189,"byte_end":115193,"line_start":391,"line_end":391,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115352,"byte_end":115356,"line_start":397,"line_end":397,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115493,"byte_end":115497,"line_start":403,"line_end":403,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115608,"byte_end":115612,"line_start":409,"line_end":409,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":153423,"byte_end":153428,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":154442,"byte_end":154447,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":156399,"byte_end":156404,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":159373,"byte_end":159378,"line_start":256,"line_end":256,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":159656,"byte_end":159661,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":161913,"byte_end":161918,"line_start":333,"line_end":333,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":162804,"byte_end":162809,"line_start":354,"line_end":354,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":163370,"byte_end":163373,"line_start":372,"line_end":372,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":164691,"byte_end":164698,"line_start":411,"line_end":411,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":166304,"byte_end":166307,"line_start":46,"line_end":46,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":166692,"byte_end":166695,"line_start":66,"line_end":66,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":167135,"byte_end":167138,"line_start":86,"line_end":86,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":167504,"byte_end":167507,"line_start":102,"line_end":102,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":167889,"byte_end":167892,"line_start":116,"line_end":116,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":167991,"byte_end":167994,"line_start":122,"line_end":122,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":168033,"byte_end":168036,"line_start":124,"line_end":124,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":168138,"byte_end":168141,"line_start":130,"line_end":130,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":168184,"byte_end":168196,"line_start":134,"line_end":134,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":169771,"byte_end":169783,"line_start":187,"line_end":187,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13693,"byte_end":13697,"line_start":372,"line_end":372,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14124,"byte_end":14128,"line_start":388,"line_end":388,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26782,"byte_end":26786,"line_start":751,"line_end":751,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26899,"byte_end":26903,"line_start":757,"line_end":757,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27168,"byte_end":27172,"line_start":766,"line_end":766,"column_start":47,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27228,"byte_end":27232,"line_start":767,"line_end":767,"column_start":47,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27294,"byte_end":27299,"line_start":771,"line_end":771,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27821,"byte_end":27826,"line_start":788,"line_end":788,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27967,"byte_end":27972,"line_start":796,"line_end":796,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":28623,"byte_end":28628,"line_start":813,"line_end":813,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":28831,"byte_end":28836,"line_start":823,"line_end":823,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29031,"byte_end":29042,"line_start":835,"line_end":835,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31201,"byte_end":31211,"line_start":910,"line_end":910,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31738,"byte_end":31748,"line_start":930,"line_end":930,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31894,"byte_end":31904,"line_start":941,"line_end":941,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33035,"byte_end":33045,"line_start":968,"line_end":968,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33240,"byte_end":33250,"line_start":978,"line_end":978,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33412,"byte_end":33422,"line_start":988,"line_end":988,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33500,"byte_end":33510,"line_start":995,"line_end":995,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9077,"byte_end":9091,"line_start":206,"line_end":206,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":9101,"byte_end":9105,"line_start":207,"line_end":207,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":8}}],"macro_refs":[],"relations":[{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59182,"byte_end":59186,"line_start":381,"line_end":381,"column_start":9,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":59634,"byte_end":59638,"line_start":400,"line_end":400,"column_start":12,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75702,"byte_end":75706,"line_start":836,"line_end":836,"column_start":28,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":48},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75801,"byte_end":75805,"line_start":842,"line_end":842,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":48},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":75894,"byte_end":75898,"line_start":849,"line_end":849,"column_start":21,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":48},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":76016,"byte_end":76020,"line_start":858,"line_end":858,"column_start":27,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":48},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":76338,"byte_end":76341,"line_start":873,"line_end":873,"column_start":16,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":77032,"byte_end":77035,"line_start":896,"line_end":896,"column_start":36,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":77213,"byte_end":77216,"line_start":908,"line_end":908,"column_start":25,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":77966,"byte_end":77969,"line_start":930,"line_end":930,"column_start":31,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78190,"byte_end":78193,"line_start":940,"line_end":940,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":78404,"byte_end":78410,"line_start":952,"line_end":952,"column_start":29,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":80421,"byte_end":80427,"line_start":1017,"line_end":1017,"column_start":49,"column_end":55},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":80619,"byte_end":80625,"line_start":1029,"line_end":1029,"column_start":39,"column_end":45},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":80996,"byte_end":81002,"line_start":1043,"line_end":1043,"column_start":25,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":81522,"byte_end":81528,"line_start":1061,"line_end":1061,"column_start":31,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":81749,"byte_end":81755,"line_start":1071,"line_end":1071,"column_start":33,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":81948,"byte_end":81956,"line_start":1083,"line_end":1083,"column_start":12,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":82639,"byte_end":82647,"line_start":1106,"line_end":1106,"column_start":32,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":82817,"byte_end":82825,"line_start":1118,"line_end":1118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":83973,"byte_end":83981,"line_start":1146,"line_end":1146,"column_start":27,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84194,"byte_end":84202,"line_start":1156,"line_end":1156,"column_start":29,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84382,"byte_end":84390,"line_start":1166,"line_end":1166,"column_start":28,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84486,"byte_end":84494,"line_start":1173,"line_end":1173,"column_start":28,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":84603,"byte_end":84614,"line_start":1182,"line_end":1182,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":87046,"byte_end":87057,"line_start":1255,"line_end":1255,"column_start":32,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":87241,"byte_end":87252,"line_start":1267,"line_end":1267,"column_start":35,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":87843,"byte_end":87854,"line_start":1284,"line_end":1284,"column_start":21,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":88852,"byte_end":88863,"line_start":1310,"line_end":1310,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":89076,"byte_end":89087,"line_start":1320,"line_end":1320,"column_start":29,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":89267,"byte_end":89278,"line_start":1330,"line_end":1330,"column_start":28,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/pool.rs","byte_start":89374,"byte_end":89385,"line_start":1337,"line_end":1337,"column_start":28,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":73},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":89677,"byte_end":89682,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":258}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":91491,"byte_end":91497,"line_start":42,"line_end":42,"column_start":30,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":258},"to":{"krate":0,"index":263}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":93545,"byte_end":93546,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":277},"to":{"krate":0,"index":263}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":94020,"byte_end":94033,"line_start":136,"line_end":136,"column_start":17,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1190},"to":{"krate":0,"index":258}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":94378,"byte_end":94391,"line_start":148,"line_end":148,"column_start":21,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/cfg.rs","byte_start":94526,"byte_end":94537,"line_start":154,"line_end":154,"column_start":32,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":278},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/sync.rs","byte_start":98647,"byte_end":98657,"line_start":85,"line_end":85,"column_start":13,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/sync.rs","byte_start":99315,"byte_end":99320,"line_start":114,"line_end":114,"column_start":17,"column_end":22},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101511,"byte_end":101517,"line_start":29,"line_end":29,"column_start":19,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":2,"index":45974},"to":{"krate":0,"index":344}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101605,"byte_end":101608,"line_start":35,"line_end":35,"column_start":19,"column_end":22},"kind":{"Impl":{"id":39}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":344}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101734,"byte_end":101737,"line_start":45,"line_end":45,"column_start":19,"column_end":22},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":344}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":101854,"byte_end":101861,"line_start":52,"line_end":52,"column_start":38,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":1200},"to":{"krate":0,"index":344}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":102054,"byte_end":102061,"line_start":63,"line_end":63,"column_start":35,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":1917},"to":{"krate":0,"index":344}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":102232,"byte_end":102238,"line_start":74,"line_end":74,"column_start":16,"column_end":22},"kind":{"Impl":{"id":43}},"from":{"krate":5,"index":7626},"to":{"krate":0,"index":344}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":102349,"byte_end":102354,"line_start":81,"line_end":81,"column_start":32,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":1,"index":8734},"to":{"krate":0,"index":344}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/clear.rs","byte_start":102481,"byte_end":102487,"line_start":88,"line_end":88,"column_start":32,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":8980},"to":{"krate":0,"index":344}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/iter.rs","byte_start":103068,"byte_end":103078,"line_start":11,"line_end":11,"column_start":49,"column_end":59},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":118264,"byte_end":118274,"line_start":56,"line_end":56,"column_start":34,"column_end":44},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":461},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":118729,"byte_end":118739,"line_start":75,"line_end":75,"column_start":22,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":118933,"byte_end":118937,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":128729,"byte_end":128733,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":131583,"byte_end":131587,"line_start":420,"line_end":420,"column_start":12,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":133915,"byte_end":133919,"line_start":491,"line_end":491,"column_start":25,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":135614,"byte_end":135618,"line_start":537,"line_end":537,"column_start":40,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136189,"byte_end":136199,"line_start":552,"line_end":552,"column_start":24,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136362,"byte_end":136372,"line_start":558,"line_end":558,"column_start":22,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136509,"byte_end":136519,"line_start":564,"line_end":564,"column_start":36,"column_end":46},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136637,"byte_end":136647,"line_start":570,"line_end":570,"column_start":29,"column_end":39},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136691,"byte_end":136701,"line_start":572,"line_end":572,"column_start":37,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":136862,"byte_end":136872,"line_start":578,"line_end":578,"column_start":30,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":137011,"byte_end":137021,"line_start":584,"line_end":584,"column_start":32,"column_end":42},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":137126,"byte_end":137136,"line_start":590,"line_end":590,"column_start":31,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":461},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":137191,"byte_end":137196,"line_start":594,"line_end":594,"column_start":25,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":138557,"byte_end":138566,"line_start":634,"line_end":634,"column_start":22,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":138902,"byte_end":138911,"line_start":649,"line_end":649,"column_start":34,"column_end":43},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":469},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":139402,"byte_end":139411,"line_start":670,"line_end":670,"column_start":23,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":139516,"byte_end":139525,"line_start":676,"line_end":676,"column_start":16,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":139556,"byte_end":139565,"line_start":678,"line_end":678,"column_start":24,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":139765,"byte_end":139773,"line_start":686,"line_end":686,"column_start":34,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":465},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140143,"byte_end":140151,"line_start":703,"line_end":703,"column_start":22,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140581,"byte_end":140589,"line_start":722,"line_end":722,"column_start":24,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140764,"byte_end":140772,"line_start":728,"line_end":728,"column_start":36,"column_end":44},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140890,"byte_end":140898,"line_start":734,"line_end":734,"column_start":29,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":140942,"byte_end":140950,"line_start":736,"line_end":736,"column_start":37,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141111,"byte_end":141119,"line_start":742,"line_end":742,"column_start":30,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141258,"byte_end":141266,"line_start":748,"line_end":748,"column_start":32,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141378,"byte_end":141386,"line_start":754,"line_end":754,"column_start":31,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":465},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141457,"byte_end":141469,"line_start":758,"line_end":758,"column_start":34,"column_end":46},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":473},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/slot.rs","byte_start":141736,"byte_end":141745,"line_start":771,"line_end":771,"column_start":25,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/stack.rs","byte_start":147410,"byte_end":147423,"line_start":10,"line_end":10,"column_start":22,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/stack.rs","byte_start":148796,"byte_end":148809,"line_start":55,"line_end":55,"column_start":45,"column_end":58},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":647},"to":{"krate":0,"index":684}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/stack.rs","byte_start":148970,"byte_end":148983,"line_start":61,"line_end":61,"column_start":24,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":104529,"byte_end":104533,"line_start":19,"line_end":19,"column_start":22,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":105657,"byte_end":105661,"line_start":48,"line_end":48,"column_start":34,"column_end":38},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":675},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":106818,"byte_end":106823,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":107231,"byte_end":107236,"line_start":113,"line_end":113,"column_start":38,"column_end":43},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":698},"to":{"krate":0,"index":684}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":107388,"byte_end":107394,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":109648,"byte_end":109654,"line_start":199,"line_end":199,"column_start":16,"column_end":22},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":111324,"byte_end":111330,"line_start":258,"line_end":258,"column_start":12,"column_end":18},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":114038,"byte_end":114043,"line_start":351,"line_end":351,"column_start":21,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":114352,"byte_end":114358,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":114699,"byte_end":114703,"line_start":373,"line_end":373,"column_start":37,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":675},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115021,"byte_end":115025,"line_start":383,"line_end":383,"column_start":36,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":675},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115141,"byte_end":115145,"line_start":389,"line_end":389,"column_start":29,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":675},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115189,"byte_end":115193,"line_start":391,"line_end":391,"column_start":37,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":675},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115352,"byte_end":115356,"line_start":397,"line_end":397,"column_start":30,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":675},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115493,"byte_end":115497,"line_start":403,"line_end":403,"column_start":32,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":675},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/page/mod.rs","byte_start":115608,"byte_end":115612,"line_start":409,"line_end":409,"column_start":31,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":675},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":153423,"byte_end":153428,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":154442,"byte_end":154447,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":156399,"byte_end":156404,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":159373,"byte_end":159378,"line_start":256,"line_end":256,"column_start":52,"column_end":57},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":159656,"byte_end":159661,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":161913,"byte_end":161918,"line_start":333,"line_end":333,"column_start":34,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":162804,"byte_end":162809,"line_start":354,"line_end":354,"column_start":52,"column_end":57},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":163370,"byte_end":163373,"line_start":372,"line_end":372,"column_start":25,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/shard.rs","byte_start":164691,"byte_end":164698,"line_start":411,"line_end":411,"column_start":29,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1271},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":166304,"byte_end":166307,"line_start":46,"line_end":46,"column_start":34,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":967},"to":{"krate":0,"index":1168}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":166692,"byte_end":166695,"line_start":66,"line_end":66,"column_start":22,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":167135,"byte_end":167138,"line_start":86,"line_end":86,"column_start":9,"column_end":12},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":167504,"byte_end":167507,"line_start":102,"line_end":102,"column_start":24,"column_end":27},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":167889,"byte_end":167892,"line_start":116,"line_end":116,"column_start":23,"column_end":26},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":167991,"byte_end":167994,"line_start":122,"line_end":122,"column_start":16,"column_end":19},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":168033,"byte_end":168036,"line_start":124,"line_end":124,"column_start":32,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":168138,"byte_end":168141,"line_start":130,"line_end":130,"column_start":31,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":967},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":168184,"byte_end":168196,"line_start":134,"line_end":134,"column_start":6,"column_end":18},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/tid.rs","byte_start":169771,"byte_end":169783,"line_start":187,"line_end":187,"column_start":15,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":13693,"byte_end":13697,"line_start":372,"line_end":372,"column_start":9,"column_end":13},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":14124,"byte_end":14128,"line_start":388,"line_end":388,"column_start":25,"column_end":29},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26782,"byte_end":26786,"line_start":751,"line_end":751,"column_start":21,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":26899,"byte_end":26903,"line_start":757,"line_end":757,"column_start":52,"column_end":56},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27168,"byte_end":27172,"line_start":766,"line_end":766,"column_start":47,"column_end":51},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27228,"byte_end":27232,"line_start":767,"line_end":767,"column_start":47,"column_end":51},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1050},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27294,"byte_end":27299,"line_start":771,"line_end":771,"column_start":29,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27821,"byte_end":27826,"line_start":788,"line_end":788,"column_start":49,"column_end":54},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":27967,"byte_end":27972,"line_start":796,"line_end":796,"column_start":38,"column_end":43},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":28623,"byte_end":28628,"line_start":813,"line_end":813,"column_start":31,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":28831,"byte_end":28836,"line_start":823,"line_end":823,"column_start":33,"column_end":38},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":29031,"byte_end":29042,"line_start":835,"line_end":835,"column_start":29,"column_end":40},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31201,"byte_end":31211,"line_start":910,"line_end":910,"column_start":12,"column_end":22},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31738,"byte_end":31748,"line_start":930,"line_end":930,"column_start":32,"column_end":42},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":31894,"byte_end":31904,"line_start":941,"line_end":941,"column_start":21,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33035,"byte_end":33045,"line_start":968,"line_end":968,"column_start":27,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33240,"byte_end":33250,"line_start":978,"line_end":978,"column_start":29,"column_end":39},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33412,"byte_end":33422,"line_start":988,"line_end":988,"column_start":28,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33500,"byte_end":33510,"line_start":995,"line_end":995,"column_start":28,"column_end":38},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/sharded-slab-0.1.4/src/lib.rs","byte_start":33617,"byte_end":33622,"line_start":1004,"line_end":1004,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":1168}}]}