{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3","program":"/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crypto_common","--edition=2018","/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=323f7f533e47ff0c","-C","extra-filename=-323f7f533e47ff0c","--out-dir","/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps","-L","dependency=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps","--extern","generic_array=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps/libgeneric_array-f500006f7f1c7943.rmeta","--extern","typenum=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps/libtypenum-1f04878634d9326a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu"],"output":"/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps/libcrypto_common-323f7f533e47ff0c.rmeta"},"prelude":{"crate_id":{"name":"crypto_common","disambiguator":[5467915393634550326,0]},"crate_root":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src","external_crates":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":20,"id":{"name":"generic_array","disambiguator":[14659237377528794186,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","num":21,"id":{"name":"typenum","disambiguator":[2930080192617149959,0]}}],"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":0,"byte_end":8910,"line_start":1,"line_end":300,"column_start":1,"column_end":44}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":507,"byte_end":520,"line_start":19,"line_end":19,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":545,"byte_end":552,"line_start":20,"line_end":20,"column_start":24,"column_end":31},"alias_span":null,"name":"typenum","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":0,"byte_end":8910,"line_start":1,"line_end":300,"column_start":1,"column_end":44},"name":"","qualname":"::","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":75},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":80},{"krate":0,"index":82}],"decl_id":null,"docs":" Common cryptographic traits.\n","sig":null,"attributes":[{"value":"/ Common cryptographic traits.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"no_std","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":34,"byte_end":44,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":340,"byte_end":363,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":364,"byte_end":404,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":773,"byte_end":778,"line_start":28,"line_end":28,"column_start":10,"column_end":15},"name":"Block","qualname":"::Block","value":"GenericArray<u8, <B as BlockSizeUser>::BlockSize>","parent":null,"children":[],"decl_id":null,"docs":" Block on which [`BlockSizeUser`] implementors operate.\n","sig":null,"attributes":[{"value":"/ Block on which [`BlockSizeUser`] implementors operate.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":705,"byte_end":763,"line_start":27,"line_end":27,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":897,"byte_end":903,"line_start":30,"line_end":30,"column_start":10,"column_end":16},"name":"Output","qualname":"::Output","value":"GenericArray<u8, <T as OutputSizeUser>::OutputSize>","parent":null,"children":[],"decl_id":null,"docs":" Output array of [`OutputSizeUser`] implementors.\n","sig":null,"attributes":[{"value":"/ Output array of [`OutputSizeUser`] implementors.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":835,"byte_end":887,"line_start":29,"line_end":29,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":28},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":32,"line_end":32,"column_start":10,"column_end":13},"name":"Key","qualname":"::Key","value":"GenericArray<u8, <B as KeySizeUser>::KeySize>","parent":null,"children":[],"decl_id":null,"docs":" Key used by [`KeySizeUser`] implementors.\n","sig":null,"attributes":[{"value":"/ Key used by [`KeySizeUser`] implementors.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":962,"byte_end":1007,"line_start":31,"line_end":31,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1153,"byte_end":1155,"line_start":34,"line_end":34,"column_start":10,"column_end":12},"name":"Iv","qualname":"::Iv","value":"GenericArray<u8, <B as IvSizeUser>::IvSize>","parent":null,"children":[],"decl_id":null,"docs":" Initialization vector (nonce) used by [`IvSizeUser`] implementors.\n","sig":null,"attributes":[{"value":"/ Initialization vector (nonce) used by [`IvSizeUser`] implementors.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1073,"byte_end":1143,"line_start":33,"line_end":33,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1257,"byte_end":1270,"line_start":37,"line_end":37,"column_start":11,"column_end":24},"name":"BlockSizeUser","qualname":"::BlockSizeUser","value":"BlockSizeUser","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" Types which process data in blocks.\n","sig":null,"attributes":[{"value":"/ Types which process data in blocks.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1207,"byte_end":1246,"line_start":36,"line_end":36,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":33},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1318,"byte_end":1327,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"name":"BlockSize","qualname":"::BlockSizeUser::BlockSize","value":"type BlockSize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Size of the block in bytes.\n","sig":null,"attributes":[{"value":"/ Size of the block in bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1277,"byte_end":1308,"line_start":38,"line_end":38,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1400,"byte_end":1410,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"block_size","qualname":"::BlockSizeUser::block_size","value":"pub fn block_size() -> usize","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Return block size in bytes.\n","sig":null,"attributes":[{"value":"/ Return block size in bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1361,"byte_end":1392,"line_start":41,"line_end":41,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1695,"byte_end":1709,"line_start":56,"line_end":56,"column_start":11,"column_end":25},"name":"OutputSizeUser","qualname":"::OutputSizeUser","value":"OutputSizeUser","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Types which return data with the given size.\n","sig":null,"attributes":[{"value":"/ Types which return data with the given size.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1636,"byte_end":1684,"line_start":55,"line_end":55,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":42},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1758,"byte_end":1768,"line_start":58,"line_end":58,"column_start":10,"column_end":20},"name":"OutputSize","qualname":"::OutputSizeUser::OutputSize","value":"type OutputSize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Size of the output in bytes.\n","sig":null,"attributes":[{"value":"/ Size of the output in bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1716,"byte_end":1748,"line_start":57,"line_end":57,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1842,"byte_end":1853,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"output_size","qualname":"::OutputSizeUser::output_size","value":"pub fn output_size() -> usize","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Return output size in bytes.\n","sig":null,"attributes":[{"value":"/ Return output size in bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1802,"byte_end":1834,"line_start":60,"line_end":60,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2035,"byte_end":2046,"line_start":69,"line_end":69,"column_start":11,"column_end":22},"name":"KeySizeUser","qualname":"::KeySizeUser","value":"KeySizeUser","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" Types which use key for initialization.","sig":null,"attributes":[{"value":"/ Types which use key for initialization.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1908,"byte_end":1951,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1952,"byte_end":1955,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Generally it's used indirectly via [`KeyInit`] or [`KeyIvInit`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":1956,"byte_end":2024,"line_start":68,"line_end":68,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2085,"byte_end":2092,"line_start":71,"line_end":71,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::KeySizeUser::KeySize","value":"type KeySize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Key size in bytes.\n","sig":null,"attributes":[{"value":"/ Key size in bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2053,"byte_end":2075,"line_start":70,"line_end":70,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2163,"byte_end":2171,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"key_size","qualname":"::KeySizeUser::key_size","value":"pub fn key_size() -> usize","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Return key size in bytes.\n","sig":null,"attributes":[{"value":"/ Return key size in bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2126,"byte_end":2155,"line_start":73,"line_end":73,"column_start":5,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2380,"byte_end":2390,"line_start":82,"line_end":82,"column_start":11,"column_end":21},"name":"IvSizeUser","qualname":"::IvSizeUser","value":"IvSizeUser","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" Types which use initialization vector (nonce) for initialization.","sig":null,"attributes":[{"value":"/ Types which use initialization vector (nonce) for initialization.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2223,"byte_end":2292,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2293,"byte_end":2296,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Generally it's used indirectly via [`KeyIvInit`] or [`InnerIvInit`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2297,"byte_end":2369,"line_start":81,"line_end":81,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2447,"byte_end":2453,"line_start":84,"line_end":84,"column_start":10,"column_end":16},"name":"IvSize","qualname":"::IvSizeUser::IvSize","value":"type IvSize: ArrayLength<u8> + 'static;","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Initialization vector size in bytes.\n","sig":null,"attributes":[{"value":"/ Initialization vector size in bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2397,"byte_end":2437,"line_start":83,"line_end":83,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2523,"byte_end":2530,"line_start":87,"line_end":87,"column_start":8,"column_end":15},"name":"iv_size","qualname":"::IvSizeUser::iv_size","value":"pub fn iv_size() -> usize","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Return IV size in bytes.\n","sig":null,"attributes":[{"value":"/ Return IV size in bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2487,"byte_end":2515,"line_start":86,"line_end":86,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2721,"byte_end":2730,"line_start":95,"line_end":95,"column_start":11,"column_end":20},"name":"InnerUser","qualname":"::InnerUser","value":"InnerUser","parent":null,"children":[{"krate":0,"index":51}],"decl_id":null,"docs":" Types which use another type for initialization.","sig":null,"attributes":[{"value":"/ Types which use another type for initialization.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2581,"byte_end":2633,"line_start":92,"line_end":92,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2634,"byte_end":2637,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Generally it's used indirectly via [`InnerInit`] or [`InnerIvInit`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2638,"byte_end":2710,"line_start":94,"line_end":94,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2762,"byte_end":2767,"line_start":97,"line_end":97,"column_start":10,"column_end":15},"name":"Inner","qualname":"::InnerUser::Inner","value":"type Inner;","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" Inner type.\n","sig":null,"attributes":[{"value":"/ Inner type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2737,"byte_end":2752,"line_start":96,"line_end":96,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2804,"byte_end":2809,"line_start":101,"line_end":101,"column_start":11,"column_end":16},"name":"Reset","qualname":"::Reset","value":"Reset","parent":null,"children":[{"krate":0,"index":53}],"decl_id":null,"docs":" Resettable types.\n","sig":null,"attributes":[{"value":"/ Resettable types.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2772,"byte_end":2793,"line_start":100,"line_end":100,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2861,"byte_end":2866,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"reset","qualname":"::Reset::reset","value":"pub fn reset(&mut Self)","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Reset state to its initial value.\n","sig":null,"attributes":[{"value":"/ Reset state to its initial value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2816,"byte_end":2853,"line_start":102,"line_end":102,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2973,"byte_end":2986,"line_start":107,"line_end":107,"column_start":11,"column_end":24},"name":"AlgorithmName","qualname":"::AlgorithmName","value":"AlgorithmName","parent":null,"children":[{"krate":0,"index":55}],"decl_id":null,"docs":" Trait which stores algorithm name constant, used in `Debug` implementations.\n","sig":null,"attributes":[{"value":"/ Trait which stores algorithm name constant, used in `Debug` implementations.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2882,"byte_end":2962,"line_start":106,"line_end":106,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3035,"byte_end":3049,"line_start":109,"line_end":109,"column_start":8,"column_end":22},"name":"write_alg_name","qualname":"::AlgorithmName::write_alg_name","value":"pub fn write_alg_name(&mut fmt::Formatter) -> fmt::Result","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Write algorithm name into `f`.\n","sig":null,"attributes":[{"value":"/ Write algorithm name into `f`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":2993,"byte_end":3027,"line_start":108,"line_end":108,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3152,"byte_end":3159,"line_start":113,"line_end":113,"column_start":11,"column_end":18},"name":"KeyInit","qualname":"::KeyInit","value":"KeyInit: KeySizeUser + Sized","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Types which can be initialized from key.\n","sig":null,"attributes":[{"value":"/ Types which can be initialized from key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3097,"byte_end":3141,"line_start":112,"line_end":112,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3236,"byte_end":3239,"line_start":115,"line_end":115,"column_start":8,"column_end":11},"name":"new","qualname":"::KeyInit::new","value":"pub fn new(&Key<Self>) -> Self","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Create new value from fixed size key.\n","sig":null,"attributes":[{"value":"/ Create new value from fixed size key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3187,"byte_end":3228,"line_start":114,"line_end":114,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3323,"byte_end":3337,"line_start":118,"line_end":118,"column_start":8,"column_end":22},"name":"new_from_slice","qualname":"::KeyInit::new_from_slice","value":"pub fn new_from_slice(&[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Create new value from variable size key.\n","sig":null,"attributes":[{"value":"/ Create new value from variable size key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3271,"byte_end":3315,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3983,"byte_end":3992,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"KeyIvInit","qualname":"::KeyIvInit","value":"KeyIvInit: KeySizeUser + IvSizeUser + Sized","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" Types which can be initialized from key and initialization vector (nonce).\n","sig":null,"attributes":[{"value":"/ Types which can be initialized from key and initialization vector (nonce).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3894,"byte_end":3972,"line_start":137,"line_end":137,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":4094,"byte_end":4097,"line_start":140,"line_end":140,"column_start":8,"column_end":11},"name":"new","qualname":"::KeyIvInit::new","value":"pub fn new(&Key<Self>, &Iv<Self>) -> Self","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Create new value from fixed length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new value from fixed length key and nonce.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":4033,"byte_end":4086,"line_start":139,"line_end":139,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":4222,"byte_end":4237,"line_start":144,"line_end":144,"column_start":8,"column_end":23},"name":"new_from_slices","qualname":"::KeyIvInit::new_from_slices","value":"pub fn new_from_slices(&[u8], &[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Create new value from variable length key and nonce.\n","sig":null,"attributes":[{"value":"/ Create new value from variable length key and nonce.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":4144,"byte_end":4200,"line_start":142,"line_end":142,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":4205,"byte_end":4214,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5788,"byte_end":5797,"line_start":189,"line_end":189,"column_start":11,"column_end":20},"name":"InnerInit","qualname":"::InnerInit","value":"InnerInit: InnerUser + Sized","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" Types which can be initialized from another type (usually block ciphers).","sig":null,"attributes":[{"value":"/ Types which can be initialized from another type (usually block ciphers).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5636,"byte_end":5713,"line_start":186,"line_end":186,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5714,"byte_end":5717,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ Usually used for initializing types from block ciphers.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5718,"byte_end":5777,"line_start":188,"line_end":188,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5869,"byte_end":5879,"line_start":191,"line_end":191,"column_start":8,"column_end":18},"name":"inner_init","qualname":"::InnerInit::inner_init","value":"pub fn inner_init(Self::Inner) -> Self","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Initialize value from the `inner`.\n","sig":null,"attributes":[{"value":"/ Initialize value from the `inner`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5823,"byte_end":5861,"line_start":190,"line_end":190,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6087,"byte_end":6098,"line_start":198,"line_end":198,"column_start":11,"column_end":22},"name":"InnerIvInit","qualname":"::InnerIvInit","value":"InnerIvInit: InnerUser + IvSizeUser + Sized","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" Types which can be initialized from another type and additional initialization\n vector/nonce.","sig":null,"attributes":[{"value":"/ Types which can be initialized from another type and additional initialization","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5912,"byte_end":5994,"line_start":194,"line_end":194,"column_start":1,"column_end":83}},{"value":"/ vector/nonce.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5995,"byte_end":6012,"line_start":195,"line_end":195,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6013,"byte_end":6016,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Usually used for initializing types from block ciphers.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6017,"byte_end":6076,"line_start":197,"line_end":197,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6195,"byte_end":6208,"line_start":200,"line_end":200,"column_start":8,"column_end":21},"name":"inner_iv_init","qualname":"::InnerIvInit::inner_iv_init","value":"pub fn inner_iv_init(Self::Inner, &Iv<Self>) -> Self","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Initialize value using `inner` and `iv` array.\n","sig":null,"attributes":[{"value":"/ Initialize value using `inner` and `iv` array.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6137,"byte_end":6187,"line_start":199,"line_end":199,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6316,"byte_end":6335,"line_start":203,"line_end":203,"column_start":8,"column_end":27},"name":"inner_iv_slice_init","qualname":"::InnerIvInit::inner_iv_slice_init","value":"pub fn inner_iv_slice_init(Self::Inner, &[u8]) -> Result<Self, InvalidLength>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Initialize value using `inner` and `iv` slice.\n","sig":null,"attributes":[{"value":"/ Initialize value using `inner` and `iv` slice.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6258,"byte_end":6308,"line_start":202,"line_end":202,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":8668,"byte_end":8681,"line_start":291,"line_end":291,"column_start":12,"column_end":25},"name":"InvalidLength","qualname":"::InvalidLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned when key and/or IV used in the [`KeyInit`],\n [`KeyIvInit`], and [`InnerIvInit`] slice-based methods had\n an invalid length.\n","sig":null,"attributes":[{"value":"/ The error type returned when key and/or IV used in the [`KeyInit`],","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":8454,"byte_end":8525,"line_start":287,"line_end":287,"column_start":1,"column_end":72}},{"value":"/ [`KeyIvInit`], and [`InnerIvInit`] slice-based methods had","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":8526,"byte_end":8588,"line_start":288,"line_end":288,"column_start":1,"column_end":63}},{"value":"/ an invalid length.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":8589,"byte_end":8611,"line_start":289,"line_end":289,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6941,"byte_end":6942,"line_start":222,"line_end":222,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":7076,"byte_end":7077,"line_start":230,"line_end":230,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":7459,"byte_end":7460,"line_start":246,"line_end":246,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":8706,"byte_end":8719,"line_start":293,"line_end":293,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":8894,"byte_end":8907,"line_start":300,"line_end":300,"column_start":28,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3161,"byte_end":3172,"line_start":113,"line_end":113,"column_start":20,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":44},"to":{"krate":0,"index":56}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3175,"byte_end":3180,"line_start":113,"line_end":113,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":56}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":3994,"byte_end":4005,"line_start":138,"line_end":138,"column_start":22,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":44},"to":{"krate":0,"index":59}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":4008,"byte_end":4018,"line_start":138,"line_end":138,"column_start":36,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":47},"to":{"krate":0,"index":59}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":4021,"byte_end":4026,"line_start":138,"line_end":138,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":59}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5799,"byte_end":5808,"line_start":189,"line_end":189,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":50},"to":{"krate":0,"index":62}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":5811,"byte_end":5816,"line_start":189,"line_end":189,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":62}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6100,"byte_end":6109,"line_start":198,"line_end":198,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":50},"to":{"krate":0,"index":64}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6112,"byte_end":6122,"line_start":198,"line_end":198,"column_start":36,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":47},"to":{"krate":0,"index":64}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6125,"byte_end":6130,"line_start":198,"line_end":198,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":64}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":6941,"byte_end":6942,"line_start":222,"line_end":222,"column_start":25,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":68},"to":{"krate":0,"index":44}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":7076,"byte_end":7077,"line_start":230,"line_end":230,"column_start":23,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":71},"to":{"krate":0,"index":59}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":7459,"byte_end":7460,"line_start":246,"line_end":246,"column_start":21,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":76},"to":{"krate":0,"index":56}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":8706,"byte_end":8719,"line_start":293,"line_end":293,"column_start":23,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/crypto-common-0.1.3/src/lib.rs","byte_start":8894,"byte_end":8907,"line_start":300,"line_end":300,"column_start":28,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":83},"to":{"krate":4,"index":2452}}]}