{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0","program":"/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rustls_pemfile","--edition=2018","/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=1d3cb85dcc631330","-C","extra-filename=-1d3cb85dcc631330","--out-dir","/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps","-L","dependency=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps","--extern","base64=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps/libbase64-f611919d3c69e5aa.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu"],"output":"/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/mysql/target/rls/debug/deps/librustls_pemfile-1d3cb85dcc631330.rmeta"},"prelude":{"crate_id":{"name":"rustls_pemfile","disambiguator":[10489425709422968942,0]},"crate_root":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src","external_crates":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","num":20,"id":{"name":"base64","disambiguator":[8640583072220045819,0]}}],"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":0,"byte_end":3499,"line_start":1,"line_end":102,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1850,"byte_end":1858,"line_start":48,"line_end":48,"column_start":19,"column_end":27},"alias_span":null,"name":"read_all","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1860,"byte_end":1868,"line_start":48,"line_end":48,"column_start":29,"column_end":37},"alias_span":null,"name":"read_one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1870,"byte_end":1874,"line_start":48,"line_end":48,"column_start":39,"column_end":43},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":0,"byte_end":3499,"line_start":1,"line_end":102,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" # rustls-pemfile\n A basic parser for .pem files containing cryptographic keys and certificates.","sig":null,"attributes":[{"value":"/ # rustls-pemfile","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/ A basic parser for .pem files containing cryptographic keys and certificates.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":21,"byte_end":102,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":103,"byte_end":106,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The input to this crate is a .pem file containing potentially many sections,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":107,"byte_end":187,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ and the output is those sections as alleged DER-encodings.  This crate does","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":188,"byte_end":267,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ not decode the actual DER-encoded keys/certificates.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":268,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":325,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Quick start","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":329,"byte_end":347,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/ Starting with an `io::BufRead` containing the file to be read:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":348,"byte_end":414,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ - Use `read_all()` to ingest the whole file, then work through the contents in-memory, or,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":415,"byte_end":509,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ - Use `read_one()` to stream through the file, processing the items as found, or,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":510,"byte_end":595,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/ - Use `certs()` to extract just the certificates (silently discarding other sections), and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":596,"byte_end":690,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/   similarly for `rsa_private_keys()` and `pkcs8_private_keys()`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":691,"byte_end":759,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":760,"byte_end":763,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Example code","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":764,"byte_end":783,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":784,"byte_end":791,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use std::iter;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":792,"byte_end":810,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ use rustls_pemfile::{Item, read_one};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":811,"byte_end":852,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"/ # let mut reader = std::io::BufReader::new(&b\"junk\\n-----BEGIN RSA PRIVATE KEY-----\\nqw\\n-----END RSA PRIVATE KEY-----\\n\"[..]);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":853,"byte_end":984,"line_start":19,"line_end":19,"column_start":1,"column_end":132}},{"value":"/ // Assume `reader` is any std::io::BufRead implementor","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":985,"byte_end":1043,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/ for item in iter::from_fn(|| read_one(&mut reader).transpose()) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1044,"byte_end":1113,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/     match item.unwrap() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1114,"byte_end":1143,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/         Item::X509Certificate(cert) => println!(\"certificate {:?}\", cert),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1144,"byte_end":1222,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/         Item::RSAKey(key) => println!(\"rsa pkcs1 key {:?}\", key),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1223,"byte_end":1292,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/         Item::PKCS8Key(key) => println!(\"pkcs8 key {:?}\", key),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1293,"byte_end":1360,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/         Item::ECKey(key) => println!(\"sec1 ec key {:?}\", key),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1361,"byte_end":1427,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/         _ => println!(\"unhandled item\"),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1428,"byte_end":1472,"line_start":27,"line_end":27,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1473,"byte_end":1482,"line_start":28,"line_end":28,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1483,"byte_end":1488,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1489,"byte_end":1496,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code, unused_must_use, unstable_features)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1554,"byte_end":1613,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"deny(trivial_casts, trivial_numeric_casts, missing_docs,\nunused_import_braces, unused_extern_crates, unused_qualifications)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1614,"byte_end":1767,"line_start":34,"line_end":41,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":37},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3713,"byte_end":3728,"line_start":9,"line_end":9,"column_start":5,"column_end":20},"name":"X509Certificate","qualname":"::pemfile::Item::X509Certificate","value":"Item::X509Certificate(Vec<u8>)","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" A DER-encoded x509 certificate.\n","sig":null,"attributes":[{"value":"/ A DER-encoded x509 certificate.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3673,"byte_end":3708,"line_start":8,"line_end":8,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":40},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3824,"byte_end":3830,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"RSAKey","qualname":"::pemfile::Item::RSAKey","value":"Item::RSAKey(Vec<u8>)","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" A DER-encoded plaintext RSA private key; as specified in PKCS#1/RFC3447\n","sig":null,"attributes":[{"value":"/ A DER-encoded plaintext RSA private key; as specified in PKCS#1/RFC3447","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3744,"byte_end":3819,"line_start":11,"line_end":11,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":43},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3922,"byte_end":3930,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"PKCS8Key","qualname":"::pemfile::Item::PKCS8Key","value":"Item::PKCS8Key(Vec<u8>)","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" A DER-encoded plaintext private key; as specified in PKCS#8/RFC5958\n","sig":null,"attributes":[{"value":"/ A DER-encoded plaintext private key; as specified in PKCS#8/RFC5958","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3846,"byte_end":3917,"line_start":14,"line_end":14,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":46},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4016,"byte_end":4021,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"ECKey","qualname":"::pemfile::Item::ECKey","value":"Item::ECKey(Vec<u8>)","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" A Sec1-encoded plaintext private key; as specified in RFC5915\n","sig":null,"attributes":[{"value":"/ A Sec1-encoded plaintext private key; as specified in RFC5915","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3946,"byte_end":4011,"line_start":17,"line_end":17,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":36},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3662,"byte_end":3666,"line_start":7,"line_end":7,"column_start":10,"column_end":14},"name":"Item","qualname":"::pemfile::Item","value":"pub enum Item {\n    X509Certificate(Vec<u8>),\n    RSAKey(Vec<u8>),\n    PKCS8Key(Vec<u8>),\n    ECKey(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46}],"decl_id":null,"docs":" The contents of a single recognised block in a PEM file.\n","sig":null,"attributes":[{"value":"/ The contents of a single recognised block in a PEM file.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3546,"byte_end":3606,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"non_exhaustive","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":3607,"byte_end":3624,"line_start":5,"line_end":5,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4822,"byte_end":4830,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"read_one","qualname":"::pemfile::read_one","value":"pub fn read_one(&mut dyn io::BufRead) -> Result<Option<Item>, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Extract and decode the next PEM section from `rd`.","sig":null,"attributes":[{"value":"/ Extract and decode the next PEM section from `rd`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4422,"byte_end":4476,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4477,"byte_end":4480,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ - Ok(None) is returned if there is no PEM section read from `rd`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4481,"byte_end":4550,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ - Underlying IO errors produce a `Err(...)`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4551,"byte_end":4598,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ - Otherwise each decoded section is returned with a `Ok(Some(Item::...))`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4599,"byte_end":4676,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4677,"byte_end":4680,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ You can use this function to build an iterator, for example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4681,"byte_end":4745,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/ `for item in iter::from_fn(|| read_one(rd).transpose()) { ... }`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4746,"byte_end":4814,"line_start":40,"line_end":40,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":6674,"byte_end":6682,"line_start":101,"line_end":101,"column_start":8,"column_end":16},"name":"read_all","qualname":"::pemfile::read_all","value":"pub fn read_all(&mut dyn io::BufRead) -> Result<Vec<Item>, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Extract and return all PEM sections by reading `rd`.\n","sig":null,"attributes":[{"value":"/ Extract and return all PEM sections by reading `rd`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":6610,"byte_end":6666,"line_start":100,"line_end":100,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2146,"byte_end":2151,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"certs","qualname":"::certs","value":"pub fn certs(&mut dyn io::BufRead) -> Result<Vec<Vec<u8>>, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Extract all the certificates from `rd`, and return a vec of byte vecs\n containing the der-format contents.","sig":null,"attributes":[{"value":"/ Extract all the certificates from `rd`, and return a vec of byte vecs","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1913,"byte_end":1986,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ containing the der-format contents.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":1987,"byte_end":2026,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2027,"byte_end":2030,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This function does not fail if there are no certificates in the file --","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2031,"byte_end":2106,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ it returns an empty vector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2107,"byte_end":2138,"line_start":57,"line_end":57,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2670,"byte_end":2686,"line_start":75,"line_end":75,"column_start":8,"column_end":24},"name":"rsa_private_keys","qualname":"::rsa_private_keys","value":"pub fn rsa_private_keys(&mut dyn io::BufRead)\n-> Result<Vec<Vec<u8>>, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Extract all RSA private keys from `rd`, and return a vec of byte vecs\n containing the der-format contents.","sig":null,"attributes":[{"value":"/ Extract all RSA private keys from `rd`, and return a vec of byte vecs","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2445,"byte_end":2518,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/ containing the der-format contents.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2519,"byte_end":2558,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2559,"byte_end":2562,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function does not fail if there are no keys in the file -- it returns an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2563,"byte_end":2644,"line_start":73,"line_end":73,"column_start":1,"column_end":82}},{"value":"/ empty vector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2645,"byte_end":2662,"line_start":74,"line_end":74,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":3201,"byte_end":3219,"line_start":92,"line_end":92,"column_start":8,"column_end":26},"name":"pkcs8_private_keys","qualname":"::pkcs8_private_keys","value":"pub fn pkcs8_private_keys(&mut dyn io::BufRead)\n-> Result<Vec<Vec<u8>>, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Extract all PKCS8-encoded private keys from `rd`, and return a vec of\n byte vecs containing the der-format contents.","sig":null,"attributes":[{"value":"/ Extract all PKCS8-encoded private keys from `rd`, and return a vec of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":2966,"byte_end":3039,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/ byte vecs containing the der-format contents.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":3040,"byte_end":3089,"line_start":88,"line_end":88,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":3090,"byte_end":3093,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This function does not fail if there are no keys in the file -- it returns an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":3094,"byte_end":3175,"line_start":90,"line_end":90,"column_start":1,"column_end":82}},{"value":"/ empty vector.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/lib.rs","byte_start":3176,"byte_end":3193,"line_start":91,"line_end":91,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4040,"byte_end":4044,"line_start":21,"line_end":21,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-pemfile-1.0.0/src/pemfile.rs","byte_start":4040,"byte_end":4044,"line_start":21,"line_end":21,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}}]}