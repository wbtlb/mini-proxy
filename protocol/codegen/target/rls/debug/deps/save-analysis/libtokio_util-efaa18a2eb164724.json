{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1","program":"/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"compat\"","--cfg","feature=\"default\"","--cfg","feature=\"full\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-util\"","--cfg","feature=\"io\"","--cfg","feature=\"io-util\"","--cfg","feature=\"net\"","--cfg","feature=\"rt\"","--cfg","feature=\"slab\"","--cfg","feature=\"time\"","--cfg","feature=\"tracing\"","-C","metadata=efaa18a2eb164724","-C","extra-filename=-efaa18a2eb164724","--out-dir","/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps","-L","dependency=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps","--extern","bytes=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libbytes-1e96a842152e13e6.rmeta","--extern","futures_core=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libfutures_core-54a7710be3ee624e.rmeta","--extern","futures_io=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libfutures_io-a6802873bc09c340.rmeta","--extern","futures_sink=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libfutures_sink-a05f86137e118924.rmeta","--extern","futures_util=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libfutures_util-d105eb27fc758408.rmeta","--extern","pin_project_lite=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libpin_project_lite-69dd9282975eb716.rmeta","--extern","slab=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libslab-8e9ee0fa656b42f3.rmeta","--extern","tokio=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libtokio-8e88aae3773d2d0f.rmeta","--extern","tracing=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libtracing-00c90b9e8791fe32.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu"],"output":"/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libtokio_util-efaa18a2eb164724.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[2392953921241015628,0]},"crate_root":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src","external_crates":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":20,"id":{"name":"futures_sink","disambiguator":[17153257035848269860,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":21,"id":{"name":"tokio","disambiguator":[9722009466251923258,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":22,"id":{"name":"parking_lot","disambiguator":[3871717905106152681,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":23,"id":{"name":"lock_api","disambiguator":[8272086953703914760,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":24,"id":{"name":"scopeguard","disambiguator":[3320008020467133727,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":25,"id":{"name":"parking_lot_core","disambiguator":[13805589246425405989,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":26,"id":{"name":"smallvec","disambiguator":[10927382968747842108,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":27,"id":{"name":"cfg_if","disambiguator":[3771446270907224645,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":28,"id":{"name":"libc","disambiguator":[17359017214528108778,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":29,"id":{"name":"pin_project_lite","disambiguator":[10211589522042018038,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":30,"id":{"name":"mio","disambiguator":[14495857756822846931,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":31,"id":{"name":"log","disambiguator":[10080279241173332185,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","num":32,"id":{"name":"bytes","disambiguator":[9640328741282030696,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":33,"id":{"name":"once_cell","disambiguator":[16819972573261855082,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[3298661695847208938,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":35,"id":{"name":"memchr","disambiguator":[1148382120240393898,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":36,"id":{"name":"socket2","disambiguator":[9310992683795706109,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":37,"id":{"name":"num_cpus","disambiguator":[1206707565929244574,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","num":38,"id":{"name":"signal_hook_registry","disambiguator":[14662531352290496948,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","num":39,"id":{"name":"futures_core","disambiguator":[15004231880882242150,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":40,"id":{"name":"tracing","disambiguator":[9984350553261166457,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":41,"id":{"name":"tracing_core","disambiguator":[8917541232757275604,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":42,"id":{"name":"lazy_static","disambiguator":[5557959000602466733,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":43,"id":{"name":"spin","disambiguator":[16689960791893565133,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","num":44,"id":{"name":"tracing_attributes","disambiguator":[4773445387274463337,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","num":45,"id":{"name":"futures_util","disambiguator":[1601060782810752167,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","num":46,"id":{"name":"pin_utils","disambiguator":[7863811176557654460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","num":47,"id":{"name":"futures_macro","disambiguator":[16903753179030099564,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","num":48,"id":{"name":"futures_task","disambiguator":[10036825848192825906,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","num":49,"id":{"name":"futures_channel","disambiguator":[5644923050684151031,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","num":50,"id":{"name":"slab","disambiguator":[12745332312106863172,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","num":51,"id":{"name":"futures_io","disambiguator":[6467093657393605115,0]}}],"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1232},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707009,"byte_end":15707019,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707058,"byte_end":15707065,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707104,"byte_end":15707111,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":2737},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707273,"byte_end":15707279,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707281,"byte_end":15707292,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":2696},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707340,"byte_end":15707350,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":2655},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707399,"byte_end":15707410,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707472,"byte_end":15707492,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":1040},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707494,"byte_end":15707519,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":1310},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707568,"byte_end":15707578,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":1332},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707580,"byte_end":15707595,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":1340},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707660,"byte_end":15707677,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":1364},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707679,"byte_end":15707701,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":525}},{"kind":"Use","ref_id":{"krate":0,"index":1530},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/mod.rs","byte_start":15806298,"byte_end":15806307,"line_start":4,"line_end":4,"column_start":16,"column_end":25},"alias_span":null,"name":"UdpFramed","value":"","parent":{"krate":0,"index":1372}},{"kind":"Use","ref_id":{"krate":0,"index":1831},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825991,"byte_end":15826003,"line_start":18,"line_end":18,"column_start":32,"column_end":44},"alias_span":null,"name":"SyncIoBridge","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":1657},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15826032,"byte_end":15826040,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":2566},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15826071,"byte_end":15826083,"line_start":22,"line_end":22,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":2517},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15826114,"byte_end":15826126,"line_start":23,"line_end":23,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15826150,"byte_end":15826163,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15826165,"byte_end":15826179,"line_start":24,"line_end":24,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":1633}},{"kind":"Use","ref_id":{"krate":0,"index":1979},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/mod.rs","byte_start":15847965,"byte_end":15847980,"line_start":4,"line_end":4,"column_start":23,"column_end":38},"alias_span":null,"name":"LocalPoolHandle","value":"","parent":{"krate":0,"index":1878}},{"kind":"Use","ref_id":{"krate":0,"index":2454},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859549,"byte_end":15859559,"line_start":18,"line_end":18,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":1983}},{"kind":"Use","ref_id":{"krate":0,"index":2273},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":6945,"byte_end":6954,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":6956,"byte_end":6973,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":6975,"byte_end":7000,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":2348},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":7064,"byte_end":7077,"line_start":9,"line_end":9,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":2370},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":7079,"byte_end":7089,"line_start":9,"line_end":9,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":7137,"byte_end":7150,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":7193,"byte_end":7210,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":525},{"krate":0,"index":1372},{"krate":0,"index":1468},{"krate":0,"index":1553},{"krate":0,"index":1633},{"krate":0,"index":1838},{"krate":0,"index":1878},{"krate":0,"index":1983},{"krate":0,"index":14},{"krate":0,"index":406},{"krate":0,"index":475}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":525},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1229}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/cfg.rs","byte_start":5429,"byte_end":5454,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15696737,"byte_end":15696790,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15696791,"byte_end":15696794,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15696795,"byte_end":15696870,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15696871,"byte_end":15696936,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15696937,"byte_end":15696940,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15696941,"byte_end":15697021,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697022,"byte_end":15697097,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697098,"byte_end":15697146,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697147,"byte_end":15697150,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697151,"byte_end":15697174,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697175,"byte_end":15697178,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697179,"byte_end":15697258,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697259,"byte_end":15697338,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697339,"byte_end":15697410,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697411,"byte_end":15697481,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697482,"byte_end":15697560,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697561,"byte_end":15697637,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697638,"byte_end":15697671,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697672,"byte_end":15697675,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697676,"byte_end":15697756,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697757,"byte_end":15697837,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697838,"byte_end":15697888,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697889,"byte_end":15697892,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697893,"byte_end":15697944,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697945,"byte_end":15697994,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15697995,"byte_end":15698046,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698047,"byte_end":15698050,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698051,"byte_end":15698116,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698117,"byte_end":15698120,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698121,"byte_end":15698198,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698199,"byte_end":15698240,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698241,"byte_end":15698244,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698245,"byte_end":15698325,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698326,"byte_end":15698405,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698406,"byte_end":15698484,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698485,"byte_end":15698564,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698565,"byte_end":15698579,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698580,"byte_end":15698583,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698584,"byte_end":15698663,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698664,"byte_end":15698743,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698744,"byte_end":15698761,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698762,"byte_end":15698765,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698766,"byte_end":15698843,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698844,"byte_end":15698923,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15698924,"byte_end":15699001,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699002,"byte_end":15699072,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699073,"byte_end":15699122,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699123,"byte_end":15699126,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699127,"byte_end":15699140,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699141,"byte_end":15699173,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699174,"byte_end":15699241,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699242,"byte_end":15699356,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699357,"byte_end":15699394,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699395,"byte_end":15699456,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699457,"byte_end":15699506,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699507,"byte_end":15699510,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699511,"byte_end":15699552,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699553,"byte_end":15699563,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699564,"byte_end":15699648,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699649,"byte_end":15699705,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699706,"byte_end":15699709,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699710,"byte_end":15699731,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699732,"byte_end":15699799,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699800,"byte_end":15699828,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699829,"byte_end":15699842,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699843,"byte_end":15699861,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699862,"byte_end":15699871,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699872,"byte_end":15699875,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699876,"byte_end":15699935,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699936,"byte_end":15699960,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699961,"byte_end":15699970,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699971,"byte_end":15699976,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699977,"byte_end":15699985,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699986,"byte_end":15699993,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15699994,"byte_end":15700068,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700069,"byte_end":15700072,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700073,"byte_end":15700095,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700096,"byte_end":15700099,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700100,"byte_end":15700177,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700178,"byte_end":15700254,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700255,"byte_end":15700334,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700335,"byte_end":15700389,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700390,"byte_end":15700393,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700394,"byte_end":15700438,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700439,"byte_end":15700446,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700447,"byte_end":15700482,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700483,"byte_end":15700514,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700515,"byte_end":15700518,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700519,"byte_end":15700548,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700549,"byte_end":15700552,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700553,"byte_end":15700592,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700593,"byte_end":15700596,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700597,"byte_end":15700635,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700636,"byte_end":15700663,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700664,"byte_end":15700700,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700701,"byte_end":15700704,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700705,"byte_end":15700723,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700724,"byte_end":15700746,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700747,"byte_end":15700777,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700778,"byte_end":15700832,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700833,"byte_end":15700863,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700864,"byte_end":15700921,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700922,"byte_end":15700954,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700955,"byte_end":15700968,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700969,"byte_end":15700972,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15700973,"byte_end":15701007,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701008,"byte_end":15701052,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701053,"byte_end":15701105,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701106,"byte_end":15701173,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701174,"byte_end":15701177,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701178,"byte_end":15701252,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701253,"byte_end":15701319,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701320,"byte_end":15701349,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701350,"byte_end":15701397,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701398,"byte_end":15701450,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701451,"byte_end":15701522,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701523,"byte_end":15701542,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701543,"byte_end":15701556,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701557,"byte_end":15701560,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701561,"byte_end":15701600,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701601,"byte_end":15701656,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701657,"byte_end":15701675,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701676,"byte_end":15701752,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701753,"byte_end":15701819,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701820,"byte_end":15701872,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701873,"byte_end":15701876,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701877,"byte_end":15701957,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701958,"byte_end":15701983,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15701984,"byte_end":15702016,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702017,"byte_end":15702030,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702031,"byte_end":15702034,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702035,"byte_end":15702107,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702108,"byte_end":15702134,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702135,"byte_end":15702186,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702187,"byte_end":15702223,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702224,"byte_end":15702227,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702228,"byte_end":15702306,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702307,"byte_end":15702350,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702351,"byte_end":15702398,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702399,"byte_end":15702435,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702436,"byte_end":15702480,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702481,"byte_end":15702537,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702538,"byte_end":15702586,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702587,"byte_end":15702609,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702610,"byte_end":15702628,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702629,"byte_end":15702642,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702643,"byte_end":15702652,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702653,"byte_end":15702658,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702659,"byte_end":15702666,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702667,"byte_end":15702670,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702671,"byte_end":15702694,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702695,"byte_end":15702698,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702699,"byte_end":15702777,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702778,"byte_end":15702851,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702852,"byte_end":15702928,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15702929,"byte_end":15703009,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703010,"byte_end":15703026,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703027,"byte_end":15703030,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703031,"byte_end":15703111,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703112,"byte_end":15703191,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703192,"byte_end":15703272,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703273,"byte_end":15703345,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703346,"byte_end":15703349,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703350,"byte_end":15703427,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703428,"byte_end":15703506,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703507,"byte_end":15703580,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703581,"byte_end":15703647,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703648,"byte_end":15703651,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703652,"byte_end":15703665,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703666,"byte_end":15703699,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703700,"byte_end":15703734,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703735,"byte_end":15703772,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703773,"byte_end":15703840,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703841,"byte_end":15703876,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703877,"byte_end":15703938,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703939,"byte_end":15703985,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15703986,"byte_end":15704047,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704048,"byte_end":15704051,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704052,"byte_end":15704080,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704081,"byte_end":15704084,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704085,"byte_end":15704126,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704127,"byte_end":15704137,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704138,"byte_end":15704162,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704163,"byte_end":15704237,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704238,"byte_end":15704280,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704281,"byte_end":15704295,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704296,"byte_end":15704353,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704354,"byte_end":15704403,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704404,"byte_end":15704418,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704419,"byte_end":15704456,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704457,"byte_end":15704508,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704509,"byte_end":15704555,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704556,"byte_end":15704586,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704587,"byte_end":15704601,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704602,"byte_end":15704611,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704612,"byte_end":15704617,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704618,"byte_end":15704625,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704626,"byte_end":15704633,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704634,"byte_end":15704709,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704710,"byte_end":15704783,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704784,"byte_end":15704826,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704827,"byte_end":15704830,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704831,"byte_end":15704853,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704854,"byte_end":15704857,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704858,"byte_end":15704935,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15704936,"byte_end":15705012,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705013,"byte_end":15705089,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705090,"byte_end":15705113,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705114,"byte_end":15705117,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705118,"byte_end":15705163,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705164,"byte_end":15705171,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705172,"byte_end":15705207,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705208,"byte_end":15705232,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705233,"byte_end":15705236,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705237,"byte_end":15705266,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705267,"byte_end":15705270,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705271,"byte_end":15705310,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705311,"byte_end":15705314,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705315,"byte_end":15705361,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705362,"byte_end":15705398,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705399,"byte_end":15705402,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705403,"byte_end":15705494,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705495,"byte_end":15705569,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705570,"byte_end":15705592,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705593,"byte_end":15705626,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705627,"byte_end":15705674,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705675,"byte_end":15705727,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705728,"byte_end":15705803,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705804,"byte_end":15705823,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705824,"byte_end":15705837,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705838,"byte_end":15705841,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705842,"byte_end":15705894,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705895,"byte_end":15705972,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15705973,"byte_end":15706037,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706038,"byte_end":15706041,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706042,"byte_end":15706085,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706086,"byte_end":15706126,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706127,"byte_end":15706130,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706131,"byte_end":15706188,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706189,"byte_end":15706235,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706236,"byte_end":15706287,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706288,"byte_end":15706306,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706307,"byte_end":15706316,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706317,"byte_end":15706322,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706323,"byte_end":15706330,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706331,"byte_end":15706334,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706335,"byte_end":15706374,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706375,"byte_end":15706416,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706417,"byte_end":15706453,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706454,"byte_end":15706486,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706487,"byte_end":15706583,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706584,"byte_end":15706635,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706636,"byte_end":15706689,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706690,"byte_end":15706733,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706734,"byte_end":15706778,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706779,"byte_end":15706827,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706828,"byte_end":15706876,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706877,"byte_end":15706923,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15706924,"byte_end":15706963,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1232},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708987,"byte_end":15708997,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15707830,"byte_end":15707915,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15707916,"byte_end":15707919,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15707920,"byte_end":15707958,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15707959,"byte_end":15707997,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15707998,"byte_end":15708001,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708002,"byte_end":15708015,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708016,"byte_end":15708019,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708020,"byte_end":15708101,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708102,"byte_end":15708105,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708106,"byte_end":15708145,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708146,"byte_end":15708179,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708180,"byte_end":15708209,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708210,"byte_end":15708213,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708214,"byte_end":15708221,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708222,"byte_end":15708240,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708241,"byte_end":15708271,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708272,"byte_end":15708296,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708297,"byte_end":15708304,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708305,"byte_end":15708334,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708335,"byte_end":15708387,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708388,"byte_end":15708391,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708392,"byte_end":15708410,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708411,"byte_end":15708428,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708429,"byte_end":15708509,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708510,"byte_end":15708544,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708545,"byte_end":15708598,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708599,"byte_end":15708610,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708611,"byte_end":15708618,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708619,"byte_end":15708624,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708625,"byte_end":15708672,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708673,"byte_end":15708726,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708727,"byte_end":15708785,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708786,"byte_end":15708865,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708866,"byte_end":15708878,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708879,"byte_end":15708886,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708887,"byte_end":15708894,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15708895,"byte_end":15708898,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709099,"byte_end":15709102,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709026,"byte_end":15709087,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711340,"byte_end":15711347,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710054,"byte_end":15710089,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710090,"byte_end":15710093,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710094,"byte_end":15710163,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710164,"byte_end":15710243,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710244,"byte_end":15710316,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710317,"byte_end":15710341,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710342,"byte_end":15710345,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710346,"byte_end":15710414,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710415,"byte_end":15710492,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710493,"byte_end":15710554,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710555,"byte_end":15710558,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710559,"byte_end":15710620,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710621,"byte_end":15710683,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710684,"byte_end":15710687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710688,"byte_end":15710751,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710752,"byte_end":15710815,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710816,"byte_end":15710895,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710896,"byte_end":15710970,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710971,"byte_end":15710990,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710991,"byte_end":15710994,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15710995,"byte_end":15711063,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711064,"byte_end":15711126,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711127,"byte_end":15711202,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711203,"byte_end":15711243,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711244,"byte_end":15711247,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711248,"byte_end":15711284,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711285,"byte_end":15711329,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":579},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711395,"byte_end":15711399,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711354,"byte_end":15711385,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712165,"byte_end":15712170,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711406,"byte_end":15711458,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711463,"byte_end":15711466,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711471,"byte_end":15711540,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711545,"byte_end":15711615,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711620,"byte_end":15711666,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711671,"byte_end":15711674,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711679,"byte_end":15711755,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711760,"byte_end":15711835,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711840,"byte_end":15711915,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711920,"byte_end":15711960,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711965,"byte_end":15711968,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15711973,"byte_end":15712047,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712052,"byte_end":15712098,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712103,"byte_end":15712106,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712111,"byte_end":15712155,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715106,"byte_end":15715112,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712194,"byte_end":15712259,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712264,"byte_end":15712267,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712272,"byte_end":15712346,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712351,"byte_end":15712423,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712428,"byte_end":15712501,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712506,"byte_end":15712549,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712554,"byte_end":15712557,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712562,"byte_end":15712635,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712640,"byte_end":15712703,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712708,"byte_end":15712783,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712788,"byte_end":15712863,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712868,"byte_end":15712891,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712896,"byte_end":15712899,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712904,"byte_end":15712976,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15712981,"byte_end":15713055,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713060,"byte_end":15713130,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713135,"byte_end":15713138,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713143,"byte_end":15713211,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713216,"byte_end":15713287,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713292,"byte_end":15713372,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713377,"byte_end":15713389,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713394,"byte_end":15713397,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713402,"byte_end":15713472,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713477,"byte_end":15713552,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713557,"byte_end":15713594,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713599,"byte_end":15713602,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713607,"byte_end":15713643,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713648,"byte_end":15713692,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713697,"byte_end":15713700,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713705,"byte_end":15713728,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713733,"byte_end":15713736,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713741,"byte_end":15713815,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713820,"byte_end":15713894,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713899,"byte_end":15713952,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713957,"byte_end":15713960,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15713965,"byte_end":15714036,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714041,"byte_end":15714111,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714116,"byte_end":15714132,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714137,"byte_end":15714140,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714145,"byte_end":15714158,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714163,"byte_end":15714181,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714186,"byte_end":15714191,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714196,"byte_end":15714222,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714227,"byte_end":15714264,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714269,"byte_end":15714274,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714279,"byte_end":15714300,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714305,"byte_end":15714310,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714315,"byte_end":15714345,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714350,"byte_end":15714364,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714369,"byte_end":15714400,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714405,"byte_end":15714438,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714443,"byte_end":15714446,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714451,"byte_end":15714544,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714549,"byte_end":15714567,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714572,"byte_end":15714575,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714580,"byte_end":15714652,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714657,"byte_end":15714717,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714722,"byte_end":15714774,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714779,"byte_end":15714841,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714846,"byte_end":15714913,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714918,"byte_end":15714921,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714926,"byte_end":15714954,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714959,"byte_end":15714968,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714973,"byte_end":15714978,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714983,"byte_end":15714990,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15714995,"byte_end":15714998,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715003,"byte_end":15715072,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715077,"byte_end":15715098,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716278,"byte_end":15716288,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715193,"byte_end":15715265,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715270,"byte_end":15715319,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715324,"byte_end":15715327,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715332,"byte_end":15715400,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715405,"byte_end":15715472,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715477,"byte_end":15715545,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715550,"byte_end":15715626,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715631,"byte_end":15715697,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715702,"byte_end":15715705,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715710,"byte_end":15715778,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715783,"byte_end":15715858,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715863,"byte_end":15715938,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15715943,"byte_end":15716015,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716020,"byte_end":15716062,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716067,"byte_end":15716070,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716075,"byte_end":15716150,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716155,"byte_end":15716233,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716238,"byte_end":15716270,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717896,"byte_end":15717902,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716706,"byte_end":15716786,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716791,"byte_end":15716867,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716872,"byte_end":15716875,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716880,"byte_end":15716955,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15716960,"byte_end":15717030,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717035,"byte_end":15717106,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717111,"byte_end":15717183,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717188,"byte_end":15717246,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717251,"byte_end":15717254,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717259,"byte_end":15717328,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717333,"byte_end":15717408,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717413,"byte_end":15717489,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717494,"byte_end":15717516,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717521,"byte_end":15717524,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717529,"byte_end":15717602,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717607,"byte_end":15717680,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717685,"byte_end":15717761,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717766,"byte_end":15717769,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717774,"byte_end":15717810,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717815,"byte_end":15717847,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/decoder.rs","byte_start":15717852,"byte_end":15717888,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":595},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718236,"byte_end":15718243,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718081,"byte_end":15718153,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718154,"byte_end":15718174,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718175,"byte_end":15718178,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718179,"byte_end":15718225,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":597},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718508,"byte_end":15718513,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718256,"byte_end":15718288,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718293,"byte_end":15718296,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718301,"byte_end":15718378,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718383,"byte_end":15718439,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718444,"byte_end":15718447,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718452,"byte_end":15718498,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718864,"byte_end":15718870,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718537,"byte_end":15718582,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718587,"byte_end":15718590,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718595,"byte_end":15718669,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718674,"byte_end":15718754,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718759,"byte_end":15718797,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718802,"byte_end":15718805,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/encoder.rs","byte_start":15718810,"byte_end":15718856,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2737},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15732510,"byte_end":15732516,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":2740}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734289,"byte_end":15734292,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15732658,"byte_end":15732738,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15732743,"byte_end":15732824,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15732829,"byte_end":15732832,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15732837,"byte_end":15732912,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15732917,"byte_end":15732987,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15732992,"byte_end":15733061,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733066,"byte_end":15733138,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733143,"byte_end":15733201,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733206,"byte_end":15733209,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733214,"byte_end":15733285,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733290,"byte_end":15733367,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733372,"byte_end":15733448,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733453,"byte_end":15733475,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733480,"byte_end":15733483,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733488,"byte_end":15733561,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733566,"byte_end":15733639,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733644,"byte_end":15733720,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733725,"byte_end":15733728,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733733,"byte_end":15733809,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733814,"byte_end":15733890,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733895,"byte_end":15733970,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15733975,"byte_end":15734010,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734015,"byte_end":15734018,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734023,"byte_end":15734059,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734064,"byte_end":15734096,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734101,"byte_end":15734138,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734143,"byte_end":15734181,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734186,"byte_end":15734277,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735900,"byte_end":15735913,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734505,"byte_end":15734585,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734590,"byte_end":15734671,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734676,"byte_end":15734725,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734730,"byte_end":15734733,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734738,"byte_end":15734813,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734818,"byte_end":15734888,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734893,"byte_end":15734962,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15734967,"byte_end":15735039,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735044,"byte_end":15735102,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735107,"byte_end":15735110,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735115,"byte_end":15735186,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735191,"byte_end":15735268,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735273,"byte_end":15735349,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735354,"byte_end":15735376,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735381,"byte_end":15735384,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735389,"byte_end":15735462,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735467,"byte_end":15735540,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735545,"byte_end":15735621,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735626,"byte_end":15735629,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735634,"byte_end":15735670,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735675,"byte_end":15735707,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735712,"byte_end":15735749,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735754,"byte_end":15735792,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15735797,"byte_end":15735888,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738060,"byte_end":15738070,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736483,"byte_end":15736563,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736568,"byte_end":15736649,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736654,"byte_end":15736657,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736662,"byte_end":15736737,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736742,"byte_end":15736812,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736817,"byte_end":15736888,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736893,"byte_end":15736965,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736970,"byte_end":15737028,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737033,"byte_end":15737036,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737041,"byte_end":15737112,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737117,"byte_end":15737194,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737199,"byte_end":15737275,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737280,"byte_end":15737302,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737307,"byte_end":15737310,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737315,"byte_end":15737394,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737399,"byte_end":15737476,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737481,"byte_end":15737484,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737489,"byte_end":15737562,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737567,"byte_end":15737640,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737645,"byte_end":15737721,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737726,"byte_end":15737729,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737734,"byte_end":15737770,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737775,"byte_end":15737807,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737812,"byte_end":15737850,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737855,"byte_end":15737893,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737898,"byte_end":15737952,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15737957,"byte_end":15738048,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738705,"byte_end":15738712,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738422,"byte_end":15738485,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738490,"byte_end":15738503,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738508,"byte_end":15738511,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738516,"byte_end":15738591,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738596,"byte_end":15738666,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738671,"byte_end":15738693,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739056,"byte_end":15739063,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738765,"byte_end":15738836,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738841,"byte_end":15738854,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738859,"byte_end":15738862,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738867,"byte_end":15738942,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15738947,"byte_end":15739017,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739022,"byte_end":15739044,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739426,"byte_end":15739437,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739128,"byte_end":15739206,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739211,"byte_end":15739224,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739229,"byte_end":15739232,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739237,"byte_end":15739312,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739317,"byte_end":15739387,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739392,"byte_end":15739414,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739784,"byte_end":15739789,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739533,"byte_end":15739591,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739596,"byte_end":15739609,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739614,"byte_end":15739617,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739622,"byte_end":15739696,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739701,"byte_end":15739772,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740101,"byte_end":15740110,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739842,"byte_end":15739908,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739913,"byte_end":15739926,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739931,"byte_end":15739934,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15739939,"byte_end":15740013,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740018,"byte_end":15740089,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740447,"byte_end":15740456,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"pub fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740175,"byte_end":15740243,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740248,"byte_end":15740272,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740277,"byte_end":15740280,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740285,"byte_end":15740359,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740364,"byte_end":15740435,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741147,"byte_end":15741160,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"pub fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740888,"byte_end":15740954,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740959,"byte_end":15740972,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740977,"byte_end":15740980,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15740985,"byte_end":15741059,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741064,"byte_end":15741135,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741306,"byte_end":15741317,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741251,"byte_end":15741294,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741452,"byte_end":15741467,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741389,"byte_end":15741440,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741607,"byte_end":15741619,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741551,"byte_end":15741595,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741756,"byte_end":15741772,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741692,"byte_end":15741744,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742122,"byte_end":15742132,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741857,"byte_end":15741920,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741925,"byte_end":15741928,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15741933,"byte_end":15742008,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742013,"byte_end":15742083,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742088,"byte_end":15742110,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742504,"byte_end":15742514,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742182,"byte_end":15742256,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742261,"byte_end":15742302,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742307,"byte_end":15742310,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742315,"byte_end":15742390,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742395,"byte_end":15742465,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742470,"byte_end":15742492,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1268},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744488,"byte_end":15744499,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744173,"byte_end":15744244,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744245,"byte_end":15744317,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744318,"byte_end":15744378,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744379,"byte_end":15744382,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744383,"byte_end":15744419,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744437,"byte_end":15744476,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1271},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744585,"byte_end":15744587,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744512,"byte_end":15744576,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1272},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744619,"byte_end":15744624,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744597,"byte_end":15744610,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1273},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744689,"byte_end":15744697,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744634,"byte_end":15744680,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1274},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744784,"byte_end":15744793,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744714,"byte_end":15744775,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15745026,"byte_end":15745029,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744974,"byte_end":15745014,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2696},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15745758,"byte_end":15745768,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":2699}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746019,"byte_end":15746022,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15745951,"byte_end":15746007,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746370,"byte_end":15746383,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746254,"byte_end":15746336,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746341,"byte_end":15746358,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747137,"byte_end":15747144,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746850,"byte_end":15746913,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746918,"byte_end":15746935,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746940,"byte_end":15746943,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746948,"byte_end":15747023,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747028,"byte_end":15747098,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747103,"byte_end":15747125,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747492,"byte_end":15747499,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747197,"byte_end":15747268,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747273,"byte_end":15747290,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747295,"byte_end":15747298,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747303,"byte_end":15747378,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747383,"byte_end":15747453,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747458,"byte_end":15747480,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747866,"byte_end":15747877,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747564,"byte_end":15747642,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747647,"byte_end":15747664,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747669,"byte_end":15747672,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747677,"byte_end":15747752,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747757,"byte_end":15747827,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747832,"byte_end":15747854,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748242,"byte_end":15748252,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15747973,"byte_end":15748040,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748045,"byte_end":15748048,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748053,"byte_end":15748128,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748133,"byte_end":15748203,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748208,"byte_end":15748230,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748364,"byte_end":15748371,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748302,"byte_end":15748352,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748494,"byte_end":15748505,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748424,"byte_end":15748482,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748670,"byte_end":15748681,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"pub fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748570,"byte_end":15748629,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15748634,"byte_end":15748658,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749197,"byte_end":15749212,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"pub fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749127,"byte_end":15749185,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749358,"byte_end":15749369,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749303,"byte_end":15749346,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749499,"byte_end":15749514,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749436,"byte_end":15749487,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2655},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15751615,"byte_end":15751626,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":2658}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15751833,"byte_end":15751836,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15751764,"byte_end":15751821,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752394,"byte_end":15752401,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752106,"byte_end":15752169,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752174,"byte_end":15752192,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752197,"byte_end":15752200,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752205,"byte_end":15752280,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752285,"byte_end":15752355,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752360,"byte_end":15752382,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752750,"byte_end":15752757,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752454,"byte_end":15752525,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752530,"byte_end":15752548,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752553,"byte_end":15752556,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752561,"byte_end":15752636,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752641,"byte_end":15752711,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752716,"byte_end":15752738,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753125,"byte_end":15753136,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752822,"byte_end":15752900,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752905,"byte_end":15752923,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752928,"byte_end":15752931,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752936,"byte_end":15753011,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753016,"byte_end":15753086,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753091,"byte_end":15753113,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753502,"byte_end":15753512,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753232,"byte_end":15753300,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753305,"byte_end":15753308,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753313,"byte_end":15753388,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753393,"byte_end":15753463,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753468,"byte_end":15753490,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753624,"byte_end":15753631,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753562,"byte_end":15753612,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753754,"byte_end":15753765,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753684,"byte_end":15753742,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753931,"byte_end":15753942,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"pub fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753830,"byte_end":15753890,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15753895,"byte_end":15753919,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15754460,"byte_end":15754475,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"pub fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15754390,"byte_end":15754448,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15754622,"byte_end":15754634,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15754566,"byte_end":15754610,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15754765,"byte_end":15754781,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15754701,"byte_end":15754753,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":983},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1280},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1040},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1305},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1042},{"krate":0,"index":1049},{"krate":0,"index":1053},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1066},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1093}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756308,"byte_end":15756360,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756361,"byte_end":15756364,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756365,"byte_end":15756435,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756436,"byte_end":15756494,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756495,"byte_end":15756567,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756568,"byte_end":15756638,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756639,"byte_end":15756706,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756707,"byte_end":15756710,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756711,"byte_end":15756732,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756733,"byte_end":15756736,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756737,"byte_end":15756812,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756813,"byte_end":15756884,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756885,"byte_end":15756956,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15756957,"byte_end":15757027,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757028,"byte_end":15757068,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757069,"byte_end":15757072,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757073,"byte_end":15757080,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757081,"byte_end":15757124,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757125,"byte_end":15757183,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757184,"byte_end":15757187,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757188,"byte_end":15757243,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757244,"byte_end":15757286,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757287,"byte_end":15757292,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757293,"byte_end":15757345,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757346,"byte_end":15757351,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757352,"byte_end":15757374,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757375,"byte_end":15757382,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757383,"byte_end":15757386,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757387,"byte_end":15757459,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757460,"byte_end":15757531,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757532,"byte_end":15757551,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757552,"byte_end":15757555,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757556,"byte_end":15757567,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757568,"byte_end":15757617,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757618,"byte_end":15757667,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757668,"byte_end":15757717,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757718,"byte_end":15757725,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757726,"byte_end":15757729,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757730,"byte_end":15757768,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757769,"byte_end":15757772,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757773,"byte_end":15757780,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757781,"byte_end":15757824,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757825,"byte_end":15757883,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757884,"byte_end":15757887,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757888,"byte_end":15757913,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757914,"byte_end":15757935,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757936,"byte_end":15757939,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15757940,"byte_end":15758016,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758017,"byte_end":15758026,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758027,"byte_end":15758069,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758070,"byte_end":15758075,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758076,"byte_end":15758149,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758150,"byte_end":15758197,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758198,"byte_end":15758201,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758202,"byte_end":15758239,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758240,"byte_end":15758254,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758255,"byte_end":15758260,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758261,"byte_end":15758268,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758269,"byte_end":15758272,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758273,"byte_end":15758315,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758316,"byte_end":15758319,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758320,"byte_end":15758331,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758332,"byte_end":15758371,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758372,"byte_end":15758411,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758412,"byte_end":15758451,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758452,"byte_end":15758459,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758460,"byte_end":15758463,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758464,"byte_end":15758478,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758479,"byte_end":15758482,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758483,"byte_end":15758558,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758559,"byte_end":15758632,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758633,"byte_end":15758699,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758700,"byte_end":15758769,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758770,"byte_end":15758835,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758836,"byte_end":15758839,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758840,"byte_end":15758856,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758857,"byte_end":15758860,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758861,"byte_end":15758937,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758938,"byte_end":15758979,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758980,"byte_end":15758983,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758984,"byte_end":15758991,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15758992,"byte_end":15759023,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759024,"byte_end":15759074,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759075,"byte_end":15759116,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759117,"byte_end":15759152,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759153,"byte_end":15759201,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759202,"byte_end":15759237,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759238,"byte_end":15759286,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759287,"byte_end":15759336,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759337,"byte_end":15759359,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759360,"byte_end":15759367,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759368,"byte_end":15759390,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759391,"byte_end":15759398,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759399,"byte_end":15759402,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759403,"byte_end":15759451,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759452,"byte_end":15759455,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759456,"byte_end":15759467,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759468,"byte_end":15759520,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759521,"byte_end":15759586,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759587,"byte_end":15759652,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759653,"byte_end":15759718,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759719,"byte_end":15759726,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759727,"byte_end":15759730,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759731,"byte_end":15759807,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759808,"byte_end":15759882,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759883,"byte_end":15759955,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15759956,"byte_end":15760032,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760033,"byte_end":15760075,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760076,"byte_end":15760079,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760080,"byte_end":15760096,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760097,"byte_end":15760100,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760101,"byte_end":15760176,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760177,"byte_end":15760218,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760219,"byte_end":15760222,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760223,"byte_end":15760230,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760231,"byte_end":15760262,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760263,"byte_end":15760313,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760314,"byte_end":15760355,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760356,"byte_end":15760391,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760392,"byte_end":15760440,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760441,"byte_end":15760476,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760477,"byte_end":15760525,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760526,"byte_end":15760585,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760586,"byte_end":15760608,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760609,"byte_end":15760616,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760617,"byte_end":15760639,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760640,"byte_end":15760647,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760648,"byte_end":15760651,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760652,"byte_end":15760700,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760701,"byte_end":15760704,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760705,"byte_end":15760716,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760717,"byte_end":15760766,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760767,"byte_end":15760821,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760822,"byte_end":15760876,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760877,"byte_end":15760931,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760932,"byte_end":15760939,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760940,"byte_end":15760943,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15760944,"byte_end":15761017,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761018,"byte_end":15761085,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761086,"byte_end":15761089,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761090,"byte_end":15761106,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761107,"byte_end":15761110,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761111,"byte_end":15761187,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761188,"byte_end":15761260,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761261,"byte_end":15761300,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761301,"byte_end":15761304,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761305,"byte_end":15761312,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761313,"byte_end":15761344,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761345,"byte_end":15761395,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761396,"byte_end":15761437,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761438,"byte_end":15761473,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761474,"byte_end":15761522,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761523,"byte_end":15761558,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761559,"byte_end":15761606,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761607,"byte_end":15761627,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761628,"byte_end":15761650,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761651,"byte_end":15761658,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761659,"byte_end":15761681,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761682,"byte_end":15761689,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761690,"byte_end":15761693,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761694,"byte_end":15761742,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761743,"byte_end":15761746,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761747,"byte_end":15761758,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761759,"byte_end":15761811,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761812,"byte_end":15761877,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761878,"byte_end":15761943,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15761944,"byte_end":15762009,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762010,"byte_end":15762017,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762018,"byte_end":15762021,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762022,"byte_end":15762094,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762095,"byte_end":15762170,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762171,"byte_end":15762243,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762244,"byte_end":15762320,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762321,"byte_end":15762394,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762395,"byte_end":15762398,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762399,"byte_end":15762415,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762416,"byte_end":15762419,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762420,"byte_end":15762494,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762495,"byte_end":15762562,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762563,"byte_end":15762566,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762567,"byte_end":15762574,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762575,"byte_end":15762606,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762607,"byte_end":15762657,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762658,"byte_end":15762699,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762700,"byte_end":15762735,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762736,"byte_end":15762784,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762785,"byte_end":15762816,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762817,"byte_end":15762865,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762866,"byte_end":15762886,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762887,"byte_end":15762909,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762910,"byte_end":15762917,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762918,"byte_end":15762940,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762941,"byte_end":15762948,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762949,"byte_end":15762952,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15762953,"byte_end":15763001,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763002,"byte_end":15763005,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763006,"byte_end":15763017,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763018,"byte_end":15763044,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763045,"byte_end":15763090,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763091,"byte_end":15763136,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763137,"byte_end":15763182,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763183,"byte_end":15763186,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763187,"byte_end":15763215,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763216,"byte_end":15763261,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763262,"byte_end":15763307,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763308,"byte_end":15763353,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763354,"byte_end":15763361,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763362,"byte_end":15763365,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763366,"byte_end":15763438,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763439,"byte_end":15763515,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763516,"byte_end":15763586,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763587,"byte_end":15763656,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763657,"byte_end":15763694,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763695,"byte_end":15763698,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763699,"byte_end":15763773,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763774,"byte_end":15763828,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763829,"byte_end":15763832,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763833,"byte_end":15763849,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763850,"byte_end":15763853,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763854,"byte_end":15763927,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15763928,"byte_end":15764004,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764005,"byte_end":15764079,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764080,"byte_end":15764093,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764094,"byte_end":15764097,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764098,"byte_end":15764105,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764106,"byte_end":15764137,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764138,"byte_end":15764188,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764189,"byte_end":15764230,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764231,"byte_end":15764266,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764267,"byte_end":15764316,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764317,"byte_end":15764352,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764353,"byte_end":15764401,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764402,"byte_end":15764446,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764447,"byte_end":15764469,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764470,"byte_end":15764477,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764478,"byte_end":15764500,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764501,"byte_end":15764508,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764509,"byte_end":15764512,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764513,"byte_end":15764561,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764562,"byte_end":15764565,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764566,"byte_end":15764577,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764578,"byte_end":15764604,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764605,"byte_end":15764655,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764656,"byte_end":15764706,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764707,"byte_end":15764757,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764758,"byte_end":15764761,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764762,"byte_end":15764782,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764783,"byte_end":15764813,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764814,"byte_end":15764844,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764845,"byte_end":15764875,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764876,"byte_end":15764883,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764884,"byte_end":15764887,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764888,"byte_end":15764961,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15764962,"byte_end":15765037,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765038,"byte_end":15765110,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765111,"byte_end":15765149,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765150,"byte_end":15765153,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765154,"byte_end":15765228,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765229,"byte_end":15765305,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765306,"byte_end":15765379,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765380,"byte_end":15765408,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765409,"byte_end":15765412,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765413,"byte_end":15765429,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765430,"byte_end":15765433,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765434,"byte_end":15765507,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765508,"byte_end":15765584,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765585,"byte_end":15765659,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765660,"byte_end":15765732,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765733,"byte_end":15765744,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765745,"byte_end":15765748,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765749,"byte_end":15765756,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765757,"byte_end":15765788,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765789,"byte_end":15765839,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765840,"byte_end":15765881,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765882,"byte_end":15765917,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765918,"byte_end":15765967,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15765968,"byte_end":15766003,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766004,"byte_end":15766069,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766070,"byte_end":15766090,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766091,"byte_end":15766113,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766114,"byte_end":15766121,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766122,"byte_end":15766129,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766130,"byte_end":15766133,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766134,"byte_end":15766182,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766183,"byte_end":15766186,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766187,"byte_end":15766198,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766199,"byte_end":15766225,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766226,"byte_end":15766276,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766277,"byte_end":15766327,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766328,"byte_end":15766378,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766379,"byte_end":15766382,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766383,"byte_end":15766403,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766404,"byte_end":15766434,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766435,"byte_end":15766465,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766466,"byte_end":15766496,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766497,"byte_end":15766504,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766505,"byte_end":15766508,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766509,"byte_end":15766582,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766583,"byte_end":15766657,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766658,"byte_end":15766732,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766733,"byte_end":15766806,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766807,"byte_end":15766883,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766884,"byte_end":15766917,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766918,"byte_end":15766921,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766922,"byte_end":15766938,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766939,"byte_end":15766942,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15766943,"byte_end":15767017,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767018,"byte_end":15767085,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767086,"byte_end":15767089,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767090,"byte_end":15767097,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767098,"byte_end":15767129,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767130,"byte_end":15767180,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767181,"byte_end":15767222,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767223,"byte_end":15767258,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767259,"byte_end":15767307,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767308,"byte_end":15767339,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767340,"byte_end":15767387,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767388,"byte_end":15767434,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767435,"byte_end":15767457,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767458,"byte_end":15767465,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767466,"byte_end":15767488,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767489,"byte_end":15767496,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767497,"byte_end":15767500,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767501,"byte_end":15767549,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767550,"byte_end":15767553,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767554,"byte_end":15767565,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767566,"byte_end":15767622,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767623,"byte_end":15767684,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767685,"byte_end":15767746,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767747,"byte_end":15767808,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767809,"byte_end":15767816,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767817,"byte_end":15767820,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767821,"byte_end":15767895,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767896,"byte_end":15767916,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767917,"byte_end":15767920,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767921,"byte_end":15767935,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767936,"byte_end":15767939,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15767940,"byte_end":15768015,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768016,"byte_end":15768088,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768089,"byte_end":15768157,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768158,"byte_end":15768234,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768235,"byte_end":15768276,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768277,"byte_end":15768280,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768281,"byte_end":15768351,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768352,"byte_end":15768370,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768371,"byte_end":15768374,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768375,"byte_end":15768382,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768383,"byte_end":15768415,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768416,"byte_end":15768466,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768467,"byte_end":15768511,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768512,"byte_end":15768525,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768526,"byte_end":15768561,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768562,"byte_end":15768597,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768598,"byte_end":15768621,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768622,"byte_end":15768629,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768630,"byte_end":15768652,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768653,"byte_end":15768660,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768661,"byte_end":15768664,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768665,"byte_end":15768715,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768716,"byte_end":15768719,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768720,"byte_end":15768731,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768732,"byte_end":15768765,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768766,"byte_end":15768799,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768800,"byte_end":15768833,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768834,"byte_end":15768841,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768842,"byte_end":15768845,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768846,"byte_end":15768915,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768916,"byte_end":15768953,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768954,"byte_end":15768993,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15768994,"byte_end":15769039,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15769040,"byte_end":15769087,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15769088,"byte_end":15769118,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15769119,"byte_end":15769152,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1280},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15769719,"byte_end":15769726,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15769401,"byte_end":15769456,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15769457,"byte_end":15769460,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15769461,"byte_end":15769536,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15769537,"byte_end":15769617,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15769618,"byte_end":15769677,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1040},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770397,"byte_end":15770422,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1041}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770312,"byte_end":15770385,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1292},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770774,"byte_end":15770794,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770443,"byte_end":15770517,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770518,"byte_end":15770521,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770522,"byte_end":15770601,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770602,"byte_end":15770645,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770646,"byte_end":15770649,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770650,"byte_end":15770703,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770704,"byte_end":15770707,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15770708,"byte_end":15770738,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771138,"byte_end":15771141,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771047,"byte_end":15771126,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771368,"byte_end":15771375,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771265,"byte_end":15771340,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771345,"byte_end":15771356,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771597,"byte_end":15771613,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771425,"byte_end":15771466,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771471,"byte_end":15771474,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771479,"byte_end":15771552,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771557,"byte_end":15771585,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15772034,"byte_end":15772054,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771678,"byte_end":15771712,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771717,"byte_end":15771720,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771725,"byte_end":15771795,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771800,"byte_end":15771875,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771880,"byte_end":15771952,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771957,"byte_end":15772022,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":1060},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15776843,"byte_end":15776858,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15776767,"byte_end":15776828,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777783,"byte_end":15777786,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777237,"byte_end":15777312,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777317,"byte_end":15777328,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777333,"byte_end":15777336,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777341,"byte_end":15777355,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777360,"byte_end":15777363,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777368,"byte_end":15777375,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777380,"byte_end":15777411,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777416,"byte_end":15777464,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777469,"byte_end":15777472,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777477,"byte_end":15777518,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777523,"byte_end":15777558,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777563,"byte_end":15777594,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777599,"byte_end":15777634,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777639,"byte_end":15777668,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777673,"byte_end":15777693,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777698,"byte_end":15777720,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777725,"byte_end":15777732,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777737,"byte_end":15777759,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777764,"byte_end":15777771,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778971,"byte_end":15778981,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778450,"byte_end":15778499,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778504,"byte_end":15778507,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778512,"byte_end":15778544,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778549,"byte_end":15778552,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778557,"byte_end":15778625,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778630,"byte_end":15778633,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778638,"byte_end":15778652,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778657,"byte_end":15778660,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778665,"byte_end":15778672,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778677,"byte_end":15778708,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778713,"byte_end":15778761,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778766,"byte_end":15778769,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778774,"byte_end":15778815,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778820,"byte_end":15778855,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778860,"byte_end":15778881,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778886,"byte_end":15778908,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778913,"byte_end":15778920,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778925,"byte_end":15778947,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15778952,"byte_end":15778959,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779613,"byte_end":15779626,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779080,"byte_end":15779132,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779137,"byte_end":15779140,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779145,"byte_end":15779183,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779188,"byte_end":15779191,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779196,"byte_end":15779264,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779269,"byte_end":15779272,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779277,"byte_end":15779291,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779296,"byte_end":15779299,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779304,"byte_end":15779311,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779316,"byte_end":15779347,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779352,"byte_end":15779400,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779405,"byte_end":15779408,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779413,"byte_end":15779454,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779459,"byte_end":15779494,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779499,"byte_end":15779523,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779528,"byte_end":15779550,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779555,"byte_end":15779562,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779567,"byte_end":15779589,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779594,"byte_end":15779601,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780259,"byte_end":15780272,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779726,"byte_end":15779778,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779783,"byte_end":15779786,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779791,"byte_end":15779829,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779834,"byte_end":15779837,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779842,"byte_end":15779910,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779915,"byte_end":15779918,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779923,"byte_end":15779937,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779942,"byte_end":15779945,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779950,"byte_end":15779957,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779962,"byte_end":15779993,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15779998,"byte_end":15780046,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780051,"byte_end":15780054,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780059,"byte_end":15780100,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780105,"byte_end":15780140,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780145,"byte_end":15780169,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780174,"byte_end":15780196,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780201,"byte_end":15780208,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780213,"byte_end":15780235,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780240,"byte_end":15780247,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781369,"byte_end":15781385,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780441,"byte_end":15780479,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780484,"byte_end":15780487,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780492,"byte_end":15780564,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780569,"byte_end":15780594,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780599,"byte_end":15780602,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780607,"byte_end":15780679,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780684,"byte_end":15780753,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780758,"byte_end":15780831,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780836,"byte_end":15780848,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780853,"byte_end":15780856,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780861,"byte_end":15780936,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15780941,"byte_end":15781002,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781007,"byte_end":15781010,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781015,"byte_end":15781029,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781034,"byte_end":15781037,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781042,"byte_end":15781049,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781054,"byte_end":15781085,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781090,"byte_end":15781138,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781143,"byte_end":15781146,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781151,"byte_end":15781192,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781197,"byte_end":15781232,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781237,"byte_end":15781279,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781284,"byte_end":15781306,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781311,"byte_end":15781318,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781323,"byte_end":15781345,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781350,"byte_end":15781357,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782484,"byte_end":15782501,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"pub fn length_field_type<T: builder::LengthFieldType>(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781482,"byte_end":15781552,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781557,"byte_end":15781560,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781565,"byte_end":15781638,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781643,"byte_end":15781663,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781668,"byte_end":15781671,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781676,"byte_end":15781690,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781695,"byte_end":15781698,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781703,"byte_end":15781710,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781715,"byte_end":15781746,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781751,"byte_end":15781799,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781804,"byte_end":15781807,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781812,"byte_end":15781853,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781858,"byte_end":15781893,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781898,"byte_end":15781933,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781938,"byte_end":15781960,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781965,"byte_end":15781972,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15781977,"byte_end":15781999,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782004,"byte_end":15782011,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782016,"byte_end":15782019,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782024,"byte_end":15782098,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782103,"byte_end":15782144,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782149,"byte_end":15782152,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782157,"byte_end":15782176,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782181,"byte_end":15782212,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782217,"byte_end":15782267,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782272,"byte_end":15782313,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782318,"byte_end":15782353,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782358,"byte_end":15782394,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782399,"byte_end":15782421,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782426,"byte_end":15782433,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782438,"byte_end":15782460,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782465,"byte_end":15782472,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783186,"byte_end":15783205,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782622,"byte_end":15782685,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782690,"byte_end":15782693,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782698,"byte_end":15782749,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782754,"byte_end":15782757,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782762,"byte_end":15782830,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782835,"byte_end":15782838,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782843,"byte_end":15782857,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782862,"byte_end":15782865,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782870,"byte_end":15782877,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782882,"byte_end":15782913,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782918,"byte_end":15782966,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782971,"byte_end":15782974,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15782979,"byte_end":15783020,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783025,"byte_end":15783060,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783065,"byte_end":15783096,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783101,"byte_end":15783123,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783128,"byte_end":15783135,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783140,"byte_end":15783162,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783167,"byte_end":15783174,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783864,"byte_end":15783883,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783374,"byte_end":15783440,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783445,"byte_end":15783448,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783453,"byte_end":15783508,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783513,"byte_end":15783516,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783521,"byte_end":15783535,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783540,"byte_end":15783543,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783548,"byte_end":15783555,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783560,"byte_end":15783591,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783596,"byte_end":15783644,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783649,"byte_end":15783652,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783657,"byte_end":15783698,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783703,"byte_end":15783738,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783743,"byte_end":15783774,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783779,"byte_end":15783801,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783806,"byte_end":15783813,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783818,"byte_end":15783840,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783845,"byte_end":15783852,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784437,"byte_end":15784454,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15783986,"byte_end":15784059,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784064,"byte_end":15784082,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784087,"byte_end":15784090,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784095,"byte_end":15784109,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784114,"byte_end":15784117,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784122,"byte_end":15784129,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784134,"byte_end":15784165,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784170,"byte_end":15784218,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784223,"byte_end":15784226,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784231,"byte_end":15784272,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784277,"byte_end":15784312,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784317,"byte_end":15784347,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784352,"byte_end":15784374,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784379,"byte_end":15784386,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784391,"byte_end":15784413,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784418,"byte_end":15784425,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785104,"byte_end":15785112,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784555,"byte_end":15784618,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784623,"byte_end":15784626,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784631,"byte_end":15784692,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784697,"byte_end":15784700,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784705,"byte_end":15784759,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784764,"byte_end":15784767,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784772,"byte_end":15784786,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784791,"byte_end":15784794,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784799,"byte_end":15784806,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784811,"byte_end":15784842,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784847,"byte_end":15784895,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784900,"byte_end":15784903,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784908,"byte_end":15784949,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784954,"byte_end":15784989,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15784994,"byte_end":15785014,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785019,"byte_end":15785041,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785046,"byte_end":15785053,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785058,"byte_end":15785080,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785085,"byte_end":15785092,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785636,"byte_end":15785645,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785210,"byte_end":15785273,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785278,"byte_end":15785281,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785286,"byte_end":15785300,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785305,"byte_end":15785308,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785313,"byte_end":15785320,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785325,"byte_end":15785373,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785378,"byte_end":15785399,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785404,"byte_end":15785439,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785444,"byte_end":15785475,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785480,"byte_end":15785515,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785520,"byte_end":15785549,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785554,"byte_end":15785574,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785579,"byte_end":15785600,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785605,"byte_end":15785612,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785617,"byte_end":15785624,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786305,"byte_end":15786313,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785797,"byte_end":15785850,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785855,"byte_end":15785858,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785863,"byte_end":15785877,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785882,"byte_end":15785885,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785890,"byte_end":15785897,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785902,"byte_end":15785933,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785938,"byte_end":15785986,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785991,"byte_end":15785994,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15785999,"byte_end":15786040,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786045,"byte_end":15786080,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786085,"byte_end":15786116,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786121,"byte_end":15786156,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786161,"byte_end":15786190,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786195,"byte_end":15786215,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786220,"byte_end":15786242,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786247,"byte_end":15786254,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786259,"byte_end":15786281,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786286,"byte_end":15786293,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786890,"byte_end":15786899,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786477,"byte_end":15786531,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786536,"byte_end":15786539,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786544,"byte_end":15786558,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786563,"byte_end":15786566,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786571,"byte_end":15786578,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786583,"byte_end":15786615,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786620,"byte_end":15786670,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786675,"byte_end":15786719,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786724,"byte_end":15786759,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786764,"byte_end":15786799,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786804,"byte_end":15786827,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786832,"byte_end":15786839,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786844,"byte_end":15786866,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15786871,"byte_end":15786878,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787512,"byte_end":15787522,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787060,"byte_end":15787109,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787114,"byte_end":15787117,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787122,"byte_end":15787136,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787141,"byte_end":15787144,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787149,"byte_end":15787156,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787161,"byte_end":15787206,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787211,"byte_end":15787261,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787266,"byte_end":15787322,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787327,"byte_end":15787340,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787345,"byte_end":15787380,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787385,"byte_end":15787420,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787425,"byte_end":15787449,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787454,"byte_end":15787461,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787466,"byte_end":15787488,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15787493,"byte_end":15787500,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1310},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15788901,"byte_end":15788911,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15788658,"byte_end":15788745,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15788746,"byte_end":15788749,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15788750,"byte_end":15788788,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15788789,"byte_end":15788827,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790011,"byte_end":15790014,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789592,"byte_end":15789652,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789657,"byte_end":15789660,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789665,"byte_end":15789675,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789680,"byte_end":15789683,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789688,"byte_end":15789760,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789765,"byte_end":15789838,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789843,"byte_end":15789910,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789915,"byte_end":15789918,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789923,"byte_end":15789999,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791145,"byte_end":15791164,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790172,"byte_end":15790232,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790237,"byte_end":15790240,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790245,"byte_end":15790308,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790313,"byte_end":15790391,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790396,"byte_end":15790463,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790468,"byte_end":15790540,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790545,"byte_end":15790615,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790620,"byte_end":15790643,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790648,"byte_end":15790651,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790656,"byte_end":15790666,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790671,"byte_end":15790674,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790679,"byte_end":15790754,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790759,"byte_end":15790832,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790837,"byte_end":15790913,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790918,"byte_end":15790991,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15790996,"byte_end":15791066,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791071,"byte_end":15791074,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791079,"byte_end":15791133,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791730,"byte_end":15791740,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791292,"byte_end":15791342,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791347,"byte_end":15791350,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791355,"byte_end":15791362,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791367,"byte_end":15791386,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791391,"byte_end":15791429,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791434,"byte_end":15791437,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791442,"byte_end":15791476,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791481,"byte_end":15791528,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791533,"byte_end":15791540,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791545,"byte_end":15791552,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791557,"byte_end":15791595,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791600,"byte_end":15791603,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791608,"byte_end":15791661,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791666,"byte_end":15791706,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15791711,"byte_end":15791718,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1333},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796066,"byte_end":15796087,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796020,"byte_end":15796061,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1335},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796123,"byte_end":15796125,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1332},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796093,"byte_end":15796118,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1332},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15795998,"byte_end":15796013,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1335}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15795915,"byte_end":15795971,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1340},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15798047,"byte_end":15798064,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15796861,"byte_end":15797002,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797003,"byte_end":15797006,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797007,"byte_end":15797045,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797046,"byte_end":15797084,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797085,"byte_end":15797088,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797089,"byte_end":15797102,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797103,"byte_end":15797170,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797171,"byte_end":15797174,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797175,"byte_end":15797208,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797209,"byte_end":15797238,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797239,"byte_end":15797242,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797243,"byte_end":15797250,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797251,"byte_end":15797307,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797308,"byte_end":15797342,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797343,"byte_end":15797346,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797347,"byte_end":15797352,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797353,"byte_end":15797400,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797401,"byte_end":15797454,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797455,"byte_end":15797532,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797533,"byte_end":15797568,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797569,"byte_end":15797590,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797591,"byte_end":15797641,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797642,"byte_end":15797705,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797706,"byte_end":15797769,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797770,"byte_end":15797833,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797834,"byte_end":15797890,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797891,"byte_end":15797940,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797941,"byte_end":15797953,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797954,"byte_end":15797961,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797962,"byte_end":15797969,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15797970,"byte_end":15797973,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799399,"byte_end":15799402,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15798957,"byte_end":15799025,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799030,"byte_end":15799033,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799038,"byte_end":15799048,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799053,"byte_end":15799056,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799061,"byte_end":15799140,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799145,"byte_end":15799219,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799224,"byte_end":15799291,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799296,"byte_end":15799299,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799304,"byte_end":15799387,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800713,"byte_end":15800732,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799682,"byte_end":15799750,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799755,"byte_end":15799758,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799763,"byte_end":15799833,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799838,"byte_end":15799924,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15799929,"byte_end":15799999,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800004,"byte_end":15800081,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800086,"byte_end":15800156,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800161,"byte_end":15800184,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800189,"byte_end":15800192,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800197,"byte_end":15800207,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800212,"byte_end":15800215,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800220,"byte_end":15800302,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800307,"byte_end":15800380,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800385,"byte_end":15800462,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800467,"byte_end":15800540,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800545,"byte_end":15800620,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800625,"byte_end":15800628,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800633,"byte_end":15800701,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801520,"byte_end":15801530,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15800989,"byte_end":15801040,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801045,"byte_end":15801048,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801053,"byte_end":15801060,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801065,"byte_end":15801084,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801089,"byte_end":15801134,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801139,"byte_end":15801142,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801147,"byte_end":15801219,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801224,"byte_end":15801271,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801276,"byte_end":15801283,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801288,"byte_end":15801295,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801300,"byte_end":15801345,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801350,"byte_end":15801353,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801358,"byte_end":15801451,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801456,"byte_end":15801496,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801501,"byte_end":15801508,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805626,"byte_end":15805648,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805579,"byte_end":15805621,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805684,"byte_end":15805686,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805654,"byte_end":15805679,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1364},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805550,"byte_end":15805572,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1367}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805466,"byte_end":15805523,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1372},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::udp","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/mod.rs","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1465}],"decl_id":null,"docs":" UDP framing\n","sig":null,"attributes":[{"value":"cfg(all(feature = \"net\", feature = \"codec\"))","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/cfg.rs","byte_start":5828,"byte_end":5875,"line_start":24,"line_end":24,"column_start":13,"column_end":60}},{"value":"/ UDP framing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/mod.rs","byte_start":15806255,"byte_end":15806270,"line_start":1,"line_end":1,"column_start":1,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1530},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807884,"byte_end":15807893,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"UdpFramed","qualname":"::udp::frame::UdpFramed","value":"UdpFramed {  }","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying `UdpSocket`, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[{"value":"/ A unified [`Stream`] and [`Sink`] interface to an underlying `UdpSocket`, using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15806664,"byte_end":15806747,"line_start":17,"line_end":17,"column_start":1,"column_end":84}},{"value":"/ the `Encoder` and `Decoder` traits to encode and decode frames.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15806748,"byte_end":15806815,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15806816,"byte_end":15806819,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Raw UDP sockets work with datagrams, but higher-level code usually wants to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15806820,"byte_end":15806899,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ batch these into meaningful chunks, called \"frames\". This method layers","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15806900,"byte_end":15806975,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ framing on top of this socket by using the `Encoder` and `Decoder` traits to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15806976,"byte_end":15807056,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ handle encoding and decoding of messages frames. Note that the incoming and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807057,"byte_end":15807136,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ outgoing frame types may be distinct.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807137,"byte_end":15807178,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807179,"byte_end":15807182,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function returns a *single* object that is both [`Stream`] and [`Sink`];","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807183,"byte_end":15807264,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/ grouping this into a single object is often useful for layering things which","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807265,"byte_end":15807345,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ require both read and write access to the underlying object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807346,"byte_end":15807410,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807411,"byte_end":15807414,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807415,"byte_end":15807488,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ calling [`split`] on the `UdpFramed` returned by this method, which will break","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807489,"byte_end":15807571,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ them into separate objects, allowing them to interact more easily.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807572,"byte_end":15807642,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807643,"byte_end":15807646,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807647,"byte_end":15807683,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807684,"byte_end":15807716,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807717,"byte_end":15807808,"line_start":36,"line_end":36,"column_start":1,"column_end":92}},{"value":"must_use = \"sinks do nothing unless polled\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15807809,"byte_end":15807855,"line_start":37,"line_end":37,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15811893,"byte_end":15811896,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpFramed<C, T>>::new","value":"pub fn new(T, C) -> UdpFramed<C, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `UdpFramed` backed by the given socket and codec.","sig":null,"attributes":[{"value":"/ Create a new `UdpFramed` backed by the given socket and codec.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15811750,"byte_end":15811816,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15811821,"byte_end":15811824,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ See struct level documentation for more details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15811829,"byte_end":15811881,"line_start":177,"line_end":177,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812604,"byte_end":15812611,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<UdpFramed<C, T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812316,"byte_end":15812389,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812394,"byte_end":15812397,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812402,"byte_end":15812412,"line_start":193,"line_end":193,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812417,"byte_end":15812420,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to not tamper with the underlying stream of data","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812425,"byte_end":15812498,"line_start":195,"line_end":195,"column_start":5,"column_end":78}},{"value":"/ coming in as it may corrupt the stream of frames otherwise being worked","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812503,"byte_end":15812578,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812583,"byte_end":15812592,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812955,"byte_end":15812962,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<UdpFramed<C, T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812659,"byte_end":15812740,"line_start":202,"line_end":202,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812745,"byte_end":15812748,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812753,"byte_end":15812763,"line_start":204,"line_end":204,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812768,"byte_end":15812771,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to not tamper with the underlying stream of data","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812776,"byte_end":15812849,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ coming in as it may corrupt the stream of frames otherwise being worked","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812854,"byte_end":15812929,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15812934,"byte_end":15812943,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813273,"byte_end":15813278,"line_start":218,"line_end":218,"column_start":12,"column_end":17},"name":"codec","qualname":"<UdpFramed<C, T>>::codec","value":"pub fn codec(&Self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813022,"byte_end":15813080,"line_start":213,"line_end":213,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813085,"byte_end":15813098,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813103,"byte_end":15813106,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813111,"byte_end":15813185,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813190,"byte_end":15813261,"line_start":217,"line_end":217,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813587,"byte_end":15813596,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<UdpFramed<C, T>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut C","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `UdpFramed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813325,"byte_end":15813391,"line_start":222,"line_end":222,"column_start":5,"column_end":71}},{"value":"/ `UdpFramed`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813396,"byte_end":15813412,"line_start":223,"line_end":223,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813417,"byte_end":15813420,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813425,"byte_end":15813499,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813504,"byte_end":15813575,"line_start":226,"line_end":226,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813710,"byte_end":15813721,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<UdpFramed<C, T>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813655,"byte_end":15813698,"line_start":231,"line_end":231,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813835,"byte_end":15813850,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<UdpFramed<C, T>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813772,"byte_end":15813823,"line_start":236,"line_end":236,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813988,"byte_end":15813998,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<UdpFramed<C, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15813913,"byte_end":15813976,"line_start":241,"line_end":241,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":1468},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1472},{"krate":0,"index":1475},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1507},{"krate":0,"index":1513},{"krate":0,"index":1545},{"krate":0,"index":1549},{"krate":0,"index":1518},{"krate":0,"index":1523}],"decl_id":null,"docs":" TCP/UDP/Unix helpers for tokio.\n","sig":null,"attributes":[{"value":"cfg(all(feature = \"net\", feature = \"codec\"))","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/cfg.rs","byte_start":5828,"byte_end":5875,"line_start":24,"line_end":24,"column_start":13,"column_end":60}},{"value":"/ TCP/UDP/Unix helpers for tokio.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814041,"byte_end":15814076,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1488},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1502}],"decl_id":null,"docs":" Unix domain socket helpers.\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814203,"byte_end":15814215,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/ Unix domain socket helpers.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/unix/mod.rs","byte_start":15816839,"byte_end":15816870,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":1507},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814303,"byte_end":15814311,"line_start":13,"line_end":13,"column_start":11,"column_end":19},"name":"Listener","qualname":"::net::Listener","value":"Listener","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"decl_id":null,"docs":" A trait for a listener: `TcpListener` and `UnixListener`.\n","sig":null,"attributes":[{"value":"/ A trait for a listener: `TcpListener` and `UnixListener`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814231,"byte_end":15814292,"line_start":12,"line_end":12,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":1508},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814367,"byte_end":15814369,"line_start":15,"line_end":15,"column_start":10,"column_end":12},"name":"Io","qualname":"::net::Listener::Io","value":"type Io: tokio::io::AsyncRead + tokio::io::AsyncWrite;","parent":{"krate":0,"index":1507},"children":[],"decl_id":null,"docs":" The stream's type of this listener.\n","sig":null,"attributes":[{"value":"/ The stream's type of this listener.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814318,"byte_end":15814357,"line_start":14,"line_end":14,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1509},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814476,"byte_end":15814480,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"name":"Addr","qualname":"::net::Listener::Addr","value":"type Addr;","parent":{"krate":0,"index":1507},"children":[],"decl_id":null,"docs":" The socket address type of this listener.\n","sig":null,"attributes":[{"value":"/ The socket address type of this listener.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814421,"byte_end":15814466,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814558,"byte_end":15814569,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"poll_accept","qualname":"::net::Listener::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<Result<(Self::Io, Self::Addr)>>","parent":{"krate":0,"index":1507},"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814487,"byte_end":15814550,"line_start":19,"line_end":19,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814714,"byte_end":15814720,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"accept","qualname":"::net::Listener::accept","value":"pub fn accept(&mut Self) -> ListenerAcceptFut<, Self> where Self: Sized","parent":{"krate":0,"index":1507},"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814649,"byte_end":15814706,"line_start":22,"line_end":22,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814925,"byte_end":15814935,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"local_addr","qualname":"::net::Listener::local_addr","value":"pub fn local_addr(&Self) -> Result<Self::Addr>","parent":{"krate":0,"index":1507},"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814856,"byte_end":15814917,"line_start":30,"line_end":30,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1545},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15815481,"byte_end":15815498,"line_start":50,"line_end":50,"column_start":12,"column_end":29},"name":"ListenerAcceptFut","qualname":"::net::ListenerAcceptFut","value":"ListenerAcceptFut {  }","parent":null,"children":[{"krate":0,"index":1548}],"decl_id":null,"docs":" Future for accepting a new connection from a listener.\n","sig":null,"attributes":[{"value":"/ Future for accepting a new connection from a listener.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15815326,"byte_end":15815384,"line_start":47,"line_end":47,"column_start":1,"column_end":59}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15815402,"byte_end":15815469,"line_start":49,"line_end":49,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15815930,"byte_end":15815936,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"name":"accept","qualname":"<Either<L, R>>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15815855,"byte_end":15815912,"line_start":70,"line_end":70,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15816453,"byte_end":15816463,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Either<L, R>>::local_addr","value":"pub fn local_addr(&Self) -> Result<Either<L::Addr, R::Addr>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15816380,"byte_end":15816441,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1553},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"compat","qualname":"::compat","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":2610},{"krate":0,"index":2614},{"krate":0,"index":2616},{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1589},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1606},{"krate":0,"index":1611},{"krate":0,"index":1616},{"krate":0,"index":1621},{"krate":0,"index":1625},{"krate":0,"index":1630}],"decl_id":null,"docs":" Compatibility between the `tokio::io` and `futures-io` versions of the\n `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"cfg(feature = \"compat\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/cfg.rs","byte_start":5629,"byte_end":5655,"line_start":14,"line_end":14,"column_start":13,"column_end":39}},{"value":"/ Compatibility between the `tokio::io` and `futures-io` versions of the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15817314,"byte_end":15817388,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/ `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15817389,"byte_end":15817429,"line_start":2,"line_end":2,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2610},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15817758,"byte_end":15817764,"line_start":13,"line_end":13,"column_start":16,"column_end":22},"name":"Compat","qualname":"::compat::Compat","value":"Compat {  }","parent":null,"children":[{"krate":0,"index":2612},{"krate":0,"index":2613}],"decl_id":null,"docs":" A compatibility layer that allows conversion between the\n `tokio::io` and `futures-io` `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1573},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15817990,"byte_end":15818015,"line_start":22,"line_end":22,"column_start":11,"column_end":36},"name":"FuturesAsyncReadCompatExt","qualname":"::compat::FuturesAsyncReadCompatExt","value":"FuturesAsyncReadCompatExt: futures_io::AsyncRead","parent":null,"children":[{"krate":0,"index":1574}],"decl_id":null,"docs":" Extension trait that allows converting a type implementing\n `futures_io::AsyncRead` to implement `tokio::io::AsyncRead`.\n","sig":null,"attributes":[{"value":"/ Extension trait that allows converting a type implementing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15817852,"byte_end":15817914,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ `futures_io::AsyncRead` to implement `tokio::io::AsyncRead`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15817915,"byte_end":15817979,"line_start":21,"line_end":21,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818143,"byte_end":15818149,"line_start":25,"line_end":25,"column_start":8,"column_end":14},"name":"compat","qualname":"::compat::FuturesAsyncReadCompatExt::compat","value":"pub fn compat(Self) -> Compat<Self> where Self: Sized","parent":{"krate":0,"index":1573},"children":[],"decl_id":null,"docs":" Wraps `self` with a compatibility layer that implements\n `tokio_io::AsyncRead`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with a compatibility layer that implements","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818045,"byte_end":15818104,"line_start":23,"line_end":23,"column_start":5,"column_end":64}},{"value":"/ `tokio_io::AsyncRead`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818109,"byte_end":15818135,"line_start":24,"line_end":24,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1577},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818451,"byte_end":15818477,"line_start":37,"line_end":37,"column_start":11,"column_end":37},"name":"FuturesAsyncWriteCompatExt","qualname":"::compat::FuturesAsyncWriteCompatExt","value":"FuturesAsyncWriteCompatExt: futures_io::AsyncWrite","parent":null,"children":[{"krate":0,"index":1578}],"decl_id":null,"docs":" Extension trait that allows converting a type implementing\n `futures_io::AsyncWrite` to implement `tokio::io::AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Extension trait that allows converting a type implementing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818311,"byte_end":15818373,"line_start":35,"line_end":35,"column_start":1,"column_end":63}},{"value":"/ `futures_io::AsyncWrite` to implement `tokio::io::AsyncWrite`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818374,"byte_end":15818440,"line_start":36,"line_end":36,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818608,"byte_end":15818620,"line_start":40,"line_end":40,"column_start":8,"column_end":20},"name":"compat_write","qualname":"::compat::FuturesAsyncWriteCompatExt::compat_write","value":"pub fn compat_write(Self) -> Compat<Self> where Self: Sized","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":" Wraps `self` with a compatibility layer that implements\n `tokio::io::AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with a compatibility layer that implements","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818508,"byte_end":15818567,"line_start":38,"line_end":38,"column_start":5,"column_end":64}},{"value":"/ `tokio::io::AsyncWrite`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818572,"byte_end":15818600,"line_start":39,"line_end":39,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":1581},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818922,"byte_end":15818945,"line_start":52,"line_end":52,"column_start":11,"column_end":34},"name":"TokioAsyncReadCompatExt","qualname":"::compat::TokioAsyncReadCompatExt","value":"TokioAsyncReadCompatExt: tokio::io::AsyncRead","parent":null,"children":[{"krate":0,"index":1582}],"decl_id":null,"docs":" Extension trait that allows converting a type implementing\n `tokio::io::AsyncRead` to implement `futures_io::AsyncRead`.\n","sig":null,"attributes":[{"value":"/ Extension trait that allows converting a type implementing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818784,"byte_end":15818846,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ `tokio::io::AsyncRead` to implement `futures_io::AsyncRead`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818847,"byte_end":15818911,"line_start":51,"line_end":51,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819074,"byte_end":15819080,"line_start":55,"line_end":55,"column_start":8,"column_end":14},"name":"compat","qualname":"::compat::TokioAsyncReadCompatExt::compat","value":"pub fn compat(Self) -> Compat<Self> where Self: Sized","parent":{"krate":0,"index":1581},"children":[],"decl_id":null,"docs":" Wraps `self` with a compatibility layer that implements\n `futures_io::AsyncRead`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with a compatibility layer that implements","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818974,"byte_end":15819033,"line_start":53,"line_end":53,"column_start":5,"column_end":64}},{"value":"/ `futures_io::AsyncRead`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819038,"byte_end":15819066,"line_start":54,"line_end":54,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":1585},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819379,"byte_end":15819403,"line_start":67,"line_end":67,"column_start":11,"column_end":35},"name":"TokioAsyncWriteCompatExt","qualname":"::compat::TokioAsyncWriteCompatExt","value":"TokioAsyncWriteCompatExt: tokio::io::AsyncWrite","parent":null,"children":[{"krate":0,"index":1586}],"decl_id":null,"docs":" Extension trait that allows converting a type implementing\n `tokio::io::AsyncWrite` to implement `futures_io::AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Extension trait that allows converting a type implementing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819239,"byte_end":15819301,"line_start":65,"line_end":65,"column_start":1,"column_end":63}},{"value":"/ `tokio::io::AsyncWrite` to implement `futures_io::AsyncWrite`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819302,"byte_end":15819368,"line_start":66,"line_end":66,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819534,"byte_end":15819546,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"compat_write","qualname":"::compat::TokioAsyncWriteCompatExt::compat_write","value":"pub fn compat_write(Self) -> Compat<Self> where Self: Sized","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":" Wraps `self` with a compatibility layer that implements\n `futures_io::AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` with a compatibility layer that implements","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819433,"byte_end":15819492,"line_start":68,"line_end":68,"column_start":5,"column_end":64}},{"value":"/ `futures_io::AsyncWrite`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819497,"byte_end":15819526,"line_start":69,"line_end":69,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819985,"byte_end":15819992,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Compat<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the `Future`, `Stream`, `AsyncRead`, or `AsyncWrite` object\n contained within.\n","sig":null,"attributes":[{"value":"/ Get a reference to the `Future`, `Stream`, `AsyncRead`, or `AsyncWrite` object","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819865,"byte_end":15819947,"line_start":90,"line_end":90,"column_start":5,"column_end":87}},{"value":"/ contained within.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819952,"byte_end":15819973,"line_start":91,"line_end":91,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15820167,"byte_end":15820174,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Compat<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the `Future`, `Stream`, `AsyncRead`, or `AsyncWrite` object\n contained within.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the `Future`, `Stream`, `AsyncRead`, or `AsyncWrite` object","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15820039,"byte_end":15820129,"line_start":96,"line_end":96,"column_start":5,"column_end":95}},{"value":"/ contained within.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15820134,"byte_end":15820155,"line_start":97,"line_end":97,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15820274,"byte_end":15820284,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Compat<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped item.\n","sig":null,"attributes":[{"value":"/ Returns the wrapped item.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15820233,"byte_end":15820262,"line_start":102,"line_end":102,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":1633},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1675},{"krate":0,"index":1714},{"krate":0,"index":1788},{"krate":0,"index":1828},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1785}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/cfg.rs","byte_start":6068,"byte_end":6090,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825388,"byte_end":15825421,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825422,"byte_end":15825425,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The stream types are often used in combination with hyper or reqwest, as they","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825426,"byte_end":15825507,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825508,"byte_end":15825572,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825573,"byte_end":15825576,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The [`SyncIoBridge`] type converts from the world of async I/O","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825577,"byte_end":15825643,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ to synchronous I/O; this may often come up when using synchronous APIs","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825644,"byte_end":15825718,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ inside [`tokio::task::spawn_blocking`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825719,"byte_end":15825762,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825763,"byte_end":15825766,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825767,"byte_end":15825830,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/mod.rs","byte_start":15825831,"byte_end":15825870,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1657},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827241,"byte_end":15827249,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"pub async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/\nwhere R: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826318,"byte_end":15826396,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826397,"byte_end":15826400,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826401,"byte_end":15826430,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826431,"byte_end":15826434,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826435,"byte_end":15826448,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826449,"byte_end":15826452,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826453,"byte_end":15826460,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826461,"byte_end":15826494,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826495,"byte_end":15826526,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826527,"byte_end":15826553,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826554,"byte_end":15826603,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826604,"byte_end":15826624,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826625,"byte_end":15826671,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826672,"byte_end":15826675,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826676,"byte_end":15826754,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826755,"byte_end":15826768,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826769,"byte_end":15826873,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826874,"byte_end":15826877,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826878,"byte_end":15826912,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826913,"byte_end":15826935,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826936,"byte_end":15826939,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826940,"byte_end":15826950,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826951,"byte_end":15826970,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15826971,"byte_end":15827024,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827025,"byte_end":15827028,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827029,"byte_end":15827048,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827049,"byte_end":15827067,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827068,"byte_end":15827077,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827078,"byte_end":15827083,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827084,"byte_end":15827087,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827088,"byte_end":15827132,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827133,"byte_end":15827157,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827158,"byte_end":15827198,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827199,"byte_end":15827211,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827212,"byte_end":15827219,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827220,"byte_end":15827227,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2566},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829135,"byte_end":15829147,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829656,"byte_end":15829659,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829449,"byte_end":15829510,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829515,"byte_end":15829551,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829556,"byte_end":15829559,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829564,"byte_end":15829603,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829608,"byte_end":15829644,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15830094,"byte_end":15830107,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReaderStream<R>>::with_capacity","value":"pub fn with_capacity(R, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829833,"byte_end":15829894,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829899,"byte_end":15829935,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829940,"byte_end":15829989,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829994,"byte_end":15829997,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15830002,"byte_end":15830041,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15830046,"byte_end":15830082,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2517},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833115,"byte_end":15833127,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":2520},{"krate":0,"index":2521}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833744,"byte_end":15833747,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"pub fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833326,"byte_end":15833406,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833411,"byte_end":15833414,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833419,"byte_end":15833495,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833500,"byte_end":15833571,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833576,"byte_end":15833621,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833626,"byte_end":15833629,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833634,"byte_end":15833669,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833674,"byte_end":15833697,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833702,"byte_end":15833732,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1753},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834275,"byte_end":15834296,"line_start":98,"line_end":98,"column_start":12,"column_end":33},"name":"into_inner_with_chunk","qualname":"<StreamReader<S, B>>::into_inner_with_chunk","value":"pub fn into_inner_with_chunk(Self) -> (S, Option<B>)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `StreamReader`, returning a Tuple consisting\n of the underlying stream and an Option of the interal buffer,\n which is Some in case the buffer contains elements.\n","sig":null,"attributes":[{"value":"/ Consumes this `StreamReader`, returning a Tuple consisting","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834071,"byte_end":15834133,"line_start":95,"line_end":95,"column_start":5,"column_end":67}},{"value":"/ of the underlying stream and an Option of the interal buffer,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834138,"byte_end":15834203,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ which is Some in case the buffer contains elements.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834208,"byte_end":15834263,"line_start":97,"line_end":97,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834630,"byte_end":15834637,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834493,"byte_end":15834539,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834544,"byte_end":15834547,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834552,"byte_end":15834618,"line_start":110,"line_end":110,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834829,"byte_end":15834836,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834684,"byte_end":15834738,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834743,"byte_end":15834746,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834751,"byte_end":15834817,"line_start":117,"line_end":117,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835047,"byte_end":15835058,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834895,"byte_end":15834956,"line_start":122,"line_end":122,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834961,"byte_end":15834964,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834969,"byte_end":15835035,"line_start":124,"line_end":124,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835481,"byte_end":15835491,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"pub fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835138,"byte_end":15835201,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835206,"byte_end":15835209,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835214,"byte_end":15835277,"line_start":131,"line_end":131,"column_start":5,"column_end":68}},{"value":"/ If you additionally want access to the internal buffer use","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835282,"byte_end":15835344,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/ [`into_inner_with_chunk`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835349,"byte_end":15835379,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835384,"byte_end":15835387,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`into_inner_with_chunk`]: crate::io::StreamReader::into_inner_with_chunk","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835392,"byte_end":15835469,"line_start":135,"line_end":135,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1831},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15837856,"byte_end":15837868,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"SyncIoBridge","qualname":"::io::sync_bridge::SyncIoBridge","value":"SyncIoBridge {  }","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834}],"decl_id":null,"docs":" Use a [`tokio::io::AsyncRead`] synchronously as a [`std::io::Read`] or\n a [`tokio::io::AsyncWrite`] as a [`std::io::Write`].\n","sig":null,"attributes":[{"value":"/ Use a [`tokio::io::AsyncRead`] synchronously as a [`std::io::Read`] or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15837696,"byte_end":15837770,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ a [`tokio::io::AsyncWrite`] as a [`std::io::Write`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15837771,"byte_end":15837827,"line_start":5,"line_end":5,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839792,"byte_end":15839809,"line_start":64,"line_end":64,"column_start":12,"column_end":29},"name":"is_write_vectored","qualname":"<SyncIoBridge<T>>::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if the underlying [`tokio::io::AsyncWrite`] target supports efficient vectored writes.","sig":null,"attributes":[{"value":"/ Determines if the underlying [`tokio::io::AsyncWrite`] target supports efficient vectored writes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839613,"byte_end":15839714,"line_start":61,"line_end":61,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839719,"byte_end":15839722,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ See [`tokio::io::AsyncWrite::is_write_vectored`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839727,"byte_end":15839780,"line_start":63,"line_end":63,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840992,"byte_end":15840995,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<SyncIoBridge<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use a [`tokio::io::AsyncRead`] synchronously as a [`std::io::Read`] or\n a [`tokio::io::AsyncWrite`] as a [`std::io::Write`].","sig":null,"attributes":[{"value":"/ Use a [`tokio::io::AsyncRead`] synchronously as a [`std::io::Read`] or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839910,"byte_end":15839984,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ a [`tokio::io::AsyncWrite`] as a [`std::io::Write`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839989,"byte_end":15840045,"line_start":71,"line_end":71,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840050,"byte_end":15840053,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ When this struct is created, it captures a handle to the current thread's runtime with [`tokio::runtime::Handle::current`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840058,"byte_end":15840185,"line_start":73,"line_end":73,"column_start":5,"column_end":132}},{"value":"/ It is hence OK to move this struct into a separate thread outside the runtime, as created","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840190,"byte_end":15840283,"line_start":74,"line_end":74,"column_start":5,"column_end":98}},{"value":"/ by e.g. [`tokio::task::spawn_blocking`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840288,"byte_end":15840332,"line_start":75,"line_end":75,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840337,"byte_end":15840340,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Stated even more strongly: to make use of this bridge, you *must* move","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840345,"byte_end":15840419,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ it into a separate thread outside the runtime.  The synchronous I/O will use the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840424,"byte_end":15840508,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"/ underlying handle to block on the backing asynchronous source, via","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840513,"byte_end":15840583,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ [`tokio::runtime::Handle::block_on`].  As noted in the documentation for that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840588,"byte_end":15840669,"line_start":80,"line_end":80,"column_start":5,"column_end":86}},{"value":"/ function, an attempt to `block_on` from an asynchronous execution context","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840674,"byte_end":15840751,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ will panic.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840756,"byte_end":15840771,"line_start":82,"line_end":82,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840776,"byte_end":15840779,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Wrapping `!Unpin` types","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840784,"byte_end":15840813,"line_start":84,"line_end":84,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840818,"byte_end":15840821,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Use e.g. `SyncIoBridge::new(Box::pin(src))`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840826,"byte_end":15840874,"line_start":86,"line_end":86,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840879,"byte_end":15840882,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840887,"byte_end":15840898,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840903,"byte_end":15840906,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15840911,"byte_end":15840980,"line_start":90,"line_end":90,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15841419,"byte_end":15841434,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"new_with_handle","qualname":"<SyncIoBridge<T>>::new_with_handle","value":"pub fn new_with_handle(T, tokio::runtime::Handle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use a [`tokio::io::AsyncRead`] synchronously as a [`std::io::Read`] or\n a [`tokio::io::AsyncWrite`] as a [`std::io::Write`].","sig":null,"attributes":[{"value":"/ Use a [`tokio::io::AsyncRead`] synchronously as a [`std::io::Read`] or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15841095,"byte_end":15841169,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ a [`tokio::io::AsyncWrite`] as a [`std::io::Write`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15841174,"byte_end":15841230,"line_start":96,"line_end":96,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15841235,"byte_end":15841238,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This is the same as [`SyncIoBridge::new`], but allows passing an arbitrary handle and hence may","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15841243,"byte_end":15841342,"line_start":98,"line_end":98,"column_start":5,"column_end":104}},{"value":"/ be initially invoked outside of an asynchronous context.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15841347,"byte_end":15841407,"line_start":99,"line_end":99,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":1838},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"context","qualname":"::context","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":2480},{"krate":0,"index":2484},{"krate":0,"index":1863},{"krate":0,"index":1868},{"krate":0,"index":1872},{"krate":0,"index":1875}],"decl_id":null,"docs":" Tokio context aware futures utilities.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/cfg.rs","byte_start":6511,"byte_end":6533,"line_start":56,"line_end":56,"column_start":13,"column_end":35}},{"value":"/ Tokio context aware futures utilities.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15841515,"byte_end":15841557,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15841558,"byte_end":15841561,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module includes utilities around integrating tokio with other runtimes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15841562,"byte_end":15841641,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ by allowing the context to be attached to futures. This allows spawning","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15841642,"byte_end":15841717,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ futures on other executors while still using tokio to drive them. This","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15841718,"byte_end":15841792,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ can be useful if you need to use a tokio based library in an executor/runtime","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15841793,"byte_end":15841874,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/ that does not provide a tokio context.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15841875,"byte_end":15841917,"line_start":7,"line_end":7,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2480},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844319,"byte_end":15844331,"line_start":69,"line_end":69,"column_start":16,"column_end":28},"name":"TokioContext","qualname":"::context::TokioContext","value":"TokioContext {  }","parent":null,"children":[{"krate":0,"index":2482},{"krate":0,"index":2483}],"decl_id":null,"docs":" `TokioContext` allows running futures that must be inside Tokio's\n context on a non-Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845570,"byte_end":15845573,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<TokioContext<F>>::new","value":"pub fn new(F, Handle) -> TokioContext<F>","parent":null,"children":[],"decl_id":null,"docs":" Associate the provided future with the context of the runtime behind\n the provided `Handle`.","sig":null,"attributes":[{"value":"/ Associate the provided future with the context of the runtime behind","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844433,"byte_end":15844505,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the provided `Handle`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844510,"byte_end":15844536,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844541,"byte_end":15844544,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This constructor uses a `'static` lifetime to opt-out of checking that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844549,"byte_end":15844623,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ the runtime still exists.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844628,"byte_end":15844657,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844662,"byte_end":15844665,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844670,"byte_end":15844684,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844689,"byte_end":15844692,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This is the same as the example above, but uses the `new` constructor","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844697,"byte_end":15844770,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ rather than [`RuntimeExt::wrap`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844775,"byte_end":15844812,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844817,"byte_end":15844820,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`RuntimeExt::wrap`]: fn@RuntimeExt::wrap","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844825,"byte_end":15844870,"line_start":88,"line_end":88,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844875,"byte_end":15844878,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844883,"byte_end":15844890,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844895,"byte_end":15844934,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ use tokio_util::context::TokioContext;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844939,"byte_end":15844981,"line_start":92,"line_end":92,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844986,"byte_end":15844989,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // This runtime has timers enabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844994,"byte_end":15845033,"line_start":94,"line_end":94,"column_start":5,"column_end":44}},{"value":"/ let rt = tokio::runtime::Builder::new_multi_thread()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845038,"byte_end":15845094,"line_start":95,"line_end":95,"column_start":5,"column_end":61}},{"value":"/     .enable_all()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845099,"byte_end":15845120,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845125,"byte_end":15845141,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845146,"byte_end":15845164,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845169,"byte_end":15845172,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // This runtime has timers disabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845177,"byte_end":15845217,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/ let rt2 = tokio::runtime::Builder::new_multi_thread()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845222,"byte_end":15845279,"line_start":101,"line_end":101,"column_start":5,"column_end":62}},{"value":"/     .build()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845284,"byte_end":15845300,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845305,"byte_end":15845323,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845328,"byte_end":15845331,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let fut = TokioContext::new(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845336,"byte_end":15845368,"line_start":105,"line_end":105,"column_start":5,"column_end":37}},{"value":"/     async { sleep(Duration::from_millis(2)).await },","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845373,"byte_end":15845429,"line_start":106,"line_end":106,"column_start":5,"column_end":61}},{"value":"/     rt.handle().clone(),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845434,"byte_end":15845462,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845467,"byte_end":15845473,"line_start":108,"line_end":108,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845478,"byte_end":15845481,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // Execute the future on rt2.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845486,"byte_end":15845519,"line_start":110,"line_end":110,"column_start":5,"column_end":38}},{"value":"/ rt2.block_on(fut);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845524,"byte_end":15845546,"line_start":111,"line_end":111,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845551,"byte_end":15845558,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845789,"byte_end":15845795,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"handle","qualname":"<TokioContext<F>>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the handle inside this `TokioContext`.\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the handle inside this `TokioContext`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845713,"byte_end":15845777,"line_start":120,"line_end":120,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845936,"byte_end":15845946,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TokioContext<F>>::into_inner","value":"pub fn into_inner(Self) -> F","parent":null,"children":[],"decl_id":null,"docs":" Remove the association between the Tokio runtime and the wrapped future.\n","sig":null,"attributes":[{"value":"/ Remove the association between the Tokio runtime and the wrapped future.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15845848,"byte_end":15845924,"line_start":125,"line_end":125,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":1872},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846387,"byte_end":15846397,"line_start":145,"line_end":145,"column_start":11,"column_end":21},"name":"RuntimeExt","qualname":"::context::RuntimeExt","value":"RuntimeExt","parent":null,"children":[{"krate":0,"index":1873}],"decl_id":null,"docs":" Extension trait that simplifies bundling a `Handle` with a `Future`.\n","sig":null,"attributes":[{"value":"/ Extension trait that simplifies bundling a `Handle` with a `Future`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846304,"byte_end":15846376,"line_start":144,"line_end":144,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847633,"byte_end":15847637,"line_start":180,"line_end":180,"column_start":8,"column_end":12},"name":"wrap","qualname":"::context::RuntimeExt::wrap","value":"pub fn wrap<F: Future>(&Self, F) -> TokioContext<F>","parent":{"krate":0,"index":1872},"children":[],"decl_id":null,"docs":" Create a [`TokioContext`] that wraps the provided future and runs it in\n this runtime's context.","sig":null,"attributes":[{"value":"/ Create a [`TokioContext`] that wraps the provided future and runs it in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846404,"byte_end":15846479,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ this runtime's context.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846484,"byte_end":15846511,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846516,"byte_end":15846519,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846524,"byte_end":15846538,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846543,"byte_end":15846546,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This example creates two runtimes, but only [enables time] on one of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846551,"byte_end":15846623,"line_start":151,"line_end":151,"column_start":5,"column_end":77}},{"value":"/ them. It then uses the context of the runtime with the timer enabled to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846628,"byte_end":15846703,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ execute a [`sleep`] future on the runtime with timing disabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846708,"byte_end":15846775,"line_start":153,"line_end":153,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846780,"byte_end":15846783,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846788,"byte_end":15846795,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846800,"byte_end":15846839,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"/ use tokio_util::context::RuntimeExt;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846844,"byte_end":15846884,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846889,"byte_end":15846892,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ // This runtime has timers enabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846897,"byte_end":15846936,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/ let rt = tokio::runtime::Builder::new_multi_thread()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846941,"byte_end":15846997,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/     .enable_all()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847002,"byte_end":15847023,"line_start":161,"line_end":161,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847028,"byte_end":15847044,"line_start":162,"line_end":162,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847049,"byte_end":15847067,"line_start":163,"line_end":163,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847072,"byte_end":15847075,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // This runtime has timers disabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847080,"byte_end":15847120,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/ let rt2 = tokio::runtime::Builder::new_multi_thread()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847125,"byte_end":15847182,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/     .build()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847187,"byte_end":15847203,"line_start":167,"line_end":167,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847208,"byte_end":15847226,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847231,"byte_end":15847234,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ // Wrap the sleep future in the context of rt.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847239,"byte_end":15847289,"line_start":170,"line_end":170,"column_start":5,"column_end":55}},{"value":"/ let fut = rt.wrap(async { sleep(Duration::from_millis(2)).await });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847294,"byte_end":15847365,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847370,"byte_end":15847373,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ // Execute the future on rt2.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847378,"byte_end":15847411,"line_start":173,"line_end":173,"column_start":5,"column_end":38}},{"value":"/ rt2.block_on(fut);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847416,"byte_end":15847438,"line_start":174,"line_end":174,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847443,"byte_end":15847450,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847455,"byte_end":15847458,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`TokioContext`]: struct@crate::context::TokioContext","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847463,"byte_end":15847520,"line_start":177,"line_end":177,"column_start":5,"column_end":62}},{"value":"/ [`sleep`]: fn@tokio::time::sleep","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847525,"byte_end":15847561,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/ [enables time]: fn@tokio::runtime::Builder::enable_time","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847566,"byte_end":15847625,"line_start":179,"line_end":179,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":1878},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1976}],"decl_id":null,"docs":" Extra utilities for spawning tasks\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/cfg.rs","byte_start":6511,"byte_end":6533,"line_start":56,"line_end":56,"column_start":13,"column_end":35}},{"value":"/ Extra utilities for spawning tasks","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/mod.rs","byte_start":15847885,"byte_end":15847923,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1979},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848457,"byte_end":15848472,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"LocalPoolHandle","qualname":"::task::spawn_pinned::LocalPoolHandle","value":"LocalPoolHandle {  }","parent":null,"children":[{"krate":0,"index":1980}],"decl_id":null,"docs":" A handle to a local pool, used for spawning `!Send` tasks.\n","sig":null,"attributes":[{"value":"/ A handle to a local pool, used for spawning `!Send` tasks.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848366,"byte_end":15848428,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848749,"byte_end":15848752,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalPoolHandle>::new","value":"pub fn new(usize) -> LocalPoolHandle","parent":null,"children":[],"decl_id":null,"docs":" Create a new pool of threads to handle `!Send` tasks. Spawn tasks onto this\n pool via [`LocalPoolHandle::spawn_pinned`].","sig":null,"attributes":[{"value":"/ Create a new pool of threads to handle `!Send` tasks. Spawn tasks onto this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848531,"byte_end":15848610,"line_start":19,"line_end":19,"column_start":5,"column_end":84}},{"value":"/ pool via [`LocalPoolHandle::spawn_pinned`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848615,"byte_end":15848662,"line_start":20,"line_end":20,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848667,"byte_end":15848670,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848675,"byte_end":15848687,"line_start":22,"line_end":22,"column_start":5,"column_end":17}},{"value":"/ Panics if the pool size is less than one.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848692,"byte_end":15848737,"line_start":23,"line_end":23,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849992,"byte_end":15850004,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"spawn_pinned","qualname":"<LocalPoolHandle>::spawn_pinned","value":"pub fn spawn_pinned<F, Fut>(&Self, F) -> JoinHandle<Fut::Output> where\nF: FnOnce() -> Fut, F: Send + 'static, Fut: Future + 'static,\nFut::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a task onto a worker thread and pin it there so it can't be moved\n off of the thread. Note that the future is not [`Send`], but the\n [`FnOnce`] which creates it is.","sig":null,"attributes":[{"value":"/ Spawn a task onto a worker thread and pin it there so it can't be moved","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849038,"byte_end":15849113,"line_start":36,"line_end":36,"column_start":5,"column_end":80}},{"value":"/ off of the thread. Note that the future is not [`Send`], but the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849118,"byte_end":15849186,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ [`FnOnce`] which creates it is.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849191,"byte_end":15849226,"line_start":38,"line_end":38,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849231,"byte_end":15849234,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849239,"byte_end":15849253,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849258,"byte_end":15849265,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849270,"byte_end":15849290,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/ use tokio_util::task::LocalPoolHandle;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849295,"byte_end":15849337,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849342,"byte_end":15849345,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849350,"byte_end":15849368,"line_start":45,"line_end":45,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849373,"byte_end":15849394,"line_start":46,"line_end":46,"column_start":5,"column_end":26}},{"value":"/     // Create the local pool","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849399,"byte_end":15849431,"line_start":47,"line_end":47,"column_start":5,"column_end":37}},{"value":"/     let pool = LocalPoolHandle::new(1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849436,"byte_end":15849479,"line_start":48,"line_end":48,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849484,"byte_end":15849487,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/     // Spawn a !Send future onto the pool and await it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849492,"byte_end":15849550,"line_start":50,"line_end":50,"column_start":5,"column_end":63}},{"value":"/     let output = pool","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849555,"byte_end":15849580,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/         .spawn_pinned(|| {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849585,"byte_end":15849615,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/             // Rc is !Send + !Sync","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849620,"byte_end":15849658,"line_start":53,"line_end":53,"column_start":5,"column_end":43}},{"value":"/             let local_data = Rc::new(\"test\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849663,"byte_end":15849712,"line_start":54,"line_end":54,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849717,"byte_end":15849720,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/             // This future holds an Rc, so it is !Send","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849725,"byte_end":15849783,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/             async move { local_data.to_string() }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849788,"byte_end":15849841,"line_start":57,"line_end":57,"column_start":5,"column_end":58}},{"value":"/         })","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849846,"byte_end":15849860,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         .await","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849865,"byte_end":15849883,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/         .unwrap();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849888,"byte_end":15849910,"line_start":60,"line_end":60,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849915,"byte_end":15849918,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(output, \"test\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849923,"byte_end":15849958,"line_start":62,"line_end":62,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849963,"byte_end":15849968,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15849973,"byte_end":15849980,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1983},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":2075},{"krate":0,"index":2246},{"krate":0,"index":2249},{"krate":0,"index":2254}],"decl_id":null,"docs":" Additional utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/cfg.rs","byte_start":6703,"byte_end":6727,"line_start":66,"line_end":66,"column_start":13,"column_end":37}},{"value":"/ Additional utilities for tracking time.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859104,"byte_end":15859147,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859148,"byte_end":15859151,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides additional utilities for executing code after a set period","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859152,"byte_end":15859235,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ of time. Currently there is only one:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859236,"byte_end":15859277,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859278,"byte_end":15859281,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859282,"byte_end":15859359,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859360,"byte_end":15859378,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859379,"byte_end":15859382,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type must be used from within the context of the `Runtime`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859383,"byte_end":15859451,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":2035},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/stack.rs","byte_start":15876512,"byte_end":15876517,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/stack.rs","byte_start":15876462,"byte_end":15876502,"line_start":7,"line_end":7,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2036},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/stack.rs","byte_start":15876575,"byte_end":15876583,"line_start":11,"line_end":11,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed: Eq + Hash;","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/stack.rs","byte_start":15876548,"byte_end":15876565,"line_start":10,"line_end":10,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":2037},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/stack.rs","byte_start":15876683,"byte_end":15876688,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/stack.rs","byte_start":15876601,"byte_end":15876673,"line_start":13,"line_end":13,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":2075},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2090},{"krate":0,"index":2093},{"krate":0,"index":2096},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2106},{"krate":0,"index":2109},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2454},{"krate":0,"index":2463},{"krate":0,"index":2264},{"krate":0,"index":2270},{"krate":0,"index":2143},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":2166},{"krate":0,"index":2446},{"krate":0,"index":2451},{"krate":0,"index":2429},{"krate":0,"index":2431},{"krate":0,"index":2433},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2426},{"krate":0,"index":2405},{"krate":0,"index":2409},{"krate":0,"index":2395},{"krate":0,"index":2402},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2218},{"krate":0,"index":2228},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2239}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877123,"byte_end":15877155,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877156,"byte_end":15877159,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877160,"byte_end":15877200,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877201,"byte_end":15877204,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877205,"byte_end":15877242,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2454},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881685,"byte_end":15881695,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877633,"byte_end":15877665,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877666,"byte_end":15877669,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877670,"byte_end":15877747,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877748,"byte_end":15877788,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877789,"byte_end":15877792,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877793,"byte_end":15877804,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877805,"byte_end":15877808,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877809,"byte_end":15877876,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877877,"byte_end":15877957,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15877958,"byte_end":15878036,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878037,"byte_end":15878073,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878074,"byte_end":15878077,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878078,"byte_end":15878148,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878149,"byte_end":15878235,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` is returned indicating that the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878236,"byte_end":15878321,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878322,"byte_end":15878391,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878392,"byte_end":15878395,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878396,"byte_end":15878425,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878426,"byte_end":15878429,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878430,"byte_end":15878520,"line_start":43,"line_end":43,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `Poll::Pending` is returned and the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878521,"byte_end":15878606,"line_start":44,"line_end":44,"column_start":1,"column_end":86}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878607,"byte_end":15878683,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878684,"byte_end":15878696,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878697,"byte_end":15878700,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878701,"byte_end":15878780,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ returns `Poll::Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878781,"byte_end":15878864,"line_start":49,"line_end":49,"column_start":1,"column_end":84}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878865,"byte_end":15878941,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ returning items or `Poll::Pending`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878942,"byte_end":15878981,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878982,"byte_end":15878985,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15878986,"byte_end":15879064,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879065,"byte_end":15879141,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire at the same instant. Also note that delays are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879142,"byte_end":15879223,"line_start":55,"line_end":55,"column_start":1,"column_end":82}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879224,"byte_end":15879263,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879264,"byte_end":15879267,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879268,"byte_end":15879288,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879289,"byte_end":15879292,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of a timer wheel similar to that used internally","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879293,"byte_end":15879397,"line_start":60,"line_end":60,"column_start":1,"column_end":105}},{"value":"/ by Tokio's standalone timer utilities such as [`sleep`]. Because of this, it offers the same","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879398,"byte_end":15879494,"line_start":61,"line_end":61,"column_start":1,"column_end":97}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879495,"byte_end":15879536,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879537,"byte_end":15879540,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879541,"byte_end":15879641,"line_start":64,"line_end":64,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879642,"byte_end":15879707,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879708,"byte_end":15879711,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879712,"byte_end":15879794,"line_start":67,"line_end":67,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879795,"byte_end":15879822,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879823,"byte_end":15879826,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879827,"byte_end":15879838,"line_start":70,"line_end":70,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879839,"byte_end":15879842,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879843,"byte_end":15879890,"line_start":72,"line_end":72,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879891,"byte_end":15879894,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879895,"byte_end":15879913,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ use tokio_util::time::{DelayQueue, delay_queue};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879914,"byte_end":15879966,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879967,"byte_end":15879970,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879971,"byte_end":15879994,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15879995,"byte_end":15880029,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880030,"byte_end":15880065,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880066,"byte_end":15880094,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880095,"byte_end":15880124,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880125,"byte_end":15880151,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880152,"byte_end":15880155,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880156,"byte_end":15880174,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880175,"byte_end":15880237,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880238,"byte_end":15880280,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880281,"byte_end":15880286,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880287,"byte_end":15880290,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880291,"byte_end":15880320,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880321,"byte_end":15880324,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880325,"byte_end":15880341,"line_start":91,"line_end":91,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880342,"byte_end":15880401,"line_start":92,"line_end":92,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880402,"byte_end":15880442,"line_start":93,"line_end":93,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880443,"byte_end":15880511,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880512,"byte_end":15880515,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880516,"byte_end":15880569,"line_start":96,"line_end":96,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880570,"byte_end":15880579,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880580,"byte_end":15880583,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880584,"byte_end":15880641,"line_start":99,"line_end":99,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880642,"byte_end":15880675,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880676,"byte_end":15880713,"line_start":101,"line_end":101,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880714,"byte_end":15880723,"line_start":102,"line_end":102,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880724,"byte_end":15880727,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880728,"byte_end":15880774,"line_start":104,"line_end":104,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880775,"byte_end":15880843,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880844,"byte_end":15880896,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880897,"byte_end":15880910,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880911,"byte_end":15880920,"line_start":108,"line_end":108,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880921,"byte_end":15880924,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<()> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880925,"byte_end":15880993,"line_start":110,"line_end":110,"column_start":1,"column_end":69}},{"value":"/         while let Some(entry) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15880994,"byte_end":15881073,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881074,"byte_end":15881127,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881128,"byte_end":15881141,"line_start":113,"line_end":113,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881142,"byte_end":15881145,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881146,"byte_end":15881173,"line_start":115,"line_end":115,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881174,"byte_end":15881183,"line_start":116,"line_end":116,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881184,"byte_end":15881189,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881190,"byte_end":15881197,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881198,"byte_end":15881201,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881202,"byte_end":15881237,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881238,"byte_end":15881279,"line_start":121,"line_end":121,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881280,"byte_end":15881303,"line_start":122,"line_end":122,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881304,"byte_end":15881380,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881381,"byte_end":15881428,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881429,"byte_end":15881484,"line_start":125,"line_end":125,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881485,"byte_end":15881522,"line_start":126,"line_end":126,"column_start":1,"column_end":38}},{"value":"/ [`sleep`]: fn@tokio::time::sleep","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881523,"byte_end":15881559,"line_start":127,"line_end":127,"column_start":1,"column_end":37}},{"value":"/ [`slab`]: slab","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881560,"byte_end":15881578,"line_start":128,"line_end":128,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881579,"byte_end":15881618,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15881619,"byte_end":15881656,"line_start":130,"line_end":130,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2446},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15889834,"byte_end":15889841,"line_start":374,"line_end":374,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and been removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and been removed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15889611,"byte_end":15889674,"line_start":368,"line_end":368,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15889675,"byte_end":15889678,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15889679,"byte_end":15889735,"line_start":370,"line_end":370,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15889736,"byte_end":15889739,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15889740,"byte_end":15889805,"line_start":372,"line_end":372,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2429},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15890336,"byte_end":15890339,"line_start":393,"line_end":393,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":2430}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15890009,"byte_end":15890055,"line_start":385,"line_end":385,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15890056,"byte_end":15890059,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15890060,"byte_end":15890141,"line_start":387,"line_end":387,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15890142,"byte_end":15890177,"line_start":388,"line_end":388,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15890178,"byte_end":15890181,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15890182,"byte_end":15890219,"line_start":390,"line_end":390,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15890220,"byte_end":15890273,"line_start":391,"line_end":391,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891617,"byte_end":15891620,"line_start":445,"line_end":445,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891311,"byte_end":15891350,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891355,"byte_end":15891358,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891363,"byte_end":15891436,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891441,"byte_end":15891444,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891449,"byte_end":15891463,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891468,"byte_end":15891471,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891476,"byte_end":15891487,"line_start":441,"line_end":441,"column_start":5,"column_end":16}},{"value":"/ # use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891492,"byte_end":15891531,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891536,"byte_end":15891593,"line_start":443,"line_end":443,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891598,"byte_end":15891605,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892515,"byte_end":15892528,"line_start":474,"line_end":474,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891690,"byte_end":15891757,"line_start":449,"line_end":449,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891762,"byte_end":15891765,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891770,"byte_end":15891841,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891846,"byte_end":15891915,"line_start":452,"line_end":452,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891920,"byte_end":15891932,"line_start":453,"line_end":453,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891937,"byte_end":15891940,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891945,"byte_end":15891959,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891964,"byte_end":15891967,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891972,"byte_end":15891983,"line_start":457,"line_end":457,"column_start":5,"column_end":16}},{"value":"/ # use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891988,"byte_end":15892027,"line_start":458,"line_end":458,"column_start":5,"column_end":44}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892032,"byte_end":15892062,"line_start":459,"line_end":459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892067,"byte_end":15892070,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892075,"byte_end":15892095,"line_start":461,"line_end":461,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892100,"byte_end":15892123,"line_start":462,"line_end":462,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892128,"byte_end":15892184,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892189,"byte_end":15892192,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ // These insertions are done without further allocation","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892197,"byte_end":15892256,"line_start":465,"line_end":465,"column_start":5,"column_end":64}},{"value":"/ for i in 0..10 {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892261,"byte_end":15892281,"line_start":466,"line_end":466,"column_start":5,"column_end":25}},{"value":"/     delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892286,"byte_end":15892340,"line_start":467,"line_end":467,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892345,"byte_end":15892350,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892355,"byte_end":15892358,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // This will make the queue allocate additional storage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892363,"byte_end":15892422,"line_start":470,"line_end":470,"column_start":5,"column_end":64}},{"value":"/ delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892427,"byte_end":15892479,"line_start":471,"line_end":471,"column_start":5,"column_end":57}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892484,"byte_end":15892491,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892496,"byte_end":15892503,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894623,"byte_end":15894632,"line_start":534,"line_end":534,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892846,"byte_end":15892919,"line_start":486,"line_end":486,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892924,"byte_end":15892933,"line_start":487,"line_end":487,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892938,"byte_end":15892941,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15892946,"byte_end":15893020,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893025,"byte_end":15893045,"line_start":490,"line_end":490,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893050,"byte_end":15893053,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893058,"byte_end":15893133,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893138,"byte_end":15893216,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893221,"byte_end":15893285,"line_start":494,"line_end":494,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893290,"byte_end":15893293,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used as an argument to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893298,"byte_end":15893373,"line_start":496,"line_end":496,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is a token and is reused once","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893378,"byte_end":15893455,"line_start":497,"line_end":497,"column_start":5,"column_end":82}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893460,"byte_end":15893538,"line_start":498,"line_end":498,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893543,"byte_end":15893616,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893621,"byte_end":15893697,"line_start":500,"line_end":500,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893702,"byte_end":15893736,"line_start":501,"line_end":501,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893741,"byte_end":15893744,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893749,"byte_end":15893801,"line_start":503,"line_end":503,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893806,"byte_end":15893809,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893814,"byte_end":15893826,"line_start":505,"line_end":505,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893831,"byte_end":15893834,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893839,"byte_end":15893899,"line_start":507,"line_end":507,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893904,"byte_end":15893907,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893912,"byte_end":15893926,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893931,"byte_end":15893934,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893939,"byte_end":15893954,"line_start":511,"line_end":511,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893959,"byte_end":15893962,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893967,"byte_end":15893978,"line_start":513,"line_end":513,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15893983,"byte_end":15894024,"line_start":514,"line_end":514,"column_start":5,"column_end":46}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894029,"byte_end":15894066,"line_start":515,"line_end":515,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894071,"byte_end":15894074,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894079,"byte_end":15894099,"line_start":517,"line_end":517,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894104,"byte_end":15894127,"line_start":518,"line_end":518,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894132,"byte_end":15894176,"line_start":519,"line_end":519,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert_at(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894181,"byte_end":15894217,"line_start":520,"line_end":520,"column_start":5,"column_end":41}},{"value":"/     \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894222,"byte_end":15894278,"line_start":521,"line_end":521,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894283,"byte_end":15894286,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894291,"byte_end":15894314,"line_start":523,"line_end":523,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894319,"byte_end":15894359,"line_start":524,"line_end":524,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894364,"byte_end":15894403,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894408,"byte_end":15894415,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894420,"byte_end":15894427,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894432,"byte_end":15894435,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894440,"byte_end":15894487,"line_start":529,"line_end":529,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894492,"byte_end":15894527,"line_start":530,"line_end":530,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894532,"byte_end":15894565,"line_start":531,"line_end":531,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894570,"byte_end":15894593,"line_start":532,"line_end":532,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15894598,"byte_end":15894611,"line_start":533,"line_end":533,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15896101,"byte_end":15896113,"line_start":578,"line_end":578,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context) -> Poll<Option<Expired<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n `None` if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15895891,"byte_end":15895966,"line_start":575,"line_end":575,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15895971,"byte_end":15896047,"line_start":576,"line_end":576,"column_start":5,"column_end":81}},{"value":"/ `None` if the queue is exhausted.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15896052,"byte_end":15896089,"line_start":577,"line_end":577,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898662,"byte_end":15898668,"line_start":652,"line_end":652,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15896803,"byte_end":15896880,"line_start":602,"line_end":602,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15896885,"byte_end":15896897,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15896902,"byte_end":15896905,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15896910,"byte_end":15896979,"line_start":605,"line_end":605,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15896984,"byte_end":15897012,"line_start":606,"line_end":606,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897017,"byte_end":15897020,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `timeout` duration has","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897025,"byte_end":15897088,"line_start":608,"line_end":608,"column_start":5,"column_end":68}},{"value":"/ elapsed after `insert` was called. At that point, `value` will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897093,"byte_end":15897159,"line_start":609,"line_end":609,"column_start":5,"column_end":71}},{"value":"/ be returned from [`poll_expired`]. If `timeout` is a `Duration` of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897164,"byte_end":15897234,"line_start":610,"line_end":610,"column_start":5,"column_end":75}},{"value":"/ zero, then `value` is immediately made available to poll.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897239,"byte_end":15897300,"line_start":611,"line_end":611,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897305,"byte_end":15897308,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used as an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897313,"byte_end":15897376,"line_start":613,"line_end":613,"column_start":5,"column_end":68}},{"value":"/ argument to [`remove`] and [`reset`]. Note that [`Key`] is a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897381,"byte_end":15897445,"line_start":614,"line_end":614,"column_start":5,"column_end":69}},{"value":"/ token and is reused once `value` is removed from the queue","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897450,"byte_end":15897512,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ either by calling [`poll_expired`] after `timeout` has elapsed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897517,"byte_end":15897583,"line_start":616,"line_end":616,"column_start":5,"column_end":71}},{"value":"/ or by calling [`remove`]. At this point, the caller must not","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897588,"byte_end":15897652,"line_start":617,"line_end":617,"column_start":5,"column_end":69}},{"value":"/ use the returned [`Key`] again as it may reference a different","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897657,"byte_end":15897723,"line_start":618,"line_end":618,"column_start":5,"column_end":71}},{"value":"/ item in the queue.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897728,"byte_end":15897750,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897755,"byte_end":15897758,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897763,"byte_end":15897815,"line_start":621,"line_end":621,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897820,"byte_end":15897823,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897828,"byte_end":15897840,"line_start":623,"line_end":623,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897845,"byte_end":15897848,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897853,"byte_end":15897918,"line_start":625,"line_end":625,"column_start":5,"column_end":70}},{"value":"/ duration supported by the timer in the current `Runtime`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897923,"byte_end":15897984,"line_start":626,"line_end":626,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897989,"byte_end":15897992,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15897997,"byte_end":15898011,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898016,"byte_end":15898019,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898024,"byte_end":15898039,"line_start":630,"line_end":630,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898044,"byte_end":15898047,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898052,"byte_end":15898063,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898068,"byte_end":15898105,"line_start":633,"line_end":633,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898110,"byte_end":15898138,"line_start":634,"line_end":634,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898143,"byte_end":15898146,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898151,"byte_end":15898171,"line_start":636,"line_end":636,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898176,"byte_end":15898199,"line_start":637,"line_end":637,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898204,"byte_end":15898248,"line_start":638,"line_end":638,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898253,"byte_end":15898317,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898322,"byte_end":15898325,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898330,"byte_end":15898353,"line_start":641,"line_end":641,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898358,"byte_end":15898398,"line_start":642,"line_end":642,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898403,"byte_end":15898442,"line_start":643,"line_end":643,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898447,"byte_end":15898454,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898459,"byte_end":15898466,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898471,"byte_end":15898474,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898479,"byte_end":15898526,"line_start":647,"line_end":647,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898531,"byte_end":15898566,"line_start":648,"line_end":648,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898571,"byte_end":15898604,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898609,"byte_end":15898632,"line_start":650,"line_end":650,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15898637,"byte_end":15898650,"line_start":651,"line_end":651,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900720,"byte_end":15900726,"line_start":716,"line_end":716,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15899881,"byte_end":15899939,"line_start":688,"line_end":688,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15899944,"byte_end":15899947,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15899952,"byte_end":15900025,"line_start":690,"line_end":690,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900030,"byte_end":15900103,"line_start":691,"line_end":691,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900108,"byte_end":15900125,"line_start":692,"line_end":692,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900130,"byte_end":15900133,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900138,"byte_end":15900150,"line_start":694,"line_end":694,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900155,"byte_end":15900158,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900163,"byte_end":15900226,"line_start":696,"line_end":696,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900231,"byte_end":15900234,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900239,"byte_end":15900253,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900258,"byte_end":15900261,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900266,"byte_end":15900281,"line_start":700,"line_end":700,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900286,"byte_end":15900289,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900294,"byte_end":15900305,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900310,"byte_end":15900347,"line_start":703,"line_end":703,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900352,"byte_end":15900380,"line_start":704,"line_end":704,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900385,"byte_end":15900388,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900393,"byte_end":15900413,"line_start":706,"line_end":706,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900418,"byte_end":15900441,"line_start":707,"line_end":707,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900446,"byte_end":15900490,"line_start":708,"line_end":708,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900495,"byte_end":15900559,"line_start":709,"line_end":709,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900564,"byte_end":15900567,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900572,"byte_end":15900595,"line_start":711,"line_end":711,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900600,"byte_end":15900640,"line_start":712,"line_end":712,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900645,"byte_end":15900684,"line_start":713,"line_end":713,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900689,"byte_end":15900696,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15900701,"byte_end":15900708,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902585,"byte_end":15902593,"line_start":772,"line_end":772,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901460,"byte_end":15901533,"line_start":738,"line_end":738,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901538,"byte_end":15901541,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901546,"byte_end":15901621,"line_start":740,"line_end":740,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901626,"byte_end":15901643,"line_start":741,"line_end":741,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901648,"byte_end":15901651,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901656,"byte_end":15901731,"line_start":743,"line_end":743,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901736,"byte_end":15901812,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901817,"byte_end":15901832,"line_start":745,"line_end":745,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901837,"byte_end":15901840,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901845,"byte_end":15901857,"line_start":747,"line_end":747,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901862,"byte_end":15901865,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901870,"byte_end":15901944,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901949,"byte_end":15901980,"line_start":750,"line_end":750,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901985,"byte_end":15901988,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15901993,"byte_end":15902007,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902012,"byte_end":15902015,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902020,"byte_end":15902035,"line_start":754,"line_end":754,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902040,"byte_end":15902043,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902048,"byte_end":15902059,"line_start":756,"line_end":756,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902064,"byte_end":15902105,"line_start":757,"line_end":757,"column_start":5,"column_end":46}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902110,"byte_end":15902147,"line_start":758,"line_end":758,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902152,"byte_end":15902155,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902160,"byte_end":15902180,"line_start":760,"line_end":760,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902185,"byte_end":15902208,"line_start":761,"line_end":761,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902213,"byte_end":15902257,"line_start":762,"line_end":762,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902262,"byte_end":15902326,"line_start":763,"line_end":763,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902331,"byte_end":15902334,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902339,"byte_end":15902392,"line_start":765,"line_end":765,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902397,"byte_end":15902400,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902405,"byte_end":15902478,"line_start":767,"line_end":767,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902483,"byte_end":15902486,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is now scheduled to be returned in 10 seconds","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902491,"byte_end":15902549,"line_start":769,"line_end":769,"column_start":5,"column_end":63}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902554,"byte_end":15902561,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15902566,"byte_end":15902573,"line_start":771,"line_end":771,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903808,"byte_end":15903821,"line_start":799,"line_end":799,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<DelayQueue<T>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the slab, which `DelayQueue` uses internally for storage allocation.\n This function is not guaranteed to, and in most cases, won't decrease the capacity of the slab\n to the number of elements still contained in it, because elements cannot be moved to a different\n index. To decrease the capacity to the size of the slab use [`compact`].","sig":null,"attributes":[{"value":"/ Shrink the capacity of the slab, which `DelayQueue` uses internally for storage allocation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903191,"byte_end":15903286,"line_start":790,"line_end":790,"column_start":5,"column_end":100}},{"value":"/ This function is not guaranteed to, and in most cases, won't decrease the capacity of the slab","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903291,"byte_end":15903389,"line_start":791,"line_end":791,"column_start":5,"column_end":103}},{"value":"/ to the number of elements still contained in it, because elements cannot be moved to a different","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903394,"byte_end":15903494,"line_start":792,"line_end":792,"column_start":5,"column_end":105}},{"value":"/ index. To decrease the capacity to the size of the slab use [`compact`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903499,"byte_end":15903575,"line_start":793,"line_end":793,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903580,"byte_end":15903583,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ This function can take O(n) time even when the capacity cannot be reduced or the allocation is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903588,"byte_end":15903686,"line_start":795,"line_end":795,"column_start":5,"column_end":103}},{"value":"/ shrunk in place. Repeated calls run in O(1) though.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903691,"byte_end":15903746,"line_start":796,"line_end":796,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903751,"byte_end":15903754,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`compact`]: method@Self::compact","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903759,"byte_end":15903796,"line_start":798,"line_end":798,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904730,"byte_end":15904737,"line_start":830,"line_end":830,"column_start":12,"column_end":19},"name":"compact","qualname":"<DelayQueue<T>>::compact","value":"pub fn compact(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the slab, which `DelayQueue` uses internally for storage allocation,\n to the number of elements that are contained in it.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the slab, which `DelayQueue` uses internally for storage allocation,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903881,"byte_end":15903976,"line_start":803,"line_end":803,"column_start":5,"column_end":100}},{"value":"/ to the number of elements that are contained in it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15903981,"byte_end":15904036,"line_start":804,"line_end":804,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904041,"byte_end":15904044,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This methods runs in O(n).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904049,"byte_end":15904079,"line_start":806,"line_end":806,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904084,"byte_end":15904087,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904092,"byte_end":15904106,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904111,"byte_end":15904114,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904119,"byte_end":15904134,"line_start":810,"line_end":810,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904139,"byte_end":15904142,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904147,"byte_end":15904158,"line_start":812,"line_end":812,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904163,"byte_end":15904200,"line_start":813,"line_end":813,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904205,"byte_end":15904233,"line_start":814,"line_end":814,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904238,"byte_end":15904241,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904246,"byte_end":15904266,"line_start":816,"line_end":816,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904271,"byte_end":15904294,"line_start":817,"line_end":817,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904299,"byte_end":15904355,"line_start":818,"line_end":818,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904360,"byte_end":15904363,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let key1 = delay_queue.insert(5, Duration::from_secs(5));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904368,"byte_end":15904429,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/ let key2 = delay_queue.insert(10, Duration::from_secs(10));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904434,"byte_end":15904497,"line_start":821,"line_end":821,"column_start":5,"column_end":68}},{"value":"/ let key3 = delay_queue.insert(15, Duration::from_secs(15));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904502,"byte_end":15904565,"line_start":822,"line_end":822,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904570,"byte_end":15904573,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ delay_queue.remove(&key2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904578,"byte_end":15904608,"line_start":824,"line_end":824,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904613,"byte_end":15904616,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ delay_queue.compact();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904621,"byte_end":15904647,"line_start":826,"line_end":826,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(delay_queue.capacity(), 2);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904652,"byte_end":15904694,"line_start":827,"line_end":827,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904699,"byte_end":15904706,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15904711,"byte_end":15904718,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906165,"byte_end":15906170,"line_start":876,"line_end":876,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905030,"byte_end":15905098,"line_start":841,"line_end":841,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905103,"byte_end":15905117,"line_start":842,"line_end":842,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905122,"byte_end":15905125,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905130,"byte_end":15905205,"line_start":844,"line_end":844,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905210,"byte_end":15905230,"line_start":845,"line_end":845,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905235,"byte_end":15905238,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905243,"byte_end":15905313,"line_start":847,"line_end":847,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905318,"byte_end":15905388,"line_start":848,"line_end":848,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905393,"byte_end":15905421,"line_start":849,"line_end":849,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905426,"byte_end":15905429,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905434,"byte_end":15905446,"line_start":851,"line_end":851,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905451,"byte_end":15905454,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905459,"byte_end":15905534,"line_start":853,"line_end":853,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905539,"byte_end":15905594,"line_start":854,"line_end":854,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905599,"byte_end":15905602,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905607,"byte_end":15905621,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905626,"byte_end":15905629,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905634,"byte_end":15905649,"line_start":858,"line_end":858,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905654,"byte_end":15905657,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905662,"byte_end":15905673,"line_start":860,"line_end":860,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905678,"byte_end":15905715,"line_start":861,"line_end":861,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905720,"byte_end":15905748,"line_start":862,"line_end":862,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905753,"byte_end":15905756,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905761,"byte_end":15905781,"line_start":864,"line_end":864,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905786,"byte_end":15905809,"line_start":865,"line_end":865,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905814,"byte_end":15905858,"line_start":866,"line_end":866,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905863,"byte_end":15905927,"line_start":867,"line_end":867,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905932,"byte_end":15905935,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905940,"byte_end":15905993,"line_start":869,"line_end":869,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15905998,"byte_end":15906001,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906006,"byte_end":15906059,"line_start":871,"line_end":871,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906064,"byte_end":15906067,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906072,"byte_end":15906129,"line_start":873,"line_end":873,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906134,"byte_end":15906141,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906146,"byte_end":15906153,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907021,"byte_end":15907026,"line_start":907,"line_end":907,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906279,"byte_end":15906320,"line_start":880,"line_end":880,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906325,"byte_end":15906328,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906333,"byte_end":15906407,"line_start":882,"line_end":882,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906412,"byte_end":15906415,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906420,"byte_end":15906486,"line_start":884,"line_end":884,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906491,"byte_end":15906494,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906499,"byte_end":15906546,"line_start":886,"line_end":886,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906551,"byte_end":15906554,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906559,"byte_end":15906573,"line_start":888,"line_end":888,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906578,"byte_end":15906581,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906586,"byte_end":15906597,"line_start":890,"line_end":890,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906602,"byte_end":15906639,"line_start":891,"line_end":891,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906644,"byte_end":15906672,"line_start":892,"line_end":892,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906677,"byte_end":15906680,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906685,"byte_end":15906705,"line_start":894,"line_end":894,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906710,"byte_end":15906733,"line_start":895,"line_end":895,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906738,"byte_end":15906782,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906787,"byte_end":15906790,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906795,"byte_end":15906849,"line_start":898,"line_end":898,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906854,"byte_end":15906857,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ assert!(!delay_queue.is_empty());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906862,"byte_end":15906899,"line_start":900,"line_end":900,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906904,"byte_end":15906907,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ delay_queue.clear();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906912,"byte_end":15906936,"line_start":902,"line_end":902,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906941,"byte_end":15906944,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ assert!(delay_queue.is_empty());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906949,"byte_end":15906985,"line_start":904,"line_end":904,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15906990,"byte_end":15906997,"line_start":905,"line_end":905,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907002,"byte_end":15907009,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907503,"byte_end":15907511,"line_start":924,"line_end":924,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907181,"byte_end":15907256,"line_start":914,"line_end":914,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907261,"byte_end":15907264,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907269,"byte_end":15907283,"line_start":916,"line_end":916,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907288,"byte_end":15907291,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907296,"byte_end":15907307,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907312,"byte_end":15907349,"line_start":919,"line_end":919,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907354,"byte_end":15907357,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907362,"byte_end":15907431,"line_start":921,"line_end":921,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907436,"byte_end":15907479,"line_start":922,"line_end":922,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907484,"byte_end":15907491,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908068,"byte_end":15908071,"line_start":944,"line_end":944,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907570,"byte_end":15907628,"line_start":928,"line_end":928,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907633,"byte_end":15907636,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907641,"byte_end":15907655,"line_start":930,"line_end":930,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907660,"byte_end":15907663,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907668,"byte_end":15907679,"line_start":932,"line_end":932,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907684,"byte_end":15907721,"line_start":933,"line_end":933,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907726,"byte_end":15907754,"line_start":934,"line_end":934,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907759,"byte_end":15907762,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907767,"byte_end":15907787,"line_start":936,"line_end":936,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907792,"byte_end":15907815,"line_start":937,"line_end":937,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907820,"byte_end":15907893,"line_start":938,"line_end":938,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907898,"byte_end":15907935,"line_start":939,"line_end":939,"column_start":5,"column_end":42}},{"value":"/ delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907940,"byte_end":15907990,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15907995,"byte_end":15908032,"line_start":941,"line_end":941,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908037,"byte_end":15908044,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908049,"byte_end":15908056,"line_start":943,"line_end":943,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909269,"byte_end":15909276,"line_start":981,"line_end":981,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908125,"byte_end":15908196,"line_start":948,"line_end":948,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908201,"byte_end":15908224,"line_start":949,"line_end":949,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908229,"byte_end":15908232,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908237,"byte_end":15908312,"line_start":951,"line_end":951,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908317,"byte_end":15908393,"line_start":952,"line_end":952,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908398,"byte_end":15908474,"line_start":953,"line_end":953,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908479,"byte_end":15908555,"line_start":954,"line_end":954,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908560,"byte_end":15908583,"line_start":955,"line_end":955,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908588,"byte_end":15908591,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908596,"byte_end":15908668,"line_start":957,"line_end":957,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908673,"byte_end":15908706,"line_start":958,"line_end":958,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908711,"byte_end":15908714,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908719,"byte_end":15908731,"line_start":960,"line_end":960,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908736,"byte_end":15908739,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908744,"byte_end":15908816,"line_start":962,"line_end":962,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908821,"byte_end":15908843,"line_start":963,"line_end":963,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908848,"byte_end":15908851,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908856,"byte_end":15908870,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908875,"byte_end":15908878,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908883,"byte_end":15908890,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908895,"byte_end":15908932,"line_start":968,"line_end":968,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908937,"byte_end":15908965,"line_start":969,"line_end":969,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908970,"byte_end":15908973,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15908978,"byte_end":15908998,"line_start":971,"line_end":971,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909003,"byte_end":15909026,"line_start":972,"line_end":972,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909031,"byte_end":15909075,"line_start":973,"line_end":973,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909080,"byte_end":15909083,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909088,"byte_end":15909145,"line_start":975,"line_end":975,"column_start":5,"column_end":62}},{"value":"/ delay_queue.reserve(10);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909150,"byte_end":15909178,"line_start":976,"line_end":976,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909183,"byte_end":15909186,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909191,"byte_end":15909233,"line_start":978,"line_end":978,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909238,"byte_end":15909245,"line_start":979,"line_end":979,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909250,"byte_end":15909257,"line_start":980,"line_end":980,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909986,"byte_end":15909994,"line_start":1005,"line_end":1005,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909359,"byte_end":15909413,"line_start":985,"line_end":985,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909418,"byte_end":15909421,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909426,"byte_end":15909500,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `Poll::Pending`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909505,"byte_end":15909566,"line_start":988,"line_end":988,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909571,"byte_end":15909574,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909579,"byte_end":15909593,"line_start":990,"line_end":990,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909598,"byte_end":15909601,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909606,"byte_end":15909613,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909618,"byte_end":15909655,"line_start":993,"line_end":993,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909660,"byte_end":15909688,"line_start":994,"line_end":994,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909693,"byte_end":15909696,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909701,"byte_end":15909721,"line_start":996,"line_end":996,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909726,"byte_end":15909749,"line_start":997,"line_end":997,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909754,"byte_end":15909798,"line_start":998,"line_end":998,"column_start":5,"column_end":49}},{"value":"/ assert!(delay_queue.is_empty());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909803,"byte_end":15909839,"line_start":999,"line_end":999,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909844,"byte_end":15909847,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909852,"byte_end":15909908,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ assert!(!delay_queue.is_empty());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909913,"byte_end":15909950,"line_start":1002,"line_end":1002,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909955,"byte_end":15909962,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15909967,"byte_end":15909974,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914974,"byte_end":15914981,"line_start":1198,"line_end":1198,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914919,"byte_end":15914962,"line_start":1197,"line_end":1197,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15915090,"byte_end":15915097,"line_start":1203,"line_end":1203,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15915027,"byte_end":15915078,"line_start":1202,"line_end":1202,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15915215,"byte_end":15915225,"line_start":1208,"line_end":1208,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15915155,"byte_end":15915203,"line_start":1207,"line_end":1207,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15915336,"byte_end":15915344,"line_start":1213,"line_end":1213,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15915268,"byte_end":15915324,"line_start":1212,"line_end":1212,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15915464,"byte_end":15915467,"line_start":1218,"line_end":1218,"column_start":12,"column_end":15},"name":"key","qualname":"<Expired<T>>::key","value":"pub fn key(&Self) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Returns the key that the expiration is indexed by.\n","sig":null,"attributes":[{"value":"/ Returns the key that the expiration is indexed by.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15915398,"byte_end":15915452,"line_start":1217,"line_end":1217,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":403}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mod.rs","byte_start":6853,"byte_end":6883,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2273},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40808,"byte_end":40817,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":2274}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40631,"byte_end":40695,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40696,"byte_end":40779,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":41080,"byte_end":41086,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40893,"byte_end":40967,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40972,"byte_end":41042,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":41047,"byte_end":41068,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8901,"byte_end":8918,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7679,"byte_end":7756,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7757,"byte_end":7767,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7768,"byte_end":7771,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7772,"byte_end":7837,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7838,"byte_end":7912,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7913,"byte_end":7916,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":7917,"byte_end":8000,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8001,"byte_end":8004,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8005,"byte_end":8019,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8020,"byte_end":8023,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8024,"byte_end":8037,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8038,"byte_end":8060,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8061,"byte_end":8105,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8106,"byte_end":8109,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8128,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8129,"byte_end":8150,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8151,"byte_end":8196,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8197,"byte_end":8238,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8239,"byte_end":8242,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8243,"byte_end":8294,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8295,"byte_end":8358,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8359,"byte_end":8380,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8381,"byte_end":8430,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8431,"byte_end":8477,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8478,"byte_end":8499,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8500,"byte_end":8517,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8518,"byte_end":8599,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8600,"byte_end":8622,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8623,"byte_end":8640,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8641,"byte_end":8654,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8655,"byte_end":8666,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8667,"byte_end":8670,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8671,"byte_end":8704,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8705,"byte_end":8780,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8781,"byte_end":8808,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8809,"byte_end":8820,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8821,"byte_end":8824,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8825,"byte_end":8875,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8876,"byte_end":8881,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":8882,"byte_end":8889,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9338,"byte_end":9363,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9185,"byte_end":9259,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9260,"byte_end":9277,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9278,"byte_end":9326,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11871,"byte_end":11874,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11796,"byte_end":11859,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13931,"byte_end":13942,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12664,"byte_end":12735,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12740,"byte_end":12773,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12778,"byte_end":12781,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12786,"byte_end":12857,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12862,"byte_end":12894,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12899,"byte_end":12902,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12907,"byte_end":12921,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12926,"byte_end":12929,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12934,"byte_end":12947,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12952,"byte_end":12974,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":12979,"byte_end":13023,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13028,"byte_end":13031,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13036,"byte_end":13054,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13059,"byte_end":13080,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13085,"byte_end":13130,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13135,"byte_end":13181,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13186,"byte_end":13189,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13194,"byte_end":13245,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13250,"byte_end":13313,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13318,"byte_end":13339,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13344,"byte_end":13392,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13397,"byte_end":13443,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13448,"byte_end":13469,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13474,"byte_end":13491,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13496,"byte_end":13577,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13582,"byte_end":13604,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13609,"byte_end":13626,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13631,"byte_end":13644,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13660,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13665,"byte_end":13668,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13673,"byte_end":13706,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13711,"byte_end":13786,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13791,"byte_end":13818,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13823,"byte_end":13834,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13839,"byte_end":13842,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13847,"byte_end":13897,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13902,"byte_end":13907,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":13912,"byte_end":13919,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16517,"byte_end":16523,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16328,"byte_end":16400,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16405,"byte_end":16425,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16430,"byte_end":16433,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16438,"byte_end":16505,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16651,"byte_end":16663,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16575,"byte_end":16639,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16814,"byte_end":16823,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":16728,"byte_end":16802,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17225,"byte_end":17235,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17062,"byte_end":17103,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17108,"byte_end":17111,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17116,"byte_end":17188,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17193,"byte_end":17213,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2348},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71140,"byte_end":71153,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71045,"byte_end":71111,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71432,"byte_end":71442,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71201,"byte_end":71239,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71244,"byte_end":71247,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71252,"byte_end":71346,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71351,"byte_end":71420,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2370},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71962,"byte_end":71972,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71824,"byte_end":71881,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71882,"byte_end":71885,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71886,"byte_end":71933,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":72876,"byte_end":72879,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":72833,"byte_end":72864,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73863,"byte_end":73875,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"pub fn poll_reserve(&mut Self, &mut Context)\n-> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73202,"byte_end":73256,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73261,"byte_end":73264,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73269,"byte_end":73354,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73359,"byte_end":73375,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73380,"byte_end":73383,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73388,"byte_end":73482,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73487,"byte_end":73573,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73578,"byte_end":73649,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73654,"byte_end":73729,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73734,"byte_end":73737,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73742,"byte_end":73754,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73759,"byte_end":73762,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":73767,"byte_end":73851,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75880,"byte_end":75889,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"pub fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75420,"byte_end":75453,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75458,"byte_end":75461,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75466,"byte_end":75552,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75557,"byte_end":75592,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75597,"byte_end":75600,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75605,"byte_end":75617,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75622,"byte_end":75625,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75630,"byte_end":75714,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75719,"byte_end":75722,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75727,"byte_end":75739,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75744,"byte_end":75747,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75752,"byte_end":75848,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":75853,"byte_end":75868,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":76908,"byte_end":76917,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":76762,"byte_end":76808,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":76813,"byte_end":76816,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":76821,"byte_end":76896,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77239,"byte_end":77246,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77015,"byte_end":77078,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77083,"byte_end":77086,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77091,"byte_end":77187,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77192,"byte_end":77227,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78044,"byte_end":78049,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77318,"byte_end":77341,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77346,"byte_end":77349,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77354,"byte_end":77448,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77453,"byte_end":77546,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77551,"byte_end":77554,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77559,"byte_end":77653,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77658,"byte_end":77753,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77758,"byte_end":77854,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77859,"byte_end":77914,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77919,"byte_end":77922,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77927,"byte_end":77982,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":77987,"byte_end":78032,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78983,"byte_end":78993,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78687,"byte_end":78735,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78740,"byte_end":78743,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78748,"byte_end":78832,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78837,"byte_end":78932,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":78937,"byte_end":78971,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82211,"byte_end":82224,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82080,"byte_end":82153,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82154,"byte_end":82157,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82158,"byte_end":82199,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82427,"byte_end":82430,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82382,"byte_end":82415,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82594,"byte_end":82599,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82557,"byte_end":82582,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82705,"byte_end":82716,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82651,"byte_end":82693,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82831,"byte_end":82841,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82786,"byte_end":82819,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83575,"byte_end":83587,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82902,"byte_end":82950,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82955,"byte_end":82958,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82963,"byte_end":83004,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83009,"byte_end":83012,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83017,"byte_end":83079,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83084,"byte_end":83144,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83149,"byte_end":83209,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83214,"byte_end":83217,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83222,"byte_end":83297,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83302,"byte_end":83370,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83375,"byte_end":83451,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83456,"byte_end":83524,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":83529,"byte_end":83563,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85015,"byte_end":85032,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84731,"byte_end":84783,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84788,"byte_end":84791,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84796,"byte_end":84872,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84877,"byte_end":84911,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84916,"byte_end":84919,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":84924,"byte_end":85003,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85492,"byte_end":85503,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85105,"byte_end":85147,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85152,"byte_end":85155,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85160,"byte_end":85233,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85238,"byte_end":85278,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85283,"byte_end":85286,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85291,"byte_end":85361,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85366,"byte_end":85400,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85405,"byte_end":85408,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85413,"byte_end":85480,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86651,"byte_end":86668,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86446,"byte_end":86508,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86509,"byte_end":86512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86513,"byte_end":86580,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86581,"byte_end":86639,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86863,"byte_end":86866,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86780,"byte_end":86851,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87331,"byte_end":87334,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87116,"byte_end":87168,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87173,"byte_end":87176,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87181,"byte_end":87253,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87258,"byte_end":87319,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87772,"byte_end":87779,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87531,"byte_end":87583,"line_start":43,"line_end":43,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87588,"byte_end":87591,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87596,"byte_end":87669,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87674,"byte_end":87744,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":87749,"byte_end":87760,"line_start":47,"line_end":47,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":89609,"byte_end":89616,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":89545,"byte_end":89597,"line_start":103,"line_end":103,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":89902,"byte_end":89906,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":89847,"byte_end":89890,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":406},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":2378},{"krate":0,"index":2387},{"krate":0,"index":2391},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":459},{"krate":0,"index":464},{"krate":0,"index":470}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91047,"byte_end":91082,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2381},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93029,"byte_end":93033,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":2378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2384},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93042,"byte_end":93047,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":2378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2378},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93010,"byte_end":93016,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2384}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91259,"byte_end":91365,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91366,"byte_end":91369,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91370,"byte_end":91460,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91461,"byte_end":91464,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91465,"byte_end":91500,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91501,"byte_end":91504,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91505,"byte_end":91518,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91519,"byte_end":91522,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91523,"byte_end":91560,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91561,"byte_end":91564,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91565,"byte_end":91584,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91585,"byte_end":91627,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91628,"byte_end":91678,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91679,"byte_end":91730,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91731,"byte_end":91749,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91750,"byte_end":91771,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91772,"byte_end":91814,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91815,"byte_end":91848,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91849,"byte_end":91865,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91866,"byte_end":91960,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91961,"byte_end":91971,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91972,"byte_end":91975,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":91976,"byte_end":92023,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92024,"byte_end":92029,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92030,"byte_end":92037,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92038,"byte_end":92041,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92242,"byte_end":92245,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92246,"byte_end":92332,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92333,"byte_end":92343,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92344,"byte_end":92347,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92348,"byte_end":92355,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92356,"byte_end":92391,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92392,"byte_end":92434,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92435,"byte_end":92485,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92486,"byte_end":92537,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92538,"byte_end":92541,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92542,"byte_end":92560,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92561,"byte_end":92582,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92583,"byte_end":92625,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92626,"byte_end":92673,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92674,"byte_end":92690,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92691,"byte_end":92740,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92741,"byte_end":92751,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92752,"byte_end":92755,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92756,"byte_end":92789,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92790,"byte_end":92830,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92831,"byte_end":92863,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92864,"byte_end":92869,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92870,"byte_end":92877,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":92878,"byte_end":92900,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":516},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2417,"byte_end":2430,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"pub fn poll_read_buf<T: AsyncRead,\nB: BufMut>(Pin<&mut T>, &mut Context, &mut B) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1188,"byte_end":1273,"line_start":68,"line_end":68,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1278,"byte_end":1281,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1286,"byte_end":1312,"line_start":70,"line_end":70,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1317,"byte_end":1320,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1325,"byte_end":1338,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1343,"byte_end":1346,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1351,"byte_end":1358,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1363,"byte_end":1396,"line_start":75,"line_end":75,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1401,"byte_end":1432,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1437,"byte_end":1463,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1468,"byte_end":1522,"line_start":78,"line_end":78,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1527,"byte_end":1560,"line_start":79,"line_end":79,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1565,"byte_end":1587,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1592,"byte_end":1612,"line_start":81,"line_end":81,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1617,"byte_end":1663,"line_start":82,"line_end":82,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1668,"byte_end":1671,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1676,"byte_end":1754,"line_start":84,"line_end":84,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1759,"byte_end":1772,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1777,"byte_end":1881,"line_start":86,"line_end":86,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1886,"byte_end":1889,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1894,"byte_end":1928,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1933,"byte_end":1955,"line_start":89,"line_end":89,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1968,"byte_end":1978,"line_start":91,"line_end":91,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":1983,"byte_end":2002,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2007,"byte_end":2093,"line_start":93,"line_end":93,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2098,"byte_end":2101,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2106,"byte_end":2125,"line_start":95,"line_end":95,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2130,"byte_end":2148,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2153,"byte_end":2162,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2167,"byte_end":2172,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2177,"byte_end":2180,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2185,"byte_end":2229,"line_start":100,"line_end":100,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2234,"byte_end":2258,"line_start":101,"line_end":101,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2263,"byte_end":2303,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2308,"byte_end":2320,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2325,"byte_end":2332,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":2337,"byte_end":2344,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4718,"byte_end":4732,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"pub fn poll_write_buf<T: AsyncWrite,\nB: Buf>(Pin<&mut T>, &mut Context, &mut B) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3346,"byte_end":3414,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3419,"byte_end":3478,"line_start":138,"line_end":138,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3483,"byte_end":3486,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3491,"byte_end":3568,"line_start":140,"line_end":140,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3573,"byte_end":3593,"line_start":141,"line_end":141,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3598,"byte_end":3601,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3606,"byte_end":3620,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3625,"byte_end":3628,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3633,"byte_end":3704,"line_start":145,"line_end":145,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3709,"byte_end":3721,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3726,"byte_end":3729,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3734,"byte_end":3747,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3752,"byte_end":3791,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3796,"byte_end":3814,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3819,"byte_end":3843,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3848,"byte_end":3851,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3856,"byte_end":3875,"line_start":153,"line_end":153,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3880,"byte_end":3904,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3909,"byte_end":3931,"line_start":155,"line_end":155,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3936,"byte_end":3969,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3974,"byte_end":3977,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":3982,"byte_end":4000,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4005,"byte_end":4044,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4049,"byte_end":4103,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4108,"byte_end":4160,"line_start":161,"line_end":161,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4165,"byte_end":4168,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4173,"byte_end":4243,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4248,"byte_end":4268,"line_start":164,"line_end":164,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4273,"byte_end":4308,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4313,"byte_end":4396,"line_start":166,"line_end":166,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4401,"byte_end":4410,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4415,"byte_end":4418,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4423,"byte_end":4437,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4442,"byte_end":4447,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4452,"byte_end":4459,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4464,"byte_end":4467,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4472,"byte_end":4495,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4500,"byte_end":4541,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4546,"byte_end":4575,"line_start":175,"line_end":175,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":4580,"byte_end":4645,"line_start":176,"line_end":176,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709009,"byte_end":15709019,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709170,"byte_end":15709180,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709507,"byte_end":15709517,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709741,"byte_end":15709751,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15719988,"byte_end":15719997,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15720229,"byte_end":15720239,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15720390,"byte_end":15720399,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15720754,"byte_end":15720764,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721010,"byte_end":15721018,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721115,"byte_end":15721123,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721234,"byte_end":15721242,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721342,"byte_end":15721350,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721460,"byte_end":15721470,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15729757,"byte_end":15729767,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15732602,"byte_end":15732608,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736464,"byte_end":15736470,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742861,"byte_end":15742867,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15743183,"byte_end":15743189,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15743904,"byte_end":15743910,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744950,"byte_end":15744961,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15745888,"byte_end":15745898,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746827,"byte_end":15746837,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749667,"byte_end":15749677,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749990,"byte_end":15750000,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15750726,"byte_end":15750736,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15751715,"byte_end":15751726,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752082,"byte_end":15752093,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15754938,"byte_end":15754949,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15755713,"byte_end":15755724,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15755965,"byte_end":15755976,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771020,"byte_end":15771040,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15774374,"byte_end":15774394,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15775280,"byte_end":15775300,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15776641,"byte_end":15776661,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777223,"byte_end":15777230,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15788005,"byte_end":15788012,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15788138,"byte_end":15788163,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15788321,"byte_end":15788346,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15788481,"byte_end":15788506,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789575,"byte_end":15789585,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15792127,"byte_end":15792137,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15795513,"byte_end":15795523,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15795846,"byte_end":15795856,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796163,"byte_end":15796178,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796460,"byte_end":15796475,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796592,"byte_end":15796607,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15798933,"byte_end":15798950,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801599,"byte_end":15801616,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15804908,"byte_end":15804925,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805289,"byte_end":15805306,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805724,"byte_end":15805746,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15806075,"byte_end":15806097,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15806228,"byte_end":15806250,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15808201,"byte_end":15808210,"line_start":53,"line_end":53,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15808243,"byte_end":15808252,"line_start":55,"line_end":55,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15810037,"byte_end":15810046,"line_start":104,"line_end":104,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15811696,"byte_end":15811705,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/unix/mod.rs","byte_start":15816977,"byte_end":15816989,"line_start":7,"line_end":7,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814999,"byte_end":15815010,"line_start":34,"line_end":34,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15815559,"byte_end":15815576,"line_start":54,"line_end":54,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1521},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15815796,"byte_end":15815802,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818305,"byte_end":15818306,"line_start":33,"line_end":33,"column_start":62,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818778,"byte_end":15818779,"line_start":48,"line_end":48,"column_start":64,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819233,"byte_end":15819234,"line_start":63,"line_end":63,"column_start":59,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819701,"byte_end":15819702,"line_start":78,"line_end":78,"column_start":61,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819739,"byte_end":15819745,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15820359,"byte_end":15820365,"line_start":108,"line_end":108,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15820963,"byte_end":15820969,"line_start":130,"line_end":130,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15821424,"byte_end":15821430,"line_start":149,"line_end":149,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15821849,"byte_end":15821855,"line_start":165,"line_end":165,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15822268,"byte_end":15822274,"line_start":181,"line_end":181,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15822900,"byte_end":15822906,"line_start":202,"line_end":202,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15823549,"byte_end":15823555,"line_start":223,"line_end":223,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15824105,"byte_end":15824111,"line_start":239,"line_end":239,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15825064,"byte_end":15825070,"line_start":263,"line_end":263,"column_start":68,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827478,"byte_end":15827487,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829427,"byte_end":15829439,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15830326,"byte_end":15830338,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833218,"byte_end":15833230,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834468,"byte_end":15834480,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835561,"byte_end":15835573,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15836334,"byte_end":15836346,"line_start":169,"line_end":169,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15837957,"byte_end":15837969,"line_start":12,"line_end":12,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15838763,"byte_end":15838775,"line_start":36,"line_end":36,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839591,"byte_end":15839603,"line_start":60,"line_end":60,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839888,"byte_end":15839900,"line_start":69,"line_end":69,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844411,"byte_end":15844423,"line_start":76,"line_end":76,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846015,"byte_end":15846027,"line_start":131,"line_end":131,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847707,"byte_end":15847714,"line_start":183,"line_end":183,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848509,"byte_end":15848524,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15850270,"byte_end":15850285,"line_start":76,"line_end":76,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15850458,"byte_end":15850467,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1947},{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15855827,"byte_end":15855840,"line_start":215,"line_end":215,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15856115,"byte_end":15856125,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15856414,"byte_end":15856431,"line_start":240,"line_end":240,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1972},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/level.rs","byte_start":15870538,"byte_end":15870543,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/level.rs","byte_start":15875294,"byte_end":15875299,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/mod.rs","byte_start":15861769,"byte_end":15861774,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15883190,"byte_end":15883201,"line_start":177,"line_end":177,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15888553,"byte_end":15888564,"line_start":328,"line_end":328,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15888966,"byte_end":15888977,"line_start":344,"line_end":344,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15889310,"byte_end":15889321,"line_start":357,"line_end":357,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891291,"byte_end":15891301,"line_start":434,"line_end":434,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2187},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2208}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15911632,"byte_end":15911642,"line_start":1060,"line_end":1060,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15911670,"byte_end":15911680,"line_start":1062,"line_end":1062,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15911790,"byte_end":15911800,"line_start":1068,"line_end":1068,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15912167,"byte_end":15912172,"line_start":1078,"line_end":1078,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914342,"byte_end":15914347,"line_start":1163,"line_end":1163,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914477,"byte_end":15914480,"line_start":1172,"line_end":1172,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914564,"byte_end":15914575,"line_start":1178,"line_end":1178,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914689,"byte_end":15914700,"line_start":1184,"line_end":1184,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914809,"byte_end":15914812,"line_start":1190,"line_end":1190,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914902,"byte_end":15914909,"line_start":1196,"line_end":1196,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40877,"byte_end":40886,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":41246,"byte_end":41255,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9121,"byte_end":9138,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9163,"byte_end":9180,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9914,"byte_end":9939,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10013,"byte_end":10030,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10255,"byte_end":10272,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10678,"byte_end":10695,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11665,"byte_end":11682,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11772,"byte_end":11789,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42136,"byte_end":42144,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42394,"byte_end":42402,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42507,"byte_end":42515,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42824,"byte_end":42834,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71178,"byte_end":71191,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71513,"byte_end":71526,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71686,"byte_end":71699,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":72813,"byte_end":72823,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":80464,"byte_end":80474,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":81204,"byte_end":81214,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82362,"byte_end":82375,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85587,"byte_end":85600,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85814,"byte_end":85827,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85945,"byte_end":85958,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":86170,"byte_end":86183,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86749,"byte_end":86766,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90013,"byte_end":90030,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90328,"byte_end":90345,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90567,"byte_end":90584,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90684,"byte_end":90701,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90730,"byte_end":90747,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90895,"byte_end":90912,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93653,"byte_end":93659,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93902,"byte_end":93908,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94181,"byte_end":94187,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94515,"byte_end":94521,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94875,"byte_end":94881,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":95433,"byte_end":95439,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":525}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/mod.rs","byte_start":15707421,"byte_end":15707437,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":983}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":680,"byte_end":683,"line_start":32,"line_end":32,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1372}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":697,"byte_end":700,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1468}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814224,"byte_end":15814228,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1488}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":731,"byte_end":737,"line_start":37,"line_end":37,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":1553}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":764,"byte_end":766,"line_start":41,"line_end":41,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1633}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":793,"byte_end":800,"line_start":45,"line_end":45,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":1838}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":814,"byte_end":818,"line_start":46,"line_end":46,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1878}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":847,"byte_end":851,"line_start":50,"line_end":50,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1983}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/mod.rs","byte_start":15859499,"byte_end":15859510,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":2075}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":406}}],"macro_refs":[],"relations":[{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709009,"byte_end":15709019,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709170,"byte_end":15709180,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1232},"to":{"krate":0,"index":578}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709507,"byte_end":15709517,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1232},"to":{"krate":0,"index":595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/bytes_codec.rs","byte_start":15709741,"byte_end":15709751,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1232},"to":{"krate":0,"index":595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15719988,"byte_end":15719997,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15720229,"byte_end":15720239,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15720390,"byte_end":15720399,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15720754,"byte_end":15720764,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721010,"byte_end":15721018,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721115,"byte_end":15721123,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721234,"byte_end":15721242,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721342,"byte_end":15721350,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1263},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15721460,"byte_end":15721470,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2949},"to":{"krate":39,"index":96}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_impl.rs","byte_start":15729757,"byte_end":15729767,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2949},"to":{"krate":20,"index":17}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15732602,"byte_end":15732608,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15736464,"byte_end":15736470,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15742861,"byte_end":15742867,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2737},"to":{"krate":39,"index":96}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15743183,"byte_end":15743189,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2737},"to":{"krate":20,"index":17}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15743904,"byte_end":15743910,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2737},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed.rs","byte_start":15744950,"byte_end":15744961,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15745888,"byte_end":15745898,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15746827,"byte_end":15746837,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749667,"byte_end":15749677,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2696},"to":{"krate":39,"index":96}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15749990,"byte_end":15750000,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2696},"to":{"krate":20,"index":17}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_read.rs","byte_start":15750726,"byte_end":15750736,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2696},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15751715,"byte_end":15751726,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15752082,"byte_end":15752093,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15754938,"byte_end":15754949,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2655},"to":{"krate":20,"index":17}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15755713,"byte_end":15755724,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2655},"to":{"krate":39,"index":96}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/framed_write.rs","byte_start":15755965,"byte_end":15755976,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2655},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15771020,"byte_end":15771040,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15774374,"byte_end":15774394,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1292},"to":{"krate":0,"index":578}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15775280,"byte_end":15775300,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1292},"to":{"krate":0,"index":595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15776641,"byte_end":15776661,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1292},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15777223,"byte_end":15777230,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15788005,"byte_end":15788012,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1280},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15788138,"byte_end":15788163,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15788321,"byte_end":15788346,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/length_delimited.rs","byte_start":15788481,"byte_end":15788506,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15789575,"byte_end":15789585,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15792127,"byte_end":15792137,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1310},"to":{"krate":0,"index":578}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15795513,"byte_end":15795523,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1310},"to":{"krate":0,"index":595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15795846,"byte_end":15795856,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1310},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796163,"byte_end":15796178,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796460,"byte_end":15796475,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/lines_codec.rs","byte_start":15796592,"byte_end":15796607,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1332},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15798933,"byte_end":15798950,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15801599,"byte_end":15801616,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1340},"to":{"krate":0,"index":578}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15804908,"byte_end":15804925,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1340},"to":{"krate":0,"index":595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805289,"byte_end":15805306,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1340},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15805724,"byte_end":15805746,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15806075,"byte_end":15806097,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/codec/any_delimiter_codec.rs","byte_start":15806228,"byte_end":15806250,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1364},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15808201,"byte_end":15808210,"line_start":53,"line_end":53,"column_start":22,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1530},"to":{"krate":2,"index":3065}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15808243,"byte_end":15808252,"line_start":55,"line_end":55,"column_start":23,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1530},"to":{"krate":39,"index":96}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15810037,"byte_end":15810046,"line_start":104,"line_end":104,"column_start":41,"column_end":50},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1530},"to":{"krate":20,"index":17}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/udp/frame.rs","byte_start":15811696,"byte_end":15811705,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/unix/mod.rs","byte_start":15816977,"byte_end":15816989,"line_start":7,"line_end":7,"column_start":31,"column_end":43},"kind":{"Impl":{"id":62}},"from":{"krate":21,"index":7096},"to":{"krate":0,"index":1507}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15814999,"byte_end":15815010,"line_start":34,"line_end":34,"column_start":31,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":21,"index":6380},"to":{"krate":0,"index":1507}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15815559,"byte_end":15815576,"line_start":54,"line_end":54,"column_start":24,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1545},"to":{"krate":2,"index":12960}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/net/mod.rs","byte_start":15815796,"byte_end":15815802,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818029,"byte_end":15818038,"line_start":22,"line_end":22,"column_start":50,"column_end":59},"kind":"SuperTrait","from":{"krate":51,"index":39},"to":{"krate":0,"index":1573}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818305,"byte_end":15818306,"line_start":33,"line_end":33,"column_start":62,"column_end":63},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1576},"to":{"krate":0,"index":1573}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818491,"byte_end":15818501,"line_start":37,"line_end":37,"column_start":51,"column_end":61},"kind":"SuperTrait","from":{"krate":51,"index":42},"to":{"krate":0,"index":1577}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818778,"byte_end":15818779,"line_start":48,"line_end":48,"column_start":64,"column_end":65},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1580},"to":{"krate":0,"index":1577}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15818958,"byte_end":15818967,"line_start":52,"line_end":52,"column_start":47,"column_end":56},"kind":"SuperTrait","from":{"krate":21,"index":229},"to":{"krate":0,"index":1581}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819233,"byte_end":15819234,"line_start":63,"line_end":63,"column_start":59,"column_end":60},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1584},"to":{"krate":0,"index":1581}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819416,"byte_end":15819426,"line_start":67,"line_end":67,"column_start":48,"column_end":58},"kind":"SuperTrait","from":{"krate":21,"index":308},"to":{"krate":0,"index":1585}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819701,"byte_end":15819702,"line_start":78,"line_end":78,"column_start":61,"column_end":62},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1588},"to":{"krate":0,"index":1585}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15819739,"byte_end":15819745,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15820359,"byte_end":15820365,"line_start":108,"line_end":108,"column_start":34,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2610},"to":{"krate":21,"index":229}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15820963,"byte_end":15820969,"line_start":130,"line_end":130,"column_start":35,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2610},"to":{"krate":51,"index":39}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15821424,"byte_end":15821430,"line_start":149,"line_end":149,"column_start":37,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2610},"to":{"krate":21,"index":187}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15821849,"byte_end":15821855,"line_start":165,"line_end":165,"column_start":38,"column_end":44},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2610},"to":{"krate":51,"index":49}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15822268,"byte_end":15822274,"line_start":181,"line_end":181,"column_start":35,"column_end":41},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2610},"to":{"krate":21,"index":308}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15822900,"byte_end":15822906,"line_start":202,"line_end":202,"column_start":36,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2610},"to":{"krate":51,"index":42}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15823549,"byte_end":15823555,"line_start":223,"line_end":223,"column_start":57,"column_end":63},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2610},"to":{"krate":51,"index":47}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15824105,"byte_end":15824111,"line_start":239,"line_end":239,"column_start":57,"column_end":63},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2610},"to":{"krate":21,"index":268}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/compat.rs","byte_start":15825064,"byte_end":15825070,"line_start":263,"line_end":263,"column_start":68,"column_end":74},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2610},"to":{"krate":1,"index":6873}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/read_buf.rs","byte_start":15827478,"byte_end":15827487,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1662},"to":{"krate":2,"index":12960}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15829427,"byte_end":15829439,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/reader_stream.rs","byte_start":15830326,"byte_end":15830338,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2566},"to":{"krate":39,"index":96}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15833218,"byte_end":15833230,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15834468,"byte_end":15834480,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15835561,"byte_end":15835573,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2517},"to":{"krate":21,"index":229}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/stream_reader.rs","byte_start":15836334,"byte_end":15836346,"line_start":169,"line_end":169,"column_start":32,"column_end":44},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2517},"to":{"krate":21,"index":187}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15837957,"byte_end":15837969,"line_start":12,"line_end":12,"column_start":37,"column_end":49},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1831},"to":{"krate":1,"index":4631}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15838763,"byte_end":15838775,"line_start":36,"line_end":36,"column_start":39,"column_end":51},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1831},"to":{"krate":1,"index":4688}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839591,"byte_end":15839603,"line_start":60,"line_end":60,"column_start":21,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/io/sync_bridge.rs","byte_start":15839888,"byte_end":15839900,"line_start":69,"line_end":69,"column_start":16,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15844411,"byte_end":15844423,"line_start":76,"line_end":76,"column_start":9,"column_end":21},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15846015,"byte_end":15846027,"line_start":131,"line_end":131,"column_start":28,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2480},"to":{"krate":2,"index":12960}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/context.rs","byte_start":15847707,"byte_end":15847714,"line_start":183,"line_end":183,"column_start":21,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":21,"index":10293},"to":{"krate":0,"index":1872}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15848509,"byte_end":15848524,"line_start":18,"line_end":18,"column_start":6,"column_end":21},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15850270,"byte_end":15850285,"line_start":76,"line_end":76,"column_start":16,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1979},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15850458,"byte_end":15850467,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15855827,"byte_end":15855840,"line_start":215,"line_end":215,"column_start":15,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1956},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15856115,"byte_end":15856125,"line_start":226,"line_end":226,"column_start":15,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1961},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/task/spawn_pinned.rs","byte_start":15856414,"byte_end":15856431,"line_start":240,"line_end":240,"column_start":6,"column_end":23},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/level.rs","byte_start":15870538,"byte_end":15870543,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/level.rs","byte_start":15875294,"byte_end":15875299,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1995},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/stack.rs","byte_start":15876448,"byte_end":15876455,"line_start":6,"line_end":6,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3002},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/wheel/mod.rs","byte_start":15861769,"byte_end":15861774,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15883190,"byte_end":15883201,"line_start":177,"line_end":177,"column_start":9,"column_end":20},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15888553,"byte_end":15888564,"line_start":328,"line_end":328,"column_start":24,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2264},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15888966,"byte_end":15888977,"line_start":344,"line_end":344,"column_start":24,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2264},"to":{"krate":2,"index":3327}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15889310,"byte_end":15889321,"line_start":357,"line_end":357,"column_start":27,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2264},"to":{"krate":2,"index":3331}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15891291,"byte_end":15891301,"line_start":434,"line_end":434,"column_start":9,"column_end":19},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15911632,"byte_end":15911642,"line_start":1060,"line_end":1060,"column_start":19,"column_end":29},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2454},"to":{"krate":2,"index":3065}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15911670,"byte_end":15911680,"line_start":1062,"line_end":1062,"column_start":21,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2454},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15911790,"byte_end":15911800,"line_start":1068,"line_end":1068,"column_start":34,"column_end":44},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2454},"to":{"krate":39,"index":96}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15912167,"byte_end":15912172,"line_start":1078,"line_end":1078,"column_start":26,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2405},"to":{"krate":0,"index":2034}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914342,"byte_end":15914347,"line_start":1163,"line_end":1163,"column_start":21,"column_end":26},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2405},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914477,"byte_end":15914480,"line_start":1172,"line_end":1172,"column_start":6,"column_end":9},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914564,"byte_end":15914575,"line_start":1178,"line_end":1178,"column_start":6,"column_end":17},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914689,"byte_end":15914700,"line_start":1184,"line_end":1184,"column_start":20,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2412},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914809,"byte_end":15914812,"line_start":1190,"line_end":1190,"column_start":28,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2429},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/time/delay_queue.rs","byte_start":15914902,"byte_end":15914909,"line_start":1196,"line_end":1196,"column_start":9,"column_end":16},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":40877,"byte_end":40886,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token/guard.rs","byte_start":41246,"byte_end":41255,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9121,"byte_end":9138,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9163,"byte_end":9180,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":9914,"byte_end":9939,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10013,"byte_end":10030,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10255,"byte_end":10272,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":10678,"byte_end":10695,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11665,"byte_end":11682,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":11772,"byte_end":11789,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12960}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42136,"byte_end":42144,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42394,"byte_end":42402,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2332},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42507,"byte_end":42515,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2332},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/intrusive_double_linked_list.rs","byte_start":42824,"byte_end":42834,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71178,"byte_end":71191,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71513,"byte_end":71526,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2348},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":71686,"byte_end":71699,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2348},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":72813,"byte_end":72823,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":80464,"byte_end":80474,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2370},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/mpsc.rs","byte_start":81204,"byte_end":81214,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2370},"to":{"krate":20,"index":17}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":82362,"byte_end":82375,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85587,"byte_end":85600,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":312},"to":{"krate":39,"index":96}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85814,"byte_end":85827,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":85945,"byte_end":85958,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/poll_semaphore.rs","byte_start":86170,"byte_end":86183,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":86749,"byte_end":86766,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90013,"byte_end":90030,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":12960}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90328,"byte_end":90345,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90567,"byte_end":90584,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90684,"byte_end":90701,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3065}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90730,"byte_end":90747,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/sync/reusable_box.rs","byte_start":90895,"byte_end":90912,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93653,"byte_end":93659,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2378},"to":{"krate":2,"index":12960}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":93902,"byte_end":93908,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2378},"to":{"krate":21,"index":229}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94181,"byte_end":94187,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2378},"to":{"krate":21,"index":187}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94515,"byte_end":94521,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2378},"to":{"krate":21,"index":268}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":94875,"byte_end":94881,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2378},"to":{"krate":21,"index":308}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.1/src/either.rs","byte_start":95433,"byte_end":95439,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2378},"to":{"krate":39,"index":96}}]}