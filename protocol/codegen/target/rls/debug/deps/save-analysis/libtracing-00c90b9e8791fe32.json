{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34","program":"/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tracing","--edition=2018","/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"attributes\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","--cfg","feature=\"tracing-attributes\"","-C","metadata=00c90b9e8791fe32","-C","extra-filename=-00c90b9e8791fe32","--out-dir","/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps","-L","dependency=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps","--extern","cfg_if=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libcfg_if-2c7724008976718a.rmeta","--extern","pin_project_lite=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libpin_project_lite-69dd9282975eb716.rmeta","--extern","tracing_attributes=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libtracing_attributes-21aa47563dac633d.so","--extern","tracing_core=/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libtracing_core-7625f92b7c6be0a6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/root/.rustup/toolchains/1.60.0-x86_64-unknown-linux-gnu"],"output":"/root/workspaces/rust/pro/pisanix/pisa-proxy/protocol/codegen/target/rls/debug/deps/libtracing-00c90b9e8791fe32.rmeta"},"prelude":{"crate_id":{"name":"tracing","disambiguator":[9984350553261166457,0]},"crate_root":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src","external_crates":[{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":20,"id":{"name":"tracing_core","disambiguator":[8917541232757275604,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[5557959000602466733,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":22,"id":{"name":"spin","disambiguator":[16689960791893565133,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","num":23,"id":{"name":"tracing_attributes","disambiguator":[4773445387274463337,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[10211589522042018038,0]}},{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","num":25,"id":{"name":"cfg_if","disambiguator":[3771446270907224645,0]}}],"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":0,"byte_end":47206,"line_start":1,"line_end":1183,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":150},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":38831,"byte_end":38841,"line_start":936,"line_end":936,"column_start":27,"column_end":37},"alias_span":null,"name":"Instrument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":827},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":38870,"byte_end":38878,"line_start":937,"line_end":937,"column_start":28,"column_end":36},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":844},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":38887,"byte_end":38892,"line_start":937,"line_end":937,"column_start":45,"column_end":50},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":292},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":38901,"byte_end":38906,"line_start":937,"line_end":937,"column_start":59,"column_end":64},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":709},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":38920,"byte_end":38930,"line_start":937,"line_end":937,"column_start":78,"column_end":88},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1184},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":38969,"byte_end":38971,"line_start":940,"line_end":940,"column_start":21,"column_end":23},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":11},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39017,"byte_end":39025,"line_start":944,"line_end":944,"column_start":5,"column_end":13},"alias_span":null,"name":"callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":56},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39034,"byte_end":39042,"line_start":944,"line_end":944,"column_start":22,"column_end":30},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":459},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39049,"byte_end":39057,"line_start":945,"line_end":945,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":4},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39049,"byte_end":39057,"line_start":945,"line_end":945,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":220},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39085,"byte_end":39090,"line_start":947,"line_end":947,"column_start":24,"column_end":29},"alias_span":null,"name":"event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1099},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39092,"byte_end":39097,"line_start":947,"line_end":947,"column_start":31,"column_end":36},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":484},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39099,"byte_end":39107,"line_start":947,"line_end":947,"column_start":38,"column_end":46},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39146,"byte_end":39150,"line_start":950,"line_end":950,"column_start":21,"column_end":25},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":301},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39280,"byte_end":39290,"line_start":954,"line_end":954,"column_start":29,"column_end":39},"alias_span":null,"name":"instrument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":151},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":129013,"byte_end":129024,"line_start":132,"line_end":132,"column_start":35,"column_end":46},"alias_span":null,"name":"set_default","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":20,"index":148},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":129131,"byte_end":129143,"line_start":135,"line_end":135,"column_start":35,"column_end":47},"alias_span":null,"name":"with_default","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":20,"index":835},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":129250,"byte_end":129262,"line_start":138,"line_end":138,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":20,"index":157},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":129304,"byte_end":129315,"line_start":140,"line_end":140,"column_start":5,"column_end":16},"alias_span":null,"name":"get_default","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":20,"index":152},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":129317,"byte_end":129335,"line_start":140,"line_end":140,"column_start":18,"column_end":36},"alias_span":null,"name":"set_global_default","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":20,"index":827},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":129337,"byte_end":129345,"line_start":140,"line_end":140,"column_start":38,"column_end":46},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":20,"index":840},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":129347,"byte_end":129368,"line_start":140,"line_end":140,"column_start":48,"column_end":69},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":74}},{"kind":"Use","ref_id":{"krate":20,"index":153},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":129676,"byte_end":129688,"line_start":149,"line_end":149,"column_start":35,"column_end":47},"alias_span":null,"name":"has_been_set","value":"","parent":{"krate":0,"index":74}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134853,"byte_end":134854,"line_start":114,"line_end":114,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"ValueSet, Field, Value","parent":{"krate":0,"index":100}},{"kind":"Use","ref_id":{"krate":20,"index":1133},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150465,"byte_end":150486,"line_start":53,"line_end":53,"column_start":34,"column_end":55},"alias_span":null,"name":"ParseLevelFilterError","value":"","parent":{"krate":0,"index":187}},{"kind":"Use","ref_id":{"krate":20,"index":1117},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150488,"byte_end":150499,"line_start":53,"line_end":53,"column_start":57,"column_end":68},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":187}},{"kind":"Use","ref_id":{"krate":20,"index":1201},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165789,"byte_end":165799,"line_start":320,"line_end":320,"column_start":30,"column_end":40},"alias_span":null,"name":"Attributes","value":"","parent":{"krate":0,"index":196}},{"kind":"Use","ref_id":{"krate":20,"index":1184},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165801,"byte_end":165803,"line_start":320,"line_end":320,"column_start":42,"column_end":44},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":196}},{"kind":"Use","ref_id":{"krate":20,"index":1209},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165805,"byte_end":165811,"line_start":320,"line_end":320,"column_start":46,"column_end":52},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":196}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211505,"byte_end":211506,"line_start":2,"line_end":2,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"Interest, Subscriber","parent":{"krate":0,"index":342}},{"kind":"Use","ref_id":{"krate":20,"index":835},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211614,"byte_end":211626,"line_start":6,"line_end":6,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":342}},{"kind":"Use","ref_id":{"krate":20,"index":840},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":214017,"byte_end":214038,"line_start":68,"line_end":68,"column_start":35,"column_end":56},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":342}},{"kind":"Use","ref_id":{"krate":20,"index":56},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39571,"byte_end":39579,"line_start":970,"line_end":970,"column_start":30,"column_end":38},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":358}},{"kind":"Use","ref_id":{"krate":2,"index":28},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39740,"byte_end":39746,"line_start":976,"line_end":976,"column_start":19,"column_end":25},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":358}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":0,"byte_end":47206,"line_start":1,"line_end":1183,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":74},{"krate":0,"index":100},{"krate":0,"index":118},{"krate":0,"index":187},{"krate":0,"index":196},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":358},{"krate":0,"index":403}],"decl_id":null,"docs":" A scoped, structured logging and diagnostics system.","sig":null,"attributes":[{"value":"/ A scoped, structured logging and diagnostics system.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":0,"byte_end":56,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":57,"byte_end":60,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":61,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":76,"byte_end":79,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `tracing` is a framework for instrumenting Rust programs to collect","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":80,"byte_end":151,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ structured, event-based diagnostic information.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":152,"byte_end":203,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":204,"byte_end":207,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ In asynchronous systems like Tokio, interpreting traditional log messages can","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":208,"byte_end":289,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ often be quite challenging. Since individual tasks are multiplexed on the same","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":290,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ thread, associated events and log lines are intermixed making it difficult to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":373,"byte_end":454,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ trace the logic flow. `tracing` expands upon logging-style diagnostics by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":455,"byte_end":532,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ allowing libraries and applications to record structured events with additional","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":533,"byte_end":616,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/ information about *temporality* and *causality* — unlike a log message, a span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":617,"byte_end":701,"line_start":13,"line_end":13,"column_start":1,"column_end":83}},{"value":"/ in `tracing` has a beginning and end time, may be entered and exited by the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":702,"byte_end":781,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ flow of execution, and may exist within a nested tree of similar spans. In","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":782,"byte_end":860,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ addition, `tracing` spans are *structured*, with the ability to record typed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":861,"byte_end":941,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ data as well as textual messages.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":942,"byte_end":979,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":980,"byte_end":983,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `tracing` crate provides the APIs necessary for instrumenting libraries","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":984,"byte_end":1063,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and applications to emit trace data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1064,"byte_end":1104,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.49+][msrv]*","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1109,"byte_end":1163,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1164,"byte_end":1167,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1168,"byte_end":1204,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ # Core Concepts","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1205,"byte_end":1224,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1225,"byte_end":1228,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The core of `tracing`'s API is composed of _spans_, _events_ and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1229,"byte_end":1297,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ _subscribers_. We'll cover these in turn.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1298,"byte_end":1343,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1344,"byte_end":1347,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1348,"byte_end":1360,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1361,"byte_end":1364,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To record the flow of execution through a program, `tracing` introduces the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1365,"byte_end":1444,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ concept of [spans]. Unlike a log line that represents a _moment in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1445,"byte_end":1515,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ time_, a span represents a _period of time_ with a beginning and an end. When a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1516,"byte_end":1599,"line_start":34,"line_end":34,"column_start":1,"column_end":84}},{"value":"/ program begins executing in a context or performing a unit of work, it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1600,"byte_end":1674,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ _enters_ that context's span, and when it stops executing in that context,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1675,"byte_end":1753,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ it _exits_ the span. The span in which a thread is currently executing is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1754,"byte_end":1831,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ referred to as that thread's _current_ span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1832,"byte_end":1880,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1881,"byte_end":1884,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1885,"byte_end":1901,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1902,"byte_end":1909,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1910,"byte_end":1941,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1942,"byte_end":1959,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":1960,"byte_end":2006,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ // `enter` returns a RAII guard which, when dropped, exits the span. this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2007,"byte_end":2084,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ // indicates that we are in the span for the current lexical scope.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2085,"byte_end":2156,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2157,"byte_end":2187,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ // perform some work in the context of `my_span`...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2188,"byte_end":2243,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2244,"byte_end":2251,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2252,"byte_end":2258,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2259,"byte_end":2262,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The [`span` module][span]'s documentation provides further details on how to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2263,"byte_end":2343,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ use spans.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2344,"byte_end":2358,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2359,"byte_end":2362,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2363,"byte_end":2489,"line_start":55,"line_end":55,"column_start":1,"column_end":127}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/  **Warning**: In asynchronous code that uses async/await syntax,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2494,"byte_end":2562,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/  `Span::enter` may produce incorrect traces if the returned drop","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2563,"byte_end":2631,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/  guard is held across an await point. See","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2632,"byte_end":2677,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/  [the method documentation][Span#in-asynchronous-code] for details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2678,"byte_end":2749,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2750,"byte_end":2753,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ </pre></div>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2754,"byte_end":2770,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2771,"byte_end":2774,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Events","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2775,"byte_end":2788,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2789,"byte_end":2792,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ An [`Event`] represents a _moment_ in time. It signifies something that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2793,"byte_end":2868,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ happened while a trace was being recorded. `Event`s are comparable to the log","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2869,"byte_end":2950,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/ records emitted by unstructured logging code, but unlike a typical log line,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":2951,"byte_end":3031,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ an `Event` may occur within the context of a span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3032,"byte_end":3086,"line_start":69,"line_end":69,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3087,"byte_end":3090,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3091,"byte_end":3107,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3108,"byte_end":3115,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ use tracing::{event, span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3116,"byte_end":3154,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3155,"byte_end":3158,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3159,"byte_end":3176,"line_start":75,"line_end":75,"column_start":1,"column_end":18}},{"value":"/ // records an event outside of any span context:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3177,"byte_end":3229,"line_start":76,"line_end":76,"column_start":1,"column_end":53}},{"value":"/ event!(Level::INFO, \"something happened\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3230,"byte_end":3276,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3277,"byte_end":3280,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3281,"byte_end":3326,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/ let _guard = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3327,"byte_end":3357,"line_start":80,"line_end":80,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3358,"byte_end":3361,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // records an event within \"my_span\".","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3362,"byte_end":3403,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/ event!(Level::DEBUG, \"something happened inside my_span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3404,"byte_end":3466,"line_start":83,"line_end":83,"column_start":1,"column_end":63}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3467,"byte_end":3474,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3475,"byte_end":3481,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3482,"byte_end":3485,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ In general, events should be used to represent points in time _within_ a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3486,"byte_end":3562,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ span — a request returned with a given status code, _n_ new items were","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3563,"byte_end":3639,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ taken from a queue, and so on.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3640,"byte_end":3674,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3675,"byte_end":3678,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The [`Event` struct][`Event`] documentation provides further details on using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3679,"byte_end":3760,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"/ events.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3761,"byte_end":3772,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3773,"byte_end":3776,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Subscribers","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3777,"byte_end":3795,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3796,"byte_end":3799,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ As `Span`s and `Event`s occur, they are recorded or aggregated by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3800,"byte_end":3869,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/ implementations of the [`Subscriber`] trait. `Subscriber`s are notified","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3870,"byte_end":3945,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/ when an `Event` takes place and when a `Span` is entered or exited. These","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":3946,"byte_end":4023,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ notifications are represented by the following `Subscriber` trait methods:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4024,"byte_end":4102,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4103,"byte_end":4106,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ + [`event`][Subscriber::event], called when an `Event` takes place,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4107,"byte_end":4178,"line_start":101,"line_end":101,"column_start":1,"column_end":72}},{"value":"/ + [`enter`], called when execution enters a `Span`,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4179,"byte_end":4234,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"/ + [`exit`], called when execution exits a `Span`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4235,"byte_end":4287,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4288,"byte_end":4291,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ In addition, subscribers may implement the [`enabled`] function to _filter_","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4292,"byte_end":4371,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ the notifications they receive based on [metadata] describing each `Span`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4372,"byte_end":4449,"line_start":106,"line_end":106,"column_start":1,"column_end":78}},{"value":"/ or `Event`. If a call to `Subscriber::enabled` returns `false` for a given","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4450,"byte_end":4528,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ set of metadata, that `Subscriber` will *not* be notified about the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4529,"byte_end":4600,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ corresponding `Span` or `Event`. For performance reasons, if no currently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4601,"byte_end":4678,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ active subscribers express interest in a given set of metadata by returning","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4679,"byte_end":4758,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/ `true`, then the corresponding `Span` or `Event` will never be constructed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4759,"byte_end":4838,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4839,"byte_end":4842,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4843,"byte_end":4854,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4855,"byte_end":4858,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ First, add this to your `Cargo.toml`:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4859,"byte_end":4900,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4901,"byte_end":4904,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4905,"byte_end":4916,"line_start":117,"line_end":117,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4917,"byte_end":4935,"line_start":118,"line_end":118,"column_start":1,"column_end":19}},{"value":"/ tracing = \"0.1\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4936,"byte_end":4955,"line_start":119,"line_end":119,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4956,"byte_end":4963,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4964,"byte_end":4967,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.42+][msrv]*","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":4968,"byte_end":5022,"line_start":122,"line_end":122,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5023,"byte_end":5026,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ## Recording Spans and Events","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5027,"byte_end":5060,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5061,"byte_end":5064,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Spans and events are recorded using macros.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5065,"byte_end":5112,"line_start":126,"line_end":126,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5113,"byte_end":5116,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ### Spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5117,"byte_end":5130,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5131,"byte_end":5134,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] macro expands to a [`Span` struct][`Span`] which is used to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5135,"byte_end":5212,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ record a span. The [`Span::enter`] method on that struct records that the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5213,"byte_end":5290,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ span has been entered, and returns a [RAII] guard object, which will exit","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5291,"byte_end":5368,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ the span when dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5369,"byte_end":5395,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5396,"byte_end":5399,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5400,"byte_end":5416,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5417,"byte_end":5420,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5421,"byte_end":5432,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5433,"byte_end":5464,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5465,"byte_end":5482,"line_start":139,"line_end":139,"column_start":1,"column_end":18}},{"value":"/ // Construct a new span named \"my span\" with trace log level.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5483,"byte_end":5548,"line_start":140,"line_end":140,"column_start":1,"column_end":66}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5549,"byte_end":5595,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5596,"byte_end":5599,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ // Enter the span, returning a guard object.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5600,"byte_end":5648,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5649,"byte_end":5679,"line_start":144,"line_end":144,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5680,"byte_end":5683,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ // Any trace events that occur before the guard is dropped will occur","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5684,"byte_end":5757,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"/ // within the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5758,"byte_end":5781,"line_start":147,"line_end":147,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5782,"byte_end":5785,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // Dropping the guard will exit the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5786,"byte_end":5831,"line_start":149,"line_end":149,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5832,"byte_end":5839,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5840,"byte_end":5847,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5848,"byte_end":5851,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The [`#[instrument]`][instrument] attribute provides an easy way to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5852,"byte_end":5923,"line_start":153,"line_end":153,"column_start":1,"column_end":72}},{"value":"/ add `tracing` spans to functions. A function annotated with `#[instrument]`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":5924,"byte_end":6003,"line_start":154,"line_end":154,"column_start":1,"column_end":80}},{"value":"/ will create and enter a span with that function's name every time the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6004,"byte_end":6077,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ function is called, with arguments to that function will be recorded as","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6078,"byte_end":6153,"line_start":156,"line_end":156,"column_start":1,"column_end":76}},{"value":"/ fields using `fmt::Debug`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6154,"byte_end":6184,"line_start":157,"line_end":157,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6185,"byte_end":6188,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6189,"byte_end":6205,"line_start":159,"line_end":159,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6206,"byte_end":6219,"line_start":160,"line_end":160,"column_start":1,"column_end":14}},{"value":"/ # // this doctest is ignored because we don't have a way to say","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6220,"byte_end":6287,"line_start":161,"line_end":161,"column_start":1,"column_end":68}},{"value":"/ # // that it should only be run with cfg(feature = \"attributes\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6288,"byte_end":6356,"line_start":162,"line_end":162,"column_start":1,"column_end":69}},{"value":"/ use tracing::{Level, event, instrument};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6357,"byte_end":6401,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6402,"byte_end":6405,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #[instrument]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6406,"byte_end":6423,"line_start":165,"line_end":165,"column_start":1,"column_end":18}},{"value":"/ pub fn my_function(my_arg: usize) {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6424,"byte_end":6463,"line_start":166,"line_end":166,"column_start":1,"column_end":40}},{"value":"/     // This event will be recorded inside a span named `my_function` with the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6464,"byte_end":6545,"line_start":167,"line_end":167,"column_start":1,"column_end":82}},{"value":"/     // field `my_arg`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6546,"byte_end":6572,"line_start":168,"line_end":168,"column_start":1,"column_end":27}},{"value":"/     event!(Level::INFO, \"inside my_function!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6573,"byte_end":6624,"line_start":169,"line_end":169,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6625,"byte_end":6639,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6640,"byte_end":6645,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6646,"byte_end":6664,"line_start":172,"line_end":172,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6665,"byte_end":6672,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6673,"byte_end":6676,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For functions which don't have built-in tracing support and can't have","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6677,"byte_end":6751,"line_start":175,"line_end":175,"column_start":1,"column_end":75}},{"value":"/ the `#[instrument]` attribute applied (such as from an external crate),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6752,"byte_end":6827,"line_start":176,"line_end":176,"column_start":1,"column_end":76}},{"value":"/ the [`Span` struct][`Span`] has a [`in_scope()` method][`in_scope`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6828,"byte_end":6899,"line_start":177,"line_end":177,"column_start":1,"column_end":72}},{"value":"/ which can be used to easily wrap synchonous code in a span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6900,"byte_end":6963,"line_start":178,"line_end":178,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6964,"byte_end":6967,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6968,"byte_end":6984,"line_start":180,"line_end":180,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6985,"byte_end":6996,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"/ use tracing::info_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":6997,"byte_end":7024,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7025,"byte_end":7028,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ # fn doc() -> Result<(), ()> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7029,"byte_end":7063,"line_start":184,"line_end":184,"column_start":1,"column_end":35}},{"value":"/ # mod serde_json {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7064,"byte_end":7086,"line_start":185,"line_end":185,"column_start":1,"column_end":23}},{"value":"/ #    pub(crate) fn from_slice(buf: &[u8]) -> Result<(), ()> { Ok(()) }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7087,"byte_end":7161,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7162,"byte_end":7169,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # let buf: [u8; 0] = [];","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7170,"byte_end":7198,"line_start":188,"line_end":188,"column_start":1,"column_end":29}},{"value":"/ let json = info_span!(\"json.parse\").in_scope(|| serde_json::from_slice(&buf))?;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7199,"byte_end":7282,"line_start":189,"line_end":189,"column_start":1,"column_end":84}},{"value":"/ # let _ = json; // suppress unused variable warning","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7283,"byte_end":7338,"line_start":190,"line_end":190,"column_start":1,"column_end":56}},{"value":"/ # Ok(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7339,"byte_end":7351,"line_start":191,"line_end":191,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7352,"byte_end":7359,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7360,"byte_end":7367,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7368,"byte_end":7371,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ You can find more examples showing how to use this crate [here][examples].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7372,"byte_end":7450,"line_start":195,"line_end":195,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7451,"byte_end":7454,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [RAII]: https://github.com/rust-unofficial/patterns/blob/master/patterns/behavioural/RAII.md","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7455,"byte_end":7551,"line_start":197,"line_end":197,"column_start":1,"column_end":97}},{"value":"/ [examples]: https://github.com/tokio-rs/tracing/tree/master/examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7552,"byte_end":7624,"line_start":198,"line_end":198,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7625,"byte_end":7628,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ### Events","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7629,"byte_end":7643,"line_start":200,"line_end":200,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7644,"byte_end":7647,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ [`Event`]s are recorded using the [`event!`] macro:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7648,"byte_end":7703,"line_start":202,"line_end":202,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7704,"byte_end":7707,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7708,"byte_end":7719,"line_start":204,"line_end":204,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7720,"byte_end":7737,"line_start":205,"line_end":205,"column_start":1,"column_end":18}},{"value":"/ use tracing::{event, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7738,"byte_end":7770,"line_start":206,"line_end":206,"column_start":1,"column_end":33}},{"value":"/ event!(Level::INFO, \"something has happened!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7771,"byte_end":7822,"line_start":207,"line_end":207,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7823,"byte_end":7830,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7831,"byte_end":7838,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7839,"byte_end":7842,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ## Using the Macros","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7843,"byte_end":7866,"line_start":211,"line_end":211,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7867,"byte_end":7870,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] and [`event!`] macros as well as the `#[instrument]` attribute","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7871,"byte_end":7951,"line_start":213,"line_end":213,"column_start":1,"column_end":81}},{"value":"/ use fairly similar syntax, with some exceptions.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":7952,"byte_end":8004,"line_start":214,"line_end":214,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8005,"byte_end":8008,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ### Configuring Attributes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8009,"byte_end":8039,"line_start":216,"line_end":216,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8040,"byte_end":8043,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ Both macros require a [`Level`] specifying the verbosity of the span or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8044,"byte_end":8119,"line_start":218,"line_end":218,"column_start":1,"column_end":76}},{"value":"/ event. Optionally, the [target] and [parent span] may be overridden. If the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8120,"byte_end":8199,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ target and parent span are not overridden, they will default to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8200,"byte_end":8271,"line_start":220,"line_end":220,"column_start":1,"column_end":72}},{"value":"/ module path where the macro was invoked and the current span (as determined","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8272,"byte_end":8351,"line_start":221,"line_end":221,"column_start":1,"column_end":80}},{"value":"/ by the subscriber), respectively.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8352,"byte_end":8389,"line_start":222,"line_end":222,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8390,"byte_end":8393,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8394,"byte_end":8410,"line_start":224,"line_end":224,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8411,"byte_end":8414,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8415,"byte_end":8422,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8423,"byte_end":8463,"line_start":227,"line_end":227,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8464,"byte_end":8481,"line_start":228,"line_end":228,"column_start":1,"column_end":18}},{"value":"/ span!(target: \"app_spans\", Level::TRACE, \"my span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8482,"byte_end":8538,"line_start":229,"line_end":229,"column_start":1,"column_end":57}},{"value":"/ event!(target: \"app_events\", Level::INFO, \"something has happened!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8539,"byte_end":8612,"line_start":230,"line_end":230,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8613,"byte_end":8620,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8621,"byte_end":8628,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8629,"byte_end":8636,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8637,"byte_end":8677,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8678,"byte_end":8695,"line_start":235,"line_end":235,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8696,"byte_end":8742,"line_start":236,"line_end":236,"column_start":1,"column_end":47}},{"value":"/ event!(parent: &span, Level::INFO, \"something has happened!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8743,"byte_end":8809,"line_start":237,"line_end":237,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8810,"byte_end":8817,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8818,"byte_end":8825,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8826,"byte_end":8829,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ The span macros also take a string literal after the level, to set the name","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8830,"byte_end":8909,"line_start":241,"line_end":241,"column_start":1,"column_end":80}},{"value":"/ of the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8910,"byte_end":8926,"line_start":242,"line_end":242,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8927,"byte_end":8930,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ### Recording Fields","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8931,"byte_end":8955,"line_start":244,"line_end":244,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8956,"byte_end":8959,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Structured fields on spans and events are specified using the syntax","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":8960,"byte_end":9032,"line_start":246,"line_end":246,"column_start":1,"column_end":73}},{"value":"/ `field_name = field_value`. Fields are separated by commas.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9033,"byte_end":9096,"line_start":247,"line_end":247,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9097,"byte_end":9100,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9101,"byte_end":9108,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9109,"byte_end":9143,"line_start":250,"line_end":250,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9144,"byte_end":9161,"line_start":251,"line_end":251,"column_start":1,"column_end":18}},{"value":"/ // records an event with two fields:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9162,"byte_end":9202,"line_start":252,"line_end":252,"column_start":1,"column_end":41}},{"value":"/ //  - \"answer\", with the value 42","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9203,"byte_end":9240,"line_start":253,"line_end":253,"column_start":1,"column_end":38}},{"value":"/ //  - \"question\", with the value \"life, the universe and everything\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9241,"byte_end":9313,"line_start":254,"line_end":254,"column_start":1,"column_end":73}},{"value":"/ event!(Level::INFO, answer = 42, question = \"life, the universe, and everything\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9314,"byte_end":9400,"line_start":255,"line_end":255,"column_start":1,"column_end":87}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9401,"byte_end":9408,"line_start":256,"line_end":256,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9409,"byte_end":9416,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9417,"byte_end":9420,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ As shorthand, local variables may be used as field values without an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9421,"byte_end":9493,"line_start":259,"line_end":259,"column_start":1,"column_end":73}},{"value":"/ assignment, similar to [struct initializers]. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9494,"byte_end":9556,"line_start":260,"line_end":260,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9557,"byte_end":9560,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9561,"byte_end":9568,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9569,"byte_end":9602,"line_start":263,"line_end":263,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9603,"byte_end":9620,"line_start":264,"line_end":264,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9621,"byte_end":9645,"line_start":265,"line_end":265,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9646,"byte_end":9649,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ span!(Level::TRACE, \"login\", user);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9650,"byte_end":9689,"line_start":267,"line_end":267,"column_start":1,"column_end":40}},{"value":"/ // is equivalent to:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9690,"byte_end":9714,"line_start":268,"line_end":268,"column_start":1,"column_end":25}},{"value":"/ span!(Level::TRACE, \"login\", user = user);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9715,"byte_end":9761,"line_start":269,"line_end":269,"column_start":1,"column_end":47}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9762,"byte_end":9769,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9770,"byte_end":9776,"line_start":271,"line_end":271,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9777,"byte_end":9780,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ Field names can include dots, but should not be terminated by them:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9781,"byte_end":9852,"line_start":273,"line_end":273,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9853,"byte_end":9860,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9861,"byte_end":9894,"line_start":275,"line_end":275,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9895,"byte_end":9912,"line_start":276,"line_end":276,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9913,"byte_end":9937,"line_start":277,"line_end":277,"column_start":1,"column_end":25}},{"value":"/ let email = \"ferris@rust-lang.org\";","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9938,"byte_end":9977,"line_start":278,"line_end":278,"column_start":1,"column_end":40}},{"value":"/ span!(Level::TRACE, \"login\", user, user.email = email);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":9978,"byte_end":10037,"line_start":279,"line_end":279,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10038,"byte_end":10045,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10046,"byte_end":10052,"line_start":281,"line_end":281,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10053,"byte_end":10056,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Since field names can include dots, fields on local structs can be used","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10057,"byte_end":10132,"line_start":283,"line_end":283,"column_start":1,"column_end":76}},{"value":"/ using the local variable shorthand:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10133,"byte_end":10172,"line_start":284,"line_end":284,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10173,"byte_end":10180,"line_start":285,"line_end":285,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10181,"byte_end":10214,"line_start":286,"line_end":286,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10215,"byte_end":10232,"line_start":287,"line_end":287,"column_start":1,"column_end":18}},{"value":"/ # struct User {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10233,"byte_end":10252,"line_start":288,"line_end":288,"column_start":1,"column_end":20}},{"value":"/ #    name: &'static str,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10253,"byte_end":10281,"line_start":289,"line_end":289,"column_start":1,"column_end":29}},{"value":"/ #    email: &'static str,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10282,"byte_end":10311,"line_start":290,"line_end":290,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10312,"byte_end":10319,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ let user = User {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10320,"byte_end":10341,"line_start":292,"line_end":292,"column_start":1,"column_end":22}},{"value":"/     name: \"ferris\",","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10342,"byte_end":10365,"line_start":293,"line_end":293,"column_start":1,"column_end":24}},{"value":"/     email: \"ferris@rust-lang.org\",","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10366,"byte_end":10404,"line_start":294,"line_end":294,"column_start":1,"column_end":39}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10405,"byte_end":10411,"line_start":295,"line_end":295,"column_start":1,"column_end":7}},{"value":"/ // the span will have the fields `user.name = \"ferris\"` and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10412,"byte_end":10475,"line_start":296,"line_end":296,"column_start":1,"column_end":64}},{"value":"/ // `user.email = \"ferris@rust-lang.org\"`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10476,"byte_end":10521,"line_start":297,"line_end":297,"column_start":1,"column_end":46}},{"value":"/ span!(Level::TRACE, \"login\", user.name, user.email);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10522,"byte_end":10578,"line_start":298,"line_end":298,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10579,"byte_end":10586,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10587,"byte_end":10593,"line_start":300,"line_end":300,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10594,"byte_end":10597,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ Fields with names that are not Rust identifiers, or with names that are Rust reserved words,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10598,"byte_end":10694,"line_start":302,"line_end":302,"column_start":1,"column_end":97}},{"value":"/ may be created using quoted string literals. However, this may not be used with the local","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10695,"byte_end":10788,"line_start":303,"line_end":303,"column_start":1,"column_end":94}},{"value":"/ variable shorthand.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10789,"byte_end":10812,"line_start":304,"line_end":304,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10813,"byte_end":10820,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10821,"byte_end":10854,"line_start":306,"line_end":306,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10855,"byte_end":10872,"line_start":307,"line_end":307,"column_start":1,"column_end":18}},{"value":"/ // records an event with fields whose names are not Rust identifiers","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10873,"byte_end":10945,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ //  - \"guid:x-request-id\", containing a `:`, with the value \"abcdef\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":10946,"byte_end":11018,"line_start":309,"line_end":309,"column_start":1,"column_end":73}},{"value":"/ //  - \"type\", which is a reserved word, with the value \"request\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11019,"byte_end":11087,"line_start":310,"line_end":310,"column_start":1,"column_end":69}},{"value":"/ span!(Level::TRACE, \"api\", \"guid:x-request-id\" = \"abcdef\", \"type\" = \"request\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11088,"byte_end":11171,"line_start":311,"line_end":311,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11172,"byte_end":11179,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11180,"byte_end":11186,"line_start":313,"line_end":313,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11187,"byte_end":11190,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ The `?` sigil is shorthand that specifies a field should be recorded using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11191,"byte_end":11269,"line_start":315,"line_end":315,"column_start":1,"column_end":79}},{"value":"/ its [`fmt::Debug`] implementation:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11270,"byte_end":11308,"line_start":316,"line_end":316,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11309,"byte_end":11316,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11317,"byte_end":11351,"line_start":318,"line_end":318,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11352,"byte_end":11369,"line_start":319,"line_end":319,"column_start":1,"column_end":18}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11370,"byte_end":11390,"line_start":320,"line_end":320,"column_start":1,"column_end":21}},{"value":"/ struct MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11391,"byte_end":11412,"line_start":321,"line_end":321,"column_start":1,"column_end":22}},{"value":"/     field: &'static str,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11413,"byte_end":11441,"line_start":322,"line_end":322,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11442,"byte_end":11447,"line_start":323,"line_end":323,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11448,"byte_end":11451,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11452,"byte_end":11482,"line_start":325,"line_end":325,"column_start":1,"column_end":31}},{"value":"/     field: \"Hello world!\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11483,"byte_end":11512,"line_start":326,"line_end":326,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11513,"byte_end":11519,"line_start":327,"line_end":327,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11520,"byte_end":11523,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ // `my_struct` will be recorded using its `fmt::Debug` implementation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11524,"byte_end":11598,"line_start":329,"line_end":329,"column_start":1,"column_end":75}},{"value":"/ event!(Level::TRACE, greeting = ?my_struct);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11599,"byte_end":11647,"line_start":330,"line_end":330,"column_start":1,"column_end":49}},{"value":"/ // is equivalent to:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11648,"byte_end":11672,"line_start":331,"line_end":331,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::debug(&my_struct));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11673,"byte_end":11744,"line_start":332,"line_end":332,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11745,"byte_end":11752,"line_start":333,"line_end":333,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11753,"byte_end":11760,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11761,"byte_end":11764,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ The `%` sigil operates similarly, but indicates that the value should be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11765,"byte_end":11841,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ recorded using its [`fmt::Display`] implementation:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11842,"byte_end":11897,"line_start":337,"line_end":337,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11898,"byte_end":11905,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11906,"byte_end":11940,"line_start":339,"line_end":339,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11941,"byte_end":11958,"line_start":340,"line_end":340,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11959,"byte_end":11981,"line_start":341,"line_end":341,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":11982,"byte_end":12005,"line_start":342,"line_end":342,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12006,"byte_end":12036,"line_start":343,"line_end":343,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12037,"byte_end":12044,"line_start":344,"line_end":344,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12045,"byte_end":12050,"line_start":345,"line_end":345,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12051,"byte_end":12083,"line_start":346,"line_end":346,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12084,"byte_end":12115,"line_start":347,"line_end":347,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12116,"byte_end":12124,"line_start":348,"line_end":348,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12125,"byte_end":12207,"line_start":349,"line_end":349,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, greeting = %my_struct.field);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12208,"byte_end":12262,"line_start":350,"line_end":350,"column_start":1,"column_end":55}},{"value":"/ // is equivalent to:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12263,"byte_end":12287,"line_start":351,"line_end":351,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::display(&my_struct.field));","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12288,"byte_end":12367,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12368,"byte_end":12375,"line_start":353,"line_end":353,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12376,"byte_end":12383,"line_start":354,"line_end":354,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12384,"byte_end":12387,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ The `%` and `?` sigils may also be used with local variable shorthand:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12388,"byte_end":12462,"line_start":356,"line_end":356,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12463,"byte_end":12466,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12467,"byte_end":12474,"line_start":358,"line_end":358,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12475,"byte_end":12509,"line_start":359,"line_end":359,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12510,"byte_end":12527,"line_start":360,"line_end":360,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12528,"byte_end":12550,"line_start":361,"line_end":361,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12551,"byte_end":12574,"line_start":362,"line_end":362,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12575,"byte_end":12605,"line_start":363,"line_end":363,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12606,"byte_end":12613,"line_start":364,"line_end":364,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12614,"byte_end":12619,"line_start":365,"line_end":365,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12620,"byte_end":12652,"line_start":366,"line_end":366,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12653,"byte_end":12684,"line_start":367,"line_end":367,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12685,"byte_end":12693,"line_start":368,"line_end":368,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12694,"byte_end":12776,"line_start":369,"line_end":369,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, %my_struct.field);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12777,"byte_end":12820,"line_start":370,"line_end":370,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12821,"byte_end":12828,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12829,"byte_end":12836,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12837,"byte_end":12840,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ Additionally, a span may declare fields with the special value [`Empty`],","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12841,"byte_end":12918,"line_start":374,"line_end":374,"column_start":1,"column_end":78}},{"value":"/ which indicates that that the value for that field does not currently exist","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12919,"byte_end":12998,"line_start":375,"line_end":375,"column_start":1,"column_end":80}},{"value":"/ but may be recorded later. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":12999,"byte_end":13042,"line_start":376,"line_end":376,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13043,"byte_end":13046,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13047,"byte_end":13054,"line_start":378,"line_end":378,"column_start":1,"column_end":8}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13055,"byte_end":13092,"line_start":379,"line_end":379,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13093,"byte_end":13096,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13097,"byte_end":13180,"line_start":381,"line_end":381,"column_start":1,"column_end":84}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13181,"byte_end":13215,"line_start":382,"line_end":382,"column_start":1,"column_end":35}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13216,"byte_end":13304,"line_start":383,"line_end":383,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13305,"byte_end":13308,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13309,"byte_end":13319,"line_start":385,"line_end":385,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13320,"byte_end":13323,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13324,"byte_end":13371,"line_start":387,"line_end":387,"column_start":1,"column_end":48}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13372,"byte_end":13418,"line_start":388,"line_end":388,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13419,"byte_end":13426,"line_start":389,"line_end":389,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13427,"byte_end":13430,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Note that a span may have up to 32 fields. The following will not compile:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13431,"byte_end":13509,"line_start":391,"line_end":391,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13510,"byte_end":13513,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13514,"byte_end":13538,"line_start":393,"line_end":393,"column_start":1,"column_end":25}},{"value":"/ # use tracing::Level;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13539,"byte_end":13564,"line_start":394,"line_end":394,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13565,"byte_end":13582,"line_start":395,"line_end":395,"column_start":1,"column_end":18}},{"value":"/ let bad_span = span!(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13583,"byte_end":13608,"line_start":396,"line_end":396,"column_start":1,"column_end":26}},{"value":"/     Level::TRACE,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13609,"byte_end":13630,"line_start":397,"line_end":397,"column_start":1,"column_end":22}},{"value":"/     \"too many fields!\",","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13631,"byte_end":13658,"line_start":398,"line_end":398,"column_start":1,"column_end":28}},{"value":"/     a = 1, b = 2, c = 3, d = 4, e = 5, f = 6, g = 7, h = 8, i = 9,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13659,"byte_end":13729,"line_start":399,"line_end":399,"column_start":1,"column_end":71}},{"value":"/     j = 10, k = 11, l = 12, m = 13, n = 14, o = 15, p = 16, q = 17,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13730,"byte_end":13801,"line_start":400,"line_end":400,"column_start":1,"column_end":72}},{"value":"/     r = 18, s = 19, t = 20, u = 21, v = 22, w = 23, x = 24, y = 25,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13802,"byte_end":13873,"line_start":401,"line_end":401,"column_start":1,"column_end":72}},{"value":"/     z = 26, aa = 27, bb = 28, cc = 29, dd = 30, ee = 31, ff = 32, gg = 33","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13874,"byte_end":13951,"line_start":402,"line_end":402,"column_start":1,"column_end":78}},{"value":"/ );","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13952,"byte_end":13958,"line_start":403,"line_end":403,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13959,"byte_end":13966,"line_start":404,"line_end":404,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13967,"byte_end":13974,"line_start":405,"line_end":405,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13975,"byte_end":13978,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ Finally, events may also include human-readable messages, in the form of a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":13979,"byte_end":14057,"line_start":407,"line_end":407,"column_start":1,"column_end":79}},{"value":"/ [format string][fmt] and (optional) arguments, **after** the event's","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14058,"byte_end":14130,"line_start":408,"line_end":408,"column_start":1,"column_end":73}},{"value":"/ key-value fields. If a format string and arguments are provided,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14131,"byte_end":14199,"line_start":409,"line_end":409,"column_start":1,"column_end":69}},{"value":"/ they will implicitly create a new field named `message` whose value is the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14200,"byte_end":14278,"line_start":410,"line_end":410,"column_start":1,"column_end":79}},{"value":"/ provided set of format arguments.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14279,"byte_end":14316,"line_start":411,"line_end":411,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14317,"byte_end":14320,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14321,"byte_end":14337,"line_start":413,"line_end":413,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14338,"byte_end":14341,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14342,"byte_end":14349,"line_start":415,"line_end":415,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14350,"byte_end":14384,"line_start":416,"line_end":416,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14385,"byte_end":14402,"line_start":417,"line_end":417,"column_start":1,"column_end":18}},{"value":"/ let question = \"the ultimate question of life, the universe, and everything\";","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14403,"byte_end":14484,"line_start":418,"line_end":418,"column_start":1,"column_end":82}},{"value":"/ let answer = 42;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14485,"byte_end":14505,"line_start":419,"line_end":419,"column_start":1,"column_end":21}},{"value":"/ // records an event with the following fields:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14506,"byte_end":14556,"line_start":420,"line_end":420,"column_start":1,"column_end":51}},{"value":"/ // - `question.answer` with the value 42,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14557,"byte_end":14602,"line_start":421,"line_end":421,"column_start":1,"column_end":46}},{"value":"/ // - `question.tricky` with the value `true`,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14603,"byte_end":14652,"line_start":422,"line_end":422,"column_start":1,"column_end":50}},{"value":"/ // - \"message\", with the value \"the answer to the ultimate question of life, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14653,"byte_end":14737,"line_start":423,"line_end":423,"column_start":1,"column_end":85}},{"value":"/ //    universe, and everything is 42.\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14738,"byte_end":14780,"line_start":424,"line_end":424,"column_start":1,"column_end":43}},{"value":"/ event!(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14781,"byte_end":14792,"line_start":425,"line_end":425,"column_start":1,"column_end":12}},{"value":"/     Level::DEBUG,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14793,"byte_end":14814,"line_start":426,"line_end":426,"column_start":1,"column_end":22}},{"value":"/     question.answer = answer,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14815,"byte_end":14848,"line_start":427,"line_end":427,"column_start":1,"column_end":34}},{"value":"/     question.tricky = true,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14849,"byte_end":14880,"line_start":428,"line_end":428,"column_start":1,"column_end":32}},{"value":"/     \"the answer to {} is {}.\", question, answer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14881,"byte_end":14932,"line_start":429,"line_end":429,"column_start":1,"column_end":52}},{"value":"/ );","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14933,"byte_end":14939,"line_start":430,"line_end":430,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14940,"byte_end":14947,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14948,"byte_end":14955,"line_start":432,"line_end":432,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14956,"byte_end":14959,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ Specifying a formatted message in this manner does not allocate by default.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":14960,"byte_end":15039,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15040,"byte_end":15043,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ [struct initializers]: https://doc.rust-lang.org/book/ch05-01-defining-structs.html#using-the-field-init-shorthand-when-variables-and-fields-have-the-same-name","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15044,"byte_end":15207,"line_start":436,"line_end":436,"column_start":1,"column_end":164}},{"value":"/ [target]: Metadata::target","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15208,"byte_end":15238,"line_start":437,"line_end":437,"column_start":1,"column_end":31}},{"value":"/ [parent span]: span::Attributes::parent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15239,"byte_end":15282,"line_start":438,"line_end":438,"column_start":1,"column_end":44}},{"value":"/ [determined contextually]: span::Attributes::is_contextual","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15283,"byte_end":15345,"line_start":439,"line_end":439,"column_start":1,"column_end":63}},{"value":"/ [`fmt::Debug`]: https://doc.rust-lang.org/std/fmt/trait.Debug.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15346,"byte_end":15416,"line_start":440,"line_end":440,"column_start":1,"column_end":71}},{"value":"/ [`fmt::Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15417,"byte_end":15491,"line_start":441,"line_end":441,"column_start":1,"column_end":75}},{"value":"/ [fmt]: https://doc.rust-lang.org/std/fmt/#usage","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15492,"byte_end":15543,"line_start":442,"line_end":442,"column_start":1,"column_end":52}},{"value":"/ [`Empty`]: field::Empty","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15544,"byte_end":15571,"line_start":443,"line_end":443,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15572,"byte_end":15575,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ ### Shorthand Macros","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15576,"byte_end":15600,"line_start":445,"line_end":445,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15601,"byte_end":15604,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ `tracing` also offers a number of macros with preset verbosity levels.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15605,"byte_end":15679,"line_start":447,"line_end":447,"column_start":1,"column_end":75}},{"value":"/ The [`trace!`], [`debug!`], [`info!`], [`warn!`], and [`error!`] behave","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15680,"byte_end":15755,"line_start":448,"line_end":448,"column_start":1,"column_end":76}},{"value":"/ similarly to the [`event!`] macro, but with the [`Level`] argument already","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15756,"byte_end":15834,"line_start":449,"line_end":449,"column_start":1,"column_end":79}},{"value":"/ specified, while the corresponding [`trace_span!`], [`debug_span!`],","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15835,"byte_end":15907,"line_start":450,"line_end":450,"column_start":1,"column_end":73}},{"value":"/ [`info_span!`], [`warn_span!`], and [`error_span!`] macros are the same,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15908,"byte_end":15984,"line_start":451,"line_end":451,"column_start":1,"column_end":77}},{"value":"/ but for the [`span!`] macro.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":15985,"byte_end":16017,"line_start":452,"line_end":452,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16018,"byte_end":16021,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ These are intended both as a shorthand, and for compatibility with the [`log`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16022,"byte_end":16104,"line_start":454,"line_end":454,"column_start":1,"column_end":83}},{"value":"/ crate (see the next section).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16105,"byte_end":16138,"line_start":455,"line_end":455,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16139,"byte_end":16142,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ [`span!`]: span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16143,"byte_end":16163,"line_start":457,"line_end":457,"column_start":1,"column_end":21}},{"value":"/ [`event!`]: event!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16164,"byte_end":16186,"line_start":458,"line_end":458,"column_start":1,"column_end":23}},{"value":"/ [`trace!`]: trace!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16187,"byte_end":16209,"line_start":459,"line_end":459,"column_start":1,"column_end":23}},{"value":"/ [`debug!`]: debug!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16210,"byte_end":16232,"line_start":460,"line_end":460,"column_start":1,"column_end":23}},{"value":"/ [`info!`]: info!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16233,"byte_end":16253,"line_start":461,"line_end":461,"column_start":1,"column_end":21}},{"value":"/ [`warn!`]: warn!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16254,"byte_end":16274,"line_start":462,"line_end":462,"column_start":1,"column_end":21}},{"value":"/ [`error!`]: error!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16275,"byte_end":16297,"line_start":463,"line_end":463,"column_start":1,"column_end":23}},{"value":"/ [`trace_span!`]: trace_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16298,"byte_end":16330,"line_start":464,"line_end":464,"column_start":1,"column_end":33}},{"value":"/ [`debug_span!`]: debug_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16331,"byte_end":16363,"line_start":465,"line_end":465,"column_start":1,"column_end":33}},{"value":"/ [`info_span!`]: info_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16364,"byte_end":16394,"line_start":466,"line_end":466,"column_start":1,"column_end":31}},{"value":"/ [`warn_span!`]: warn_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16395,"byte_end":16425,"line_start":467,"line_end":467,"column_start":1,"column_end":31}},{"value":"/ [`error_span!`]: error_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16426,"byte_end":16458,"line_start":468,"line_end":468,"column_start":1,"column_end":33}},{"value":"/ [`Level`]: Level","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16459,"byte_end":16479,"line_start":469,"line_end":469,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16480,"byte_end":16483,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ### For `log` Users","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16484,"byte_end":16507,"line_start":471,"line_end":471,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16508,"byte_end":16511,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ Users of the [`log`] crate should note that `tracing` exposes a set of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16512,"byte_end":16586,"line_start":473,"line_end":473,"column_start":1,"column_end":75}},{"value":"/ macros for creating `Event`s (`trace!`, `debug!`, `info!`, `warn!`, and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16587,"byte_end":16662,"line_start":474,"line_end":474,"column_start":1,"column_end":76}},{"value":"/ `error!`) which may be invoked with the same syntax as the similarly-named","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16663,"byte_end":16741,"line_start":475,"line_end":475,"column_start":1,"column_end":79}},{"value":"/ macros from the `log` crate. Often, the process of converting a project to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16742,"byte_end":16820,"line_start":476,"line_end":476,"column_start":1,"column_end":79}},{"value":"/ use `tracing` can begin with a simple drop-in replacement.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16821,"byte_end":16883,"line_start":477,"line_end":477,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16884,"byte_end":16887,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ Let's consider the `log` crate's yak-shaving example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16888,"byte_end":16945,"line_start":479,"line_end":479,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16946,"byte_end":16949,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16950,"byte_end":16968,"line_start":481,"line_end":481,"column_start":1,"column_end":19}},{"value":"/ use std::{error::Error, io};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":16969,"byte_end":17001,"line_start":482,"line_end":482,"column_start":1,"column_end":33}},{"value":"/ use tracing::{debug, error, info, span, warn, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17002,"byte_end":17059,"line_start":483,"line_end":483,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17060,"byte_end":17063,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ // the `#[tracing::instrument]` attribute creates and enters a span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17064,"byte_end":17135,"line_start":485,"line_end":485,"column_start":1,"column_end":72}},{"value":"/ // every time the instrumented function is called. The span is named after the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17136,"byte_end":17218,"line_start":486,"line_end":486,"column_start":1,"column_end":83}},{"value":"/ // the function or method. Parameters passed to the function are recorded as fields.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17219,"byte_end":17307,"line_start":487,"line_end":487,"column_start":1,"column_end":89}},{"value":"/ #[tracing::instrument]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17308,"byte_end":17334,"line_start":488,"line_end":488,"column_start":1,"column_end":27}},{"value":"/ pub fn shave(yak: usize) -> Result<(), Box<dyn Error + 'static>> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17335,"byte_end":17405,"line_start":489,"line_end":489,"column_start":1,"column_end":71}},{"value":"/     // this creates an event at the DEBUG level with two fields:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17406,"byte_end":17474,"line_start":490,"line_end":490,"column_start":1,"column_end":69}},{"value":"/     // - `excitement`, with the key \"excitement\" and the value \"yay!\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17475,"byte_end":17548,"line_start":491,"line_end":491,"column_start":1,"column_end":74}},{"value":"/     // - `message`, with the key \"message\" and the value \"hello! I'm gonna shave a yak.\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17549,"byte_end":17641,"line_start":492,"line_end":492,"column_start":1,"column_end":93}},{"value":"/     //","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17642,"byte_end":17652,"line_start":493,"line_end":493,"column_start":1,"column_end":11}},{"value":"/     // unlike other fields, `message`'s shorthand initialization is just the string itself.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17653,"byte_end":17748,"line_start":494,"line_end":494,"column_start":1,"column_end":96}},{"value":"/     debug!(excitement = \"yay!\", \"hello! I'm gonna shave a yak.\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17749,"byte_end":17818,"line_start":495,"line_end":495,"column_start":1,"column_end":70}},{"value":"/     if yak == 3 {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17819,"byte_end":17840,"line_start":496,"line_end":496,"column_start":1,"column_end":22}},{"value":"/         warn!(\"could not locate yak!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17841,"byte_end":17884,"line_start":497,"line_end":497,"column_start":1,"column_end":44}},{"value":"/         // note that this is intended to demonstrate `tracing`'s features, not idiomatic","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17885,"byte_end":17977,"line_start":498,"line_end":498,"column_start":1,"column_end":93}},{"value":"/         // error handling! in a library or application, you should consider returning","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":17978,"byte_end":18067,"line_start":499,"line_end":499,"column_start":1,"column_end":90}},{"value":"/         // a dedicated `YakError`. libraries like snafu or thiserror make this easy.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18068,"byte_end":18156,"line_start":500,"line_end":500,"column_start":1,"column_end":89}},{"value":"/         return Err(io::Error::new(io::ErrorKind::Other, \"shaving yak failed!\").into());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18157,"byte_end":18248,"line_start":501,"line_end":501,"column_start":1,"column_end":92}},{"value":"/     } else {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18249,"byte_end":18265,"line_start":502,"line_end":502,"column_start":1,"column_end":17}},{"value":"/         debug!(\"yak shaved successfully\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18266,"byte_end":18312,"line_start":503,"line_end":503,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18313,"byte_end":18322,"line_start":504,"line_end":504,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18323,"byte_end":18337,"line_start":505,"line_end":505,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18338,"byte_end":18343,"line_start":506,"line_end":506,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18344,"byte_end":18347,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ pub fn shave_all(yaks: usize) -> usize {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18348,"byte_end":18392,"line_start":508,"line_end":508,"column_start":1,"column_end":45}},{"value":"/     // Constructs a new span named \"shaving_yaks\" at the TRACE level,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18393,"byte_end":18466,"line_start":509,"line_end":509,"column_start":1,"column_end":74}},{"value":"/     // and a field whose key is \"yaks\". This is equivalent to writing:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18467,"byte_end":18541,"line_start":510,"line_end":510,"column_start":1,"column_end":75}},{"value":"/     //","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18542,"byte_end":18552,"line_start":511,"line_end":511,"column_start":1,"column_end":11}},{"value":"/     // let span = span!(Level::TRACE, \"shaving_yaks\", yaks = yaks);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18553,"byte_end":18624,"line_start":512,"line_end":512,"column_start":1,"column_end":72}},{"value":"/     //","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18625,"byte_end":18635,"line_start":513,"line_end":513,"column_start":1,"column_end":11}},{"value":"/     // local variables (`yaks`) can be used as field values","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18636,"byte_end":18699,"line_start":514,"line_end":514,"column_start":1,"column_end":64}},{"value":"/     // without an assignment, similar to struct initializers.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18700,"byte_end":18765,"line_start":515,"line_end":515,"column_start":1,"column_end":66}},{"value":"/     let _span = span!(Level::TRACE, \"shaving_yaks\", yaks).entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18766,"byte_end":18838,"line_start":516,"line_end":516,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18839,"byte_end":18842,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/     info!(\"shaving yaks\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18843,"byte_end":18873,"line_start":518,"line_end":518,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18874,"byte_end":18877,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/     let mut yaks_shaved = 0;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18878,"byte_end":18910,"line_start":520,"line_end":520,"column_start":1,"column_end":33}},{"value":"/     for yak in 1..=yaks {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18911,"byte_end":18940,"line_start":521,"line_end":521,"column_start":1,"column_end":30}},{"value":"/         let res = shave(yak);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18941,"byte_end":18974,"line_start":522,"line_end":522,"column_start":1,"column_end":34}},{"value":"/         debug!(yak, shaved = res.is_ok());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":18975,"byte_end":19021,"line_start":523,"line_end":523,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19022,"byte_end":19025,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/         if let Err(ref error) = res {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19026,"byte_end":19067,"line_start":525,"line_end":525,"column_start":1,"column_end":42}},{"value":"/             // Like spans, events can also use the field initialization shorthand.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19068,"byte_end":19154,"line_start":526,"line_end":526,"column_start":1,"column_end":87}},{"value":"/             // In this instance, `yak` is the field being initalized.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19155,"byte_end":19228,"line_start":527,"line_end":527,"column_start":1,"column_end":74}},{"value":"/             error!(yak, error = error.as_ref(), \"failed to shave yak!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19229,"byte_end":19305,"line_start":528,"line_end":528,"column_start":1,"column_end":77}},{"value":"/         } else {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19306,"byte_end":19326,"line_start":529,"line_end":529,"column_start":1,"column_end":21}},{"value":"/             yaks_shaved += 1;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19327,"byte_end":19360,"line_start":530,"line_end":530,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19361,"byte_end":19374,"line_start":531,"line_end":531,"column_start":1,"column_end":14}},{"value":"/         debug!(yaks_shaved);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19375,"byte_end":19407,"line_start":532,"line_end":532,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19408,"byte_end":19417,"line_start":533,"line_end":533,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19418,"byte_end":19421,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/     yaks_shaved","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19422,"byte_end":19441,"line_start":535,"line_end":535,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19442,"byte_end":19447,"line_start":536,"line_end":536,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19448,"byte_end":19455,"line_start":537,"line_end":537,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19456,"byte_end":19459,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ ## In libraries","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19460,"byte_end":19479,"line_start":539,"line_end":539,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19480,"byte_end":19483,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ Libraries should link only to the `tracing` crate, and use the provided","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19484,"byte_end":19559,"line_start":541,"line_end":541,"column_start":1,"column_end":76}},{"value":"/ macros to record whatever information will be useful to downstream","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19560,"byte_end":19630,"line_start":542,"line_end":542,"column_start":1,"column_end":71}},{"value":"/ consumers.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19631,"byte_end":19645,"line_start":543,"line_end":543,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19646,"byte_end":19649,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ ## In executables","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19650,"byte_end":19671,"line_start":545,"line_end":545,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19672,"byte_end":19675,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ In order to record trace events, executables have to use a `Subscriber`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19676,"byte_end":19751,"line_start":547,"line_end":547,"column_start":1,"column_end":76}},{"value":"/ implementation compatible with `tracing`. A `Subscriber` implements a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19752,"byte_end":19825,"line_start":548,"line_end":548,"column_start":1,"column_end":74}},{"value":"/ way of collecting trace data, such as by logging it to standard output.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19826,"byte_end":19901,"line_start":549,"line_end":549,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19902,"byte_end":19905,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ This library does not contain any `Subscriber` implementations; these are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19906,"byte_end":19983,"line_start":551,"line_end":551,"column_start":1,"column_end":78}},{"value":"/ provided by [other crates](#related-crates).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":19984,"byte_end":20032,"line_start":552,"line_end":552,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20033,"byte_end":20036,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ The simplest way to use a subscriber is to call the [`set_global_default`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20037,"byte_end":20115,"line_start":554,"line_end":554,"column_start":1,"column_end":79}},{"value":"/ function:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20116,"byte_end":20129,"line_start":555,"line_end":555,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20130,"byte_end":20133,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20134,"byte_end":20141,"line_start":557,"line_end":557,"column_start":1,"column_end":8}},{"value":"/ extern crate tracing;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20142,"byte_end":20167,"line_start":558,"line_end":558,"column_start":1,"column_end":26}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20168,"byte_end":20199,"line_start":559,"line_end":559,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20200,"byte_end":20262,"line_start":560,"line_end":560,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20263,"byte_end":20313,"line_start":561,"line_end":561,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20314,"byte_end":20382,"line_start":562,"line_end":562,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20383,"byte_end":20430,"line_start":563,"line_end":563,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20431,"byte_end":20477,"line_start":564,"line_end":564,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20478,"byte_end":20534,"line_start":565,"line_end":565,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20535,"byte_end":20592,"line_start":566,"line_end":566,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20593,"byte_end":20627,"line_start":567,"line_end":567,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20628,"byte_end":20661,"line_start":568,"line_end":568,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20662,"byte_end":20669,"line_start":569,"line_end":569,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20670,"byte_end":20696,"line_start":570,"line_end":570,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20697,"byte_end":20739,"line_start":571,"line_end":571,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20740,"byte_end":20747,"line_start":572,"line_end":572,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20748,"byte_end":20765,"line_start":573,"line_end":573,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20766,"byte_end":20769,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20770,"byte_end":20815,"line_start":575,"line_end":575,"column_start":1,"column_end":46}},{"value":"/ tracing::subscriber::set_global_default(my_subscriber)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20816,"byte_end":20874,"line_start":576,"line_end":576,"column_start":1,"column_end":59}},{"value":"/     .expect(\"setting tracing default failed\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20875,"byte_end":20925,"line_start":577,"line_end":577,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20926,"byte_end":20933,"line_start":578,"line_end":578,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20934,"byte_end":20941,"line_start":579,"line_end":579,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20942,"byte_end":20945,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":20946,"byte_end":21017,"line_start":581,"line_end":581,"column_start":1,"column_end":72}},{"value":"/     <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21018,"byte_end":21098,"line_start":582,"line_end":582,"column_start":1,"column_end":81}},{"value":"/     <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21099,"byte_end":21176,"line_start":583,"line_end":583,"column_start":1,"column_end":78}},{"value":"/     executables that depend on the library try to set the default later.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21177,"byte_end":21253,"line_start":584,"line_end":584,"column_start":1,"column_end":77}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21254,"byte_end":21264,"line_start":585,"line_end":585,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21265,"byte_end":21268,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ This subscriber will be used as the default in all threads for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21269,"byte_end":21339,"line_start":587,"line_end":587,"column_start":1,"column_end":71}},{"value":"/ remainder of the duration of the program, similar to setting the logger","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21340,"byte_end":21415,"line_start":588,"line_end":588,"column_start":1,"column_end":76}},{"value":"/ in the `log` crate.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21416,"byte_end":21439,"line_start":589,"line_end":589,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21440,"byte_end":21443,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ In addition, the default subscriber can be set through using the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21444,"byte_end":21512,"line_start":591,"line_end":591,"column_start":1,"column_end":69}},{"value":"/ [`with_default`] function. This follows the `tokio` pattern of using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21513,"byte_end":21585,"line_start":592,"line_end":592,"column_start":1,"column_end":73}},{"value":"/ closures to represent executing code in a context that is exited at the end","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21586,"byte_end":21665,"line_start":593,"line_end":593,"column_start":1,"column_end":80}},{"value":"/ of the closure. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21666,"byte_end":21698,"line_start":594,"line_end":594,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21699,"byte_end":21702,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21703,"byte_end":21714,"line_start":596,"line_end":596,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21715,"byte_end":21746,"line_start":597,"line_end":597,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21747,"byte_end":21809,"line_start":598,"line_end":598,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21810,"byte_end":21860,"line_start":599,"line_end":599,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21861,"byte_end":21929,"line_start":600,"line_end":600,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21930,"byte_end":21977,"line_start":601,"line_end":601,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":21978,"byte_end":22024,"line_start":602,"line_end":602,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22025,"byte_end":22081,"line_start":603,"line_end":603,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22082,"byte_end":22139,"line_start":604,"line_end":604,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22140,"byte_end":22174,"line_start":605,"line_end":605,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22175,"byte_end":22208,"line_start":606,"line_end":606,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22209,"byte_end":22216,"line_start":607,"line_end":607,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22217,"byte_end":22243,"line_start":608,"line_end":608,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22244,"byte_end":22286,"line_start":609,"line_end":609,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22287,"byte_end":22294,"line_start":610,"line_end":610,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22295,"byte_end":22312,"line_start":611,"line_end":611,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22313,"byte_end":22316,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22317,"byte_end":22362,"line_start":613,"line_end":613,"column_start":1,"column_end":46}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22363,"byte_end":22392,"line_start":614,"line_end":614,"column_start":1,"column_end":30}},{"value":"/ tracing::subscriber::with_default(my_subscriber, || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22393,"byte_end":22450,"line_start":615,"line_end":615,"column_start":1,"column_end":58}},{"value":"/     // Any trace events generated in this closure or by functions it calls","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22451,"byte_end":22529,"line_start":616,"line_end":616,"column_start":1,"column_end":79}},{"value":"/     // will be collected by `my_subscriber`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22530,"byte_end":22578,"line_start":617,"line_end":617,"column_start":1,"column_end":49}},{"value":"/ })","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22579,"byte_end":22585,"line_start":618,"line_end":618,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22586,"byte_end":22593,"line_start":619,"line_end":619,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22594,"byte_end":22601,"line_start":620,"line_end":620,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22602,"byte_end":22605,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ This approach allows trace data to be collected by multiple subscribers","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22606,"byte_end":22681,"line_start":622,"line_end":622,"column_start":1,"column_end":76}},{"value":"/ within different contexts in the program. Note that the override only applies to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22682,"byte_end":22770,"line_start":623,"line_end":623,"column_start":1,"column_end":89}},{"value":"/ currently executing thread; other threads will not see the change from with_default.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22771,"byte_end":22859,"line_start":624,"line_end":624,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22860,"byte_end":22863,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ Any trace events generated outside the context of a subscriber will not be collected.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22864,"byte_end":22953,"line_start":626,"line_end":626,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22954,"byte_end":22957,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ Once a subscriber has been set, instrumentation points may be added to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":22958,"byte_end":23036,"line_start":628,"line_end":628,"column_start":1,"column_end":79}},{"value":"/ executable using the `tracing` crate's macros.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23037,"byte_end":23087,"line_start":629,"line_end":629,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23088,"byte_end":23091,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ ## `log` Compatibility","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23092,"byte_end":23118,"line_start":631,"line_end":631,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23119,"byte_end":23122,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ The [`log`] crate provides a simple, lightweight logging facade for Rust.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23123,"byte_end":23200,"line_start":633,"line_end":633,"column_start":1,"column_end":78}},{"value":"/ While `tracing` builds upon `log`'s foundation with richer structured","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23201,"byte_end":23274,"line_start":634,"line_end":634,"column_start":1,"column_end":74}},{"value":"/ diagnostic data, `log`'s simplicity and ubiquity make it the \"lowest common","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23275,"byte_end":23354,"line_start":635,"line_end":635,"column_start":1,"column_end":80}},{"value":"/ denominator\" for text-based logging in Rust — a vast majority of Rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23355,"byte_end":23430,"line_start":636,"line_end":636,"column_start":1,"column_end":74}},{"value":"/ libraries and applications either emit or consume `log` records. Therefore,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23431,"byte_end":23510,"line_start":637,"line_end":637,"column_start":1,"column_end":80}},{"value":"/ `tracing` provides multiple forms of interoperability with `log`: `tracing`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23511,"byte_end":23590,"line_start":638,"line_end":638,"column_start":1,"column_end":80}},{"value":"/ instrumentation can emit `log` records, and a compatibility layer enables","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23591,"byte_end":23668,"line_start":639,"line_end":639,"column_start":1,"column_end":78}},{"value":"/ `tracing` [`Subscriber`]s to consume `log` records as `tracing` [`Event`]s.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23669,"byte_end":23748,"line_start":640,"line_end":640,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23749,"byte_end":23752,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ ### Emitting `log` Records","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23753,"byte_end":23783,"line_start":642,"line_end":642,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23784,"byte_end":23787,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/ This crate provides two feature flags, \"log\" and \"log-always\", which will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23788,"byte_end":23865,"line_start":644,"line_end":644,"column_start":1,"column_end":78}},{"value":"/ cause [spans] and [events] to emit `log` records. When the \"log\" feature is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23866,"byte_end":23945,"line_start":645,"line_end":645,"column_start":1,"column_end":80}},{"value":"/ enabled, if no `tracing` `Subscriber` is active, invoking an event macro or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":23946,"byte_end":24025,"line_start":646,"line_end":646,"column_start":1,"column_end":80}},{"value":"/ creating a span with fields will emit a `log` record. This is intended","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24026,"byte_end":24100,"line_start":647,"line_end":647,"column_start":1,"column_end":75}},{"value":"/ primarily for use in libraries which wish to emit diagnostics that can be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24101,"byte_end":24178,"line_start":648,"line_end":648,"column_start":1,"column_end":78}},{"value":"/ consumed by applications using `tracing` *or* `log`, without paying the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24179,"byte_end":24254,"line_start":649,"line_end":649,"column_start":1,"column_end":76}},{"value":"/ additional overhead of emitting both forms of diagnostics when `tracing` is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24255,"byte_end":24334,"line_start":650,"line_end":650,"column_start":1,"column_end":80}},{"value":"/ in use.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24335,"byte_end":24346,"line_start":651,"line_end":651,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24347,"byte_end":24350,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ Enabling the \"log-always\" feature will cause `log` records to be emitted","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24351,"byte_end":24427,"line_start":653,"line_end":653,"column_start":1,"column_end":77}},{"value":"/ even if a `tracing` `Subscriber` _is_ set. This is intended to be used in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24428,"byte_end":24505,"line_start":654,"line_end":654,"column_start":1,"column_end":78}},{"value":"/ applications where a `log` `Logger` is being used to record a textual log,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24506,"byte_end":24584,"line_start":655,"line_end":655,"column_start":1,"column_end":79}},{"value":"/ and `tracing` is used only to record other forms of diagnostics (such as","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24585,"byte_end":24661,"line_start":656,"line_end":656,"column_start":1,"column_end":77}},{"value":"/ metrics, profiling, or distributed tracing data). Unlike the \"log\" feature,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24662,"byte_end":24741,"line_start":657,"line_end":657,"column_start":1,"column_end":80}},{"value":"/ libraries generally should **not** enable the \"log-always\" feature, as doing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24742,"byte_end":24822,"line_start":658,"line_end":658,"column_start":1,"column_end":81}},{"value":"/ so will prevent applications from being able to opt out of the `log` records.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24823,"byte_end":24904,"line_start":659,"line_end":659,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24905,"byte_end":24908,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ See [here][flags] for more details on this crate's feature flags.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24909,"byte_end":24978,"line_start":661,"line_end":661,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24979,"byte_end":24982,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ The generated `log` records' messages will be a string representation of the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":24983,"byte_end":25063,"line_start":663,"line_end":663,"column_start":1,"column_end":81}},{"value":"/ span or event's fields, and all additional information recorded by `log`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25064,"byte_end":25140,"line_start":664,"line_end":664,"column_start":1,"column_end":77}},{"value":"/ (target, verbosity level, module path, file, and line number) will also be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25141,"byte_end":25219,"line_start":665,"line_end":665,"column_start":1,"column_end":79}},{"value":"/ populated. Additionally, `log` records are also generated when spans are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25220,"byte_end":25296,"line_start":666,"line_end":666,"column_start":1,"column_end":77}},{"value":"/ entered, exited, and closed. Since these additional span lifecycle logs have","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25297,"byte_end":25377,"line_start":667,"line_end":667,"column_start":1,"column_end":81}},{"value":"/ the potential to be very verbose, and don't include additional fields, they","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25378,"byte_end":25457,"line_start":668,"line_end":668,"column_start":1,"column_end":80}},{"value":"/ will always be emitted at the `Trace` level, rather than inheriting the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25458,"byte_end":25533,"line_start":669,"line_end":669,"column_start":1,"column_end":76}},{"value":"/ level of the span that generated them. Furthermore, they are are categorized","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25534,"byte_end":25614,"line_start":670,"line_end":670,"column_start":1,"column_end":81}},{"value":"/ under a separate `log` target, \"tracing::span\" (and its sub-target,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25615,"byte_end":25686,"line_start":671,"line_end":671,"column_start":1,"column_end":72}},{"value":"/ \"tracing::span::active\", for the logs on entering and exiting a span), which","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25687,"byte_end":25767,"line_start":672,"line_end":672,"column_start":1,"column_end":81}},{"value":"/ may be enabled or disabled separately from other `log` records emitted by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25768,"byte_end":25845,"line_start":673,"line_end":673,"column_start":1,"column_end":78}},{"value":"/ `tracing`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25846,"byte_end":25860,"line_start":674,"line_end":674,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25861,"byte_end":25864,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ ### Consuming `log` Records","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25865,"byte_end":25896,"line_start":676,"line_end":676,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25897,"byte_end":25900,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ The [`tracing-log`] crate provides a compatibility layer which","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25901,"byte_end":25967,"line_start":678,"line_end":678,"column_start":1,"column_end":67}},{"value":"/ allows a `tracing` [`Subscriber`] to consume `log` records as though they","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":25968,"byte_end":26045,"line_start":679,"line_end":679,"column_start":1,"column_end":78}},{"value":"/ were `tracing` [events]. This allows applications using `tracing` to record","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26046,"byte_end":26125,"line_start":680,"line_end":680,"column_start":1,"column_end":80}},{"value":"/ the logs emitted by dependencies using `log` as events within the context of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26126,"byte_end":26206,"line_start":681,"line_end":681,"column_start":1,"column_end":81}},{"value":"/ the application's trace tree. See [that crate's documentation][log-tracer]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26207,"byte_end":26285,"line_start":682,"line_end":682,"column_start":1,"column_end":79}},{"value":"/ for details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26286,"byte_end":26302,"line_start":683,"line_end":683,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26303,"byte_end":26306,"line_start":684,"line_end":684,"column_start":1,"column_end":4}},{"value":"/ [log-tracer]: https://docs.rs/tracing-log/latest/tracing_log/#convert-log-records-to-tracing-events","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26307,"byte_end":26410,"line_start":685,"line_end":685,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26411,"byte_end":26414,"line_start":686,"line_end":686,"column_start":1,"column_end":4}},{"value":"/ ## Related Crates","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26415,"byte_end":26436,"line_start":687,"line_end":687,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26437,"byte_end":26440,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ In addition to `tracing` and `tracing-core`, the [`tokio-rs/tracing`] repository","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26441,"byte_end":26525,"line_start":689,"line_end":689,"column_start":1,"column_end":85}},{"value":"/ contains several additional crates designed to be used with the `tracing` ecosystem.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26526,"byte_end":26614,"line_start":690,"line_end":690,"column_start":1,"column_end":89}},{"value":"/ This includes a collection of `Subscriber` implementations, as well as utility","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26615,"byte_end":26697,"line_start":691,"line_end":691,"column_start":1,"column_end":83}},{"value":"/ and adapter crates to assist in writing `Subscriber`s and instrumenting","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26698,"byte_end":26773,"line_start":692,"line_end":692,"column_start":1,"column_end":76}},{"value":"/ applications.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26774,"byte_end":26791,"line_start":693,"line_end":693,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26792,"byte_end":26795,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ In particular, the following crates are likely to be of interest:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26796,"byte_end":26865,"line_start":695,"line_end":695,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26866,"byte_end":26869,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-futures`] provides a compatibility layer with the `futures`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26870,"byte_end":26946,"line_start":697,"line_end":697,"column_start":1,"column_end":77}},{"value":"/    crate, allowing spans to be attached to `Future`s, `Stream`s, and `Executor`s.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":26947,"byte_end":27032,"line_start":698,"line_end":698,"column_start":1,"column_end":86}},{"value":"/  - [`tracing-subscriber`] provides `Subscriber` implementations and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27033,"byte_end":27104,"line_start":699,"line_end":699,"column_start":1,"column_end":72}},{"value":"/    utilities for working with `Subscriber`s. This includes a [`FmtSubscriber`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27105,"byte_end":27187,"line_start":700,"line_end":700,"column_start":1,"column_end":83}},{"value":"/    `FmtSubscriber` for logging formatted trace data to stdout, with similar","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27188,"byte_end":27267,"line_start":701,"line_end":701,"column_start":1,"column_end":80}},{"value":"/    filtering and formatting to the [`env_logger`] crate.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27268,"byte_end":27328,"line_start":702,"line_end":702,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-log`] provides a compatibility layer with the [`log`] crate,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27329,"byte_end":27406,"line_start":703,"line_end":703,"column_start":1,"column_end":78}},{"value":"/    allowing log messages to be recorded as `tracing` `Event`s within the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27407,"byte_end":27483,"line_start":704,"line_end":704,"column_start":1,"column_end":77}},{"value":"/    trace tree. This is useful when a project using `tracing` have","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27484,"byte_end":27553,"line_start":705,"line_end":705,"column_start":1,"column_end":70}},{"value":"/    dependencies which use `log`. Note that if you're using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27554,"byte_end":27616,"line_start":706,"line_end":706,"column_start":1,"column_end":63}},{"value":"/    `tracing-subscriber`'s `FmtSubscriber`, you don't need to depend on","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27617,"byte_end":27691,"line_start":707,"line_end":707,"column_start":1,"column_end":75}},{"value":"/    `tracing-log` directly.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27692,"byte_end":27722,"line_start":708,"line_end":708,"column_start":1,"column_end":31}},{"value":"/  - [`tracing-appender`] provides utilities for outputting tracing data,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27723,"byte_end":27798,"line_start":709,"line_end":709,"column_start":1,"column_end":76}},{"value":"/     including a file appender and non blocking writer.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27799,"byte_end":27857,"line_start":710,"line_end":710,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27858,"byte_end":27861,"line_start":711,"line_end":711,"column_start":1,"column_end":4}},{"value":"/ Additionally, there are also several third-party crates which are not","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27862,"byte_end":27935,"line_start":712,"line_end":712,"column_start":1,"column_end":74}},{"value":"/ maintained by the `tokio` project. These include:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27936,"byte_end":27989,"line_start":713,"line_end":713,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27990,"byte_end":27993,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-timing`] implements inter-event timing metrics on top of `tracing`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":27994,"byte_end":28078,"line_start":715,"line_end":715,"column_start":1,"column_end":85}},{"value":"/    It provides a subscriber that records the time elapsed between pairs of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28079,"byte_end":28157,"line_start":716,"line_end":716,"column_start":1,"column_end":79}},{"value":"/    `tracing` events and generates histograms.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28158,"byte_end":28207,"line_start":717,"line_end":717,"column_start":1,"column_end":50}},{"value":"/  - [`tracing-opentelemetry`] provides a subscriber for emitting traces to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28208,"byte_end":28285,"line_start":718,"line_end":718,"column_start":1,"column_end":78}},{"value":"/    [OpenTelemetry]-compatible distributed tracing systems.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28286,"byte_end":28348,"line_start":719,"line_end":719,"column_start":1,"column_end":63}},{"value":"/  - [`tracing-honeycomb`] Provides a layer that reports traces spanning multiple machines to [honeycomb.io]. Backed by [`tracing-distributed`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28349,"byte_end":28495,"line_start":720,"line_end":720,"column_start":1,"column_end":147}},{"value":"/  - [`tracing-distributed`] Provides a generic implementation of a layer that reports traces spanning multiple machines to some backend.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28496,"byte_end":28635,"line_start":721,"line_end":721,"column_start":1,"column_end":140}},{"value":"/  - [`tracing-actix-web`] provides `tracing` integration for the `actix-web` web framework.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28636,"byte_end":28730,"line_start":722,"line_end":722,"column_start":1,"column_end":95}},{"value":"/  - [`tracing-actix`] provides `tracing` integration for the `actix` actor","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28731,"byte_end":28808,"line_start":723,"line_end":723,"column_start":1,"column_end":78}},{"value":"/    framework.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28809,"byte_end":28826,"line_start":724,"line_end":724,"column_start":1,"column_end":18}},{"value":"/  - [`tracing-gelf`] implements a subscriber for exporting traces in Greylog","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28827,"byte_end":28906,"line_start":725,"line_end":725,"column_start":1,"column_end":80}},{"value":"/    GELF format.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28907,"byte_end":28926,"line_start":726,"line_end":726,"column_start":1,"column_end":20}},{"value":"/  - [`tracing-coz`] provides integration with the [coz] causal profiler","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":28927,"byte_end":29001,"line_start":727,"line_end":727,"column_start":1,"column_end":75}},{"value":"/    (Linux-only).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29002,"byte_end":29022,"line_start":728,"line_end":728,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-bunyan-formatter`] provides a layer implementation that reports events and spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29023,"byte_end":29120,"line_start":729,"line_end":729,"column_start":1,"column_end":98}},{"value":"/    in [bunyan] format, enriched with timing information.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29121,"byte_end":29181,"line_start":730,"line_end":730,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-wasm`] provides a `Subscriber`/`Layer` implementation that reports","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29182,"byte_end":29265,"line_start":731,"line_end":731,"column_start":1,"column_end":84}},{"value":"/    events and spans via browser `console.log` and [User Timing API (`window.performance`)].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29266,"byte_end":29361,"line_start":732,"line_end":732,"column_start":1,"column_end":96}},{"value":"/  - [`tide-tracing`] provides a [tide] middleware to trace all incoming requests and responses.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29362,"byte_end":29460,"line_start":733,"line_end":733,"column_start":1,"column_end":99}},{"value":"/  - [`test-log`] takes care of initializing `tracing` for tests, based on","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29461,"byte_end":29537,"line_start":734,"line_end":734,"column_start":1,"column_end":77}},{"value":"/    environment variables with an `env_logger` compatible syntax.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29538,"byte_end":29606,"line_start":735,"line_end":735,"column_start":1,"column_end":69}},{"value":"/  - [`tracing-unwrap`] provides convenience methods to report failed unwraps","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29607,"byte_end":29686,"line_start":736,"line_end":736,"column_start":1,"column_end":80}},{"value":"/    on `Result` or `Option` types to a `Subscriber`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29687,"byte_end":29742,"line_start":737,"line_end":737,"column_start":1,"column_end":56}},{"value":"/  - [`diesel-tracing`] provides integration with [`diesel`] database connections.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29743,"byte_end":29827,"line_start":738,"line_end":738,"column_start":1,"column_end":85}},{"value":"/  - [`tracing-tracy`] provides a way to collect [Tracy] profiles in instrumented","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29828,"byte_end":29911,"line_start":739,"line_end":739,"column_start":1,"column_end":84}},{"value":"/    applications.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29912,"byte_end":29932,"line_start":740,"line_end":740,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-elastic-apm`] provides a layer for reporting traces to [Elastic APM].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":29933,"byte_end":30019,"line_start":741,"line_end":741,"column_start":1,"column_end":87}},{"value":"/  - [`tracing-etw`] provides a layer for emitting Windows [ETW] events.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30020,"byte_end":30094,"line_start":742,"line_end":742,"column_start":1,"column_end":75}},{"value":"/  - [`tracing-fluent-assertions`] provides a fluent assertions-style testing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30095,"byte_end":30174,"line_start":743,"line_end":743,"column_start":1,"column_end":80}},{"value":"/    framework for validating the behavior of `tracing` spans.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30175,"byte_end":30239,"line_start":744,"line_end":744,"column_start":1,"column_end":65}},{"value":"/  - [`sentry-tracing`] provides a layer for reporting events and traces to [Sentry].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30240,"byte_end":30327,"line_start":745,"line_end":745,"column_start":1,"column_end":88}},{"value":"/  - [`tracing-forest`] provides a subscriber that preserves contextual coherence by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30328,"byte_end":30414,"line_start":746,"line_end":746,"column_start":1,"column_end":87}},{"value":"/    grouping together logs from the same spans during writing.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30415,"byte_end":30480,"line_start":747,"line_end":747,"column_start":1,"column_end":66}},{"value":"/  - [`tracing-loki`] provides a layer for shipping logs to [Grafana Loki].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30481,"byte_end":30558,"line_start":748,"line_end":748,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30559,"byte_end":30562,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ If you're the maintainer of a `tracing` ecosystem crate not listed above,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30563,"byte_end":30640,"line_start":750,"line_end":750,"column_start":1,"column_end":78}},{"value":"/ please let us know! We'd love to add your project to the list!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30641,"byte_end":30707,"line_start":751,"line_end":751,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30708,"byte_end":30711,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ [`tracing-opentelemetry`]: https://crates.io/crates/tracing-opentelemetry","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30712,"byte_end":30789,"line_start":753,"line_end":753,"column_start":1,"column_end":78}},{"value":"/ [OpenTelemetry]: https://opentelemetry.io/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30790,"byte_end":30836,"line_start":754,"line_end":754,"column_start":1,"column_end":47}},{"value":"/ [`tracing-honeycomb`]: https://crates.io/crates/tracing-honeycomb","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30837,"byte_end":30906,"line_start":755,"line_end":755,"column_start":1,"column_end":70}},{"value":"/ [`tracing-distributed`]: https://crates.io/crates/tracing-distributed","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30907,"byte_end":30980,"line_start":756,"line_end":756,"column_start":1,"column_end":74}},{"value":"/ [honeycomb.io]: https://www.honeycomb.io/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":30981,"byte_end":31026,"line_start":757,"line_end":757,"column_start":1,"column_end":46}},{"value":"/ [`tracing-actix-web`]: https://crates.io/crates/tracing-actix-web","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31027,"byte_end":31096,"line_start":758,"line_end":758,"column_start":1,"column_end":70}},{"value":"/ [`tracing-actix`]: https://crates.io/crates/tracing-actix","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31097,"byte_end":31158,"line_start":759,"line_end":759,"column_start":1,"column_end":62}},{"value":"/ [`tracing-gelf`]: https://crates.io/crates/tracing-gelf","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31159,"byte_end":31218,"line_start":760,"line_end":760,"column_start":1,"column_end":60}},{"value":"/ [`tracing-coz`]: https://crates.io/crates/tracing-coz","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31219,"byte_end":31276,"line_start":761,"line_end":761,"column_start":1,"column_end":58}},{"value":"/ [coz]: https://github.com/plasma-umass/coz","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31277,"byte_end":31323,"line_start":762,"line_end":762,"column_start":1,"column_end":47}},{"value":"/ [`tracing-bunyan-formatter`]: https://crates.io/crates/tracing-bunyan-formatter","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31324,"byte_end":31407,"line_start":763,"line_end":763,"column_start":1,"column_end":84}},{"value":"/ [bunyan]: https://github.com/trentm/node-bunyan","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31408,"byte_end":31459,"line_start":764,"line_end":764,"column_start":1,"column_end":52}},{"value":"/ [`tracing-wasm`]: https://docs.rs/tracing-wasm","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31460,"byte_end":31510,"line_start":765,"line_end":765,"column_start":1,"column_end":51}},{"value":"/ [User Timing API (`window.performance`)]: https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31511,"byte_end":31621,"line_start":766,"line_end":766,"column_start":1,"column_end":111}},{"value":"/ [`tide-tracing`]: https://crates.io/crates/tide-tracing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31622,"byte_end":31681,"line_start":767,"line_end":767,"column_start":1,"column_end":60}},{"value":"/ [tide]: https://crates.io/crates/tide","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31682,"byte_end":31723,"line_start":768,"line_end":768,"column_start":1,"column_end":42}},{"value":"/ [`test-log`]: https://crates.io/crates/test-log","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31724,"byte_end":31775,"line_start":769,"line_end":769,"column_start":1,"column_end":52}},{"value":"/ [`tracing-unwrap`]: https://docs.rs/tracing-unwrap","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31776,"byte_end":31830,"line_start":770,"line_end":770,"column_start":1,"column_end":55}},{"value":"/ [`diesel`]: https://crates.io/crates/diesel","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31831,"byte_end":31878,"line_start":771,"line_end":771,"column_start":1,"column_end":48}},{"value":"/ [`diesel-tracing`]: https://crates.io/crates/diesel-tracing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31879,"byte_end":31942,"line_start":772,"line_end":772,"column_start":1,"column_end":64}},{"value":"/ [`tracing-tracy`]: https://crates.io/crates/tracing-tracy","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":31943,"byte_end":32004,"line_start":773,"line_end":773,"column_start":1,"column_end":62}},{"value":"/ [Tracy]: https://github.com/wolfpld/tracy","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32005,"byte_end":32050,"line_start":774,"line_end":774,"column_start":1,"column_end":46}},{"value":"/ [`tracing-elastic-apm`]: https://crates.io/crates/tracing-elastic-apm","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32051,"byte_end":32124,"line_start":775,"line_end":775,"column_start":1,"column_end":74}},{"value":"/ [Elastic APM]: https://www.elastic.co/apm","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32125,"byte_end":32170,"line_start":776,"line_end":776,"column_start":1,"column_end":46}},{"value":"/ [`tracing-etw`]: https://github.com/microsoft/tracing-etw","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32171,"byte_end":32232,"line_start":777,"line_end":777,"column_start":1,"column_end":62}},{"value":"/ [ETW]: https://docs.microsoft.com/en-us/windows/win32/etw/about-event-tracing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32233,"byte_end":32314,"line_start":778,"line_end":778,"column_start":1,"column_end":82}},{"value":"/ [`tracing-fluent-assertions`]: https://crates.io/crates/tracing-fluent-assertions","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32315,"byte_end":32400,"line_start":779,"line_end":779,"column_start":1,"column_end":86}},{"value":"/ [`sentry-tracing`]: https://crates.io/crates/sentry-tracing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32401,"byte_end":32464,"line_start":780,"line_end":780,"column_start":1,"column_end":64}},{"value":"/ [Sentry]: https://sentry.io/welcome/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32465,"byte_end":32505,"line_start":781,"line_end":781,"column_start":1,"column_end":41}},{"value":"/ [`tracing-forest`]: https://crates.io/crates/tracing-forest","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32506,"byte_end":32569,"line_start":782,"line_end":782,"column_start":1,"column_end":64}},{"value":"/ [`tracing-loki`]: https://crates.io/crates/tracing-loki","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32570,"byte_end":32629,"line_start":783,"line_end":783,"column_start":1,"column_end":60}},{"value":"/ [Grafana Loki]: https://grafana.com/oss/loki/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32630,"byte_end":32679,"line_start":784,"line_end":784,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32680,"byte_end":32683,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32684,"byte_end":32749,"line_start":786,"line_end":786,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: Some of these ecosystem crates are currently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32750,"byte_end":32825,"line_start":787,"line_end":787,"column_start":1,"column_end":76}},{"value":"/     unreleased and/or in earlier stages of development. They may be less stable","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32826,"byte_end":32909,"line_start":788,"line_end":788,"column_start":1,"column_end":84}},{"value":"/     than <code>tracing</code> and <code>tracing-core</code>.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32910,"byte_end":32974,"line_start":789,"line_end":789,"column_start":1,"column_end":65}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32975,"byte_end":32985,"line_start":790,"line_end":790,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32986,"byte_end":32989,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":32990,"byte_end":33016,"line_start":792,"line_end":792,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33017,"byte_end":33020,"line_start":793,"line_end":793,"column_start":1,"column_end":4}},{"value":"/ The following crate [feature flags] are available:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33021,"byte_end":33075,"line_start":794,"line_end":794,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33076,"byte_end":33079,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ * A set of features controlling the [static verbosity level].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33080,"byte_end":33145,"line_start":796,"line_end":796,"column_start":1,"column_end":66}},{"value":"/ * `log`: causes trace instrumentation points to emit [`log`] records as well","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33146,"byte_end":33226,"line_start":797,"line_end":797,"column_start":1,"column_end":81}},{"value":"/   as trace events, if a default `tracing` subscriber has not been set. This","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33227,"byte_end":33306,"line_start":798,"line_end":798,"column_start":1,"column_end":80}},{"value":"/   is intended for use in libraries whose users may be using either `tracing`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33307,"byte_end":33387,"line_start":799,"line_end":799,"column_start":1,"column_end":81}},{"value":"/   or `log`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33388,"byte_end":33403,"line_start":800,"line_end":800,"column_start":1,"column_end":16}},{"value":"/ * `log-always`: Emit `log` records from all `tracing` spans and events, even","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33404,"byte_end":33484,"line_start":801,"line_end":801,"column_start":1,"column_end":81}},{"value":"/   if a `tracing` subscriber has been set. This should be set only by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33485,"byte_end":33557,"line_start":802,"line_end":802,"column_start":1,"column_end":73}},{"value":"/   applications which intend to collect traces and logs separately; if an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33558,"byte_end":33634,"line_start":803,"line_end":803,"column_start":1,"column_end":77}},{"value":"/   adapter is used to convert `log` records into `tracing` events, this will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33635,"byte_end":33714,"line_start":804,"line_end":804,"column_start":1,"column_end":80}},{"value":"/   cause duplicate events to occur.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33715,"byte_end":33753,"line_start":805,"line_end":805,"column_start":1,"column_end":39}},{"value":"/ * `attributes`: Includes support for the `#[instrument]` attribute.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33754,"byte_end":33825,"line_start":806,"line_end":806,"column_start":1,"column_end":72}},{"value":"/   This is on by default, but does bring in the `syn` crate as a dependency,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33826,"byte_end":33905,"line_start":807,"line_end":807,"column_start":1,"column_end":80}},{"value":"/   which may add to the compile time of crates that do not already use it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33906,"byte_end":33983,"line_start":808,"line_end":808,"column_start":1,"column_end":78}},{"value":"/ * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":33984,"byte_end":34054,"line_start":809,"line_end":809,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34055,"byte_end":34058,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34059,"byte_end":34137,"line_start":811,"line_end":811,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34138,"byte_end":34141,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34142,"byte_end":34155,"line_start":813,"line_end":813,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34156,"byte_end":34176,"line_start":814,"line_end":814,"column_start":1,"column_end":21}},{"value":"/   tracing = { version = \"0.1.34\", default-features = false }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34177,"byte_end":34241,"line_start":815,"line_end":815,"column_start":1,"column_end":65}},{"value":"/   ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34242,"byte_end":34251,"line_start":816,"line_end":816,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34252,"byte_end":34255,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34256,"byte_end":34321,"line_start":818,"line_end":818,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: <code>tracing</code>'s <code>no_std</code> support","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34322,"byte_end":34403,"line_start":819,"line_end":819,"column_start":1,"column_end":82}},{"value":"/     requires <code>liballoc</code>.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34404,"byte_end":34443,"line_start":820,"line_end":820,"column_start":1,"column_end":40}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34444,"byte_end":34454,"line_start":821,"line_end":821,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34455,"byte_end":34458,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ ### Unstable Features","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34459,"byte_end":34484,"line_start":823,"line_end":823,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34485,"byte_end":34488,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 0.1.x","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34489,"byte_end":34576,"line_start":825,"line_end":825,"column_start":1,"column_end":88}},{"value":"/ releases. To enable these features, the `--cfg tracing_unstable` must be passed to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34577,"byte_end":34663,"line_start":826,"line_end":826,"column_start":1,"column_end":87}},{"value":"/ `rustc` when compiling.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34664,"byte_end":34691,"line_start":827,"line_end":827,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34692,"byte_end":34695,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ The following unstable feature flags are currently available:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34696,"byte_end":34761,"line_start":829,"line_end":829,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34762,"byte_end":34765,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ * `valuable`: Enables support for recording [field values] using the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34766,"byte_end":34838,"line_start":831,"line_end":831,"column_start":1,"column_end":73}},{"value":"/   [`valuable`] crate.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34839,"byte_end":34864,"line_start":832,"line_end":832,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34865,"byte_end":34868,"line_start":833,"line_end":833,"column_start":1,"column_end":4}},{"value":"/ #### Enabling Unstable Features","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34869,"byte_end":34904,"line_start":834,"line_end":834,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34905,"byte_end":34908,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ The easiest way to set the `tracing_unstable` cfg is to use the `RUSTFLAGS`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34909,"byte_end":34988,"line_start":836,"line_end":836,"column_start":1,"column_end":80}},{"value":"/ env variable when running `cargo` commands:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":34989,"byte_end":35036,"line_start":837,"line_end":837,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35037,"byte_end":35040,"line_start":838,"line_end":838,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35041,"byte_end":35053,"line_start":839,"line_end":839,"column_start":1,"column_end":13}},{"value":"/ RUSTFLAGS=\"--cfg tracing_unstable\" cargo build","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35054,"byte_end":35104,"line_start":840,"line_end":840,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35105,"byte_end":35112,"line_start":841,"line_end":841,"column_start":1,"column_end":8}},{"value":"/ Alternatively, the following can be added to the `.cargo/config` file in a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35113,"byte_end":35191,"line_start":842,"line_end":842,"column_start":1,"column_end":79}},{"value":"/ project to automatically enable the cfg flag for that project:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35192,"byte_end":35258,"line_start":843,"line_end":843,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35259,"byte_end":35262,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35263,"byte_end":35274,"line_start":845,"line_end":845,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35275,"byte_end":35286,"line_start":846,"line_end":846,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tracing_unstable\"]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35287,"byte_end":35332,"line_start":847,"line_end":847,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35333,"byte_end":35340,"line_start":848,"line_end":848,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35341,"byte_end":35344,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35345,"byte_end":35442,"line_start":850,"line_end":850,"column_start":1,"column_end":98}},{"value":"/ [field values]: crate::field","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35443,"byte_end":35475,"line_start":851,"line_end":851,"column_start":1,"column_end":33}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35476,"byte_end":35527,"line_start":852,"line_end":852,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35528,"byte_end":35531,"line_start":853,"line_end":853,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35532,"byte_end":35562,"line_start":854,"line_end":854,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35563,"byte_end":35566,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35567,"byte_end":35644,"line_start":856,"line_end":856,"column_start":1,"column_end":78}},{"value":"/ version is 1.49. The current Tracing version is not guaranteed to build on","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35645,"byte_end":35723,"line_start":857,"line_end":857,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35724,"byte_end":35785,"line_start":858,"line_end":858,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35786,"byte_end":35789,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35790,"byte_end":35869,"line_start":860,"line_end":860,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35870,"byte_end":35947,"line_start":861,"line_end":861,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":35948,"byte_end":36024,"line_start":862,"line_end":862,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36025,"byte_end":36103,"line_start":863,"line_end":863,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36104,"byte_end":36179,"line_start":864,"line_end":864,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36180,"byte_end":36256,"line_start":865,"line_end":865,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36257,"byte_end":36304,"line_start":866,"line_end":866,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36305,"byte_end":36308,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/0.4.6/log/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36309,"byte_end":36352,"line_start":868,"line_end":868,"column_start":1,"column_end":44}},{"value":"/ [span]: mod@span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36353,"byte_end":36373,"line_start":869,"line_end":869,"column_start":1,"column_end":21}},{"value":"/ [spans]: mod@span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36374,"byte_end":36395,"line_start":870,"line_end":870,"column_start":1,"column_end":22}},{"value":"/ [`Span`]: span::Span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36396,"byte_end":36420,"line_start":871,"line_end":871,"column_start":1,"column_end":25}},{"value":"/ [`in_scope`]: span::Span::in_scope","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36421,"byte_end":36459,"line_start":872,"line_end":872,"column_start":1,"column_end":39}},{"value":"/ [event]: Event","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36460,"byte_end":36478,"line_start":873,"line_end":873,"column_start":1,"column_end":19}},{"value":"/ [events]: Event","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36479,"byte_end":36498,"line_start":874,"line_end":874,"column_start":1,"column_end":20}},{"value":"/ [`Subscriber`]: subscriber::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36499,"byte_end":36541,"line_start":875,"line_end":875,"column_start":1,"column_end":43}},{"value":"/ [Subscriber::event]: subscriber::Subscriber::event","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36542,"byte_end":36596,"line_start":876,"line_end":876,"column_start":1,"column_end":55}},{"value":"/ [`enter`]: subscriber::Subscriber::enter","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36597,"byte_end":36641,"line_start":877,"line_end":877,"column_start":1,"column_end":45}},{"value":"/ [`exit`]: subscriber::Subscriber::exit","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36642,"byte_end":36684,"line_start":878,"line_end":878,"column_start":1,"column_end":43}},{"value":"/ [`enabled`]: subscriber::Subscriber::enabled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36685,"byte_end":36733,"line_start":879,"line_end":879,"column_start":1,"column_end":49}},{"value":"/ [metadata]: Metadata","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36734,"byte_end":36758,"line_start":880,"line_end":880,"column_start":1,"column_end":25}},{"value":"/ [`field::display`]: field::display","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36759,"byte_end":36797,"line_start":881,"line_end":881,"column_start":1,"column_end":39}},{"value":"/ [`field::debug`]: field::debug","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36798,"byte_end":36832,"line_start":882,"line_end":882,"column_start":1,"column_end":35}},{"value":"/ [`set_global_default`]: subscriber::set_global_default","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36833,"byte_end":36891,"line_start":883,"line_end":883,"column_start":1,"column_end":59}},{"value":"/ [`with_default`]: subscriber::with_default","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36892,"byte_end":36938,"line_start":884,"line_end":884,"column_start":1,"column_end":47}},{"value":"/ [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":36939,"byte_end":37000,"line_start":885,"line_end":885,"column_start":1,"column_end":62}},{"value":"/ [`tracing-futures`]: https://crates.io/crates/tracing-futures","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37001,"byte_end":37066,"line_start":886,"line_end":886,"column_start":1,"column_end":66}},{"value":"/ [`tracing-subscriber`]: https://crates.io/crates/tracing-subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37067,"byte_end":37138,"line_start":887,"line_end":887,"column_start":1,"column_end":72}},{"value":"/ [`tracing-log`]: https://crates.io/crates/tracing-log","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37139,"byte_end":37196,"line_start":888,"line_end":888,"column_start":1,"column_end":58}},{"value":"/ [`tracing-timing`]: https://crates.io/crates/tracing-timing","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37197,"byte_end":37260,"line_start":889,"line_end":889,"column_start":1,"column_end":64}},{"value":"/ [`tracing-appender`]: https://crates.io/crates/tracing-appender","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37261,"byte_end":37328,"line_start":890,"line_end":890,"column_start":1,"column_end":68}},{"value":"/ [`env_logger`]: https://crates.io/crates/env_logger","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37329,"byte_end":37384,"line_start":891,"line_end":891,"column_start":1,"column_end":56}},{"value":"/ [`FmtSubscriber`]: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/struct.Subscriber.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37385,"byte_end":37495,"line_start":892,"line_end":892,"column_start":1,"column_end":111}},{"value":"/ [static verbosity level]: level_filters#compile-time-filters","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37496,"byte_end":37560,"line_start":893,"line_end":893,"column_start":1,"column_end":65}},{"value":"/ [instrument]: https://docs.rs/tracing-attributes/latest/tracing_attributes/attr.instrument.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37561,"byte_end":37660,"line_start":894,"line_end":894,"column_start":1,"column_end":100}},{"value":"/ [flags]: #crate-feature-flags","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":37661,"byte_end":37694,"line_start":895,"line_end":895,"column_start":1,"column_end":34}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\nnon_shorthand_field_patterns, no_mangle_generic_items, overflowing_literals,\npath_statements, patterns_in_fns_without_body, private_in_public,\nunconditional_recursion, unused, unused_allocation, unused_comparisons,\nunused_parens, while_true)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":38062,"byte_end":38524,"line_start":903,"line_end":924,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":74},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":123671,"byte_end":123718,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":123719,"byte_end":123722,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":123723,"byte_end":123803,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":123804,"byte_end":123882,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to the subscriber that collects it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":123883,"byte_end":123922,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":123923,"byte_end":123926,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Using the Trace Dispatcher","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":123927,"byte_end":123959,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":123960,"byte_end":123963,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":123964,"byte_end":124042,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124043,"byte_end":124118,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ current subscriber.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124119,"byte_end":124142,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124143,"byte_end":124146,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Setting the Default Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124147,"byte_end":124184,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124185,"byte_end":124188,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ By default, the current subscriber is an empty implementation that does","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124189,"byte_end":124264,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124265,"byte_end":124344,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ There are two methods for doing so: [`with_default`] and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124345,"byte_end":124405,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124406,"byte_end":124484,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124485,"byte_end":124562,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ for the entire process.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124563,"byte_end":124590,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124591,"byte_end":124594,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124595,"byte_end":124671,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124672,"byte_end":124745,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124746,"byte_end":124758,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124759,"byte_end":124770,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124771,"byte_end":124802,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124803,"byte_end":124828,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124829,"byte_end":124865,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124866,"byte_end":124904,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124905,"byte_end":124913,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124914,"byte_end":124969,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":124970,"byte_end":125038,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125039,"byte_end":125086,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125087,"byte_end":125124,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125125,"byte_end":125181,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125182,"byte_end":125239,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125240,"byte_end":125274,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125275,"byte_end":125308,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125309,"byte_end":125316,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125317,"byte_end":125380,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/ use dispatcher::Dispatch;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125381,"byte_end":125410,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125411,"byte_end":125414,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125415,"byte_end":125460,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125461,"byte_end":125512,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125513,"byte_end":125520,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125521,"byte_end":125599,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ the duration of a block:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125600,"byte_end":125628,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125629,"byte_end":125640,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125641,"byte_end":125672,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125673,"byte_end":125698,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125699,"byte_end":125735,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125736,"byte_end":125774,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125775,"byte_end":125783,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125784,"byte_end":125839,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125840,"byte_end":125908,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125909,"byte_end":125956,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125957,"byte_end":125994,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":125995,"byte_end":126051,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126052,"byte_end":126109,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126110,"byte_end":126144,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126145,"byte_end":126178,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126179,"byte_end":126186,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126187,"byte_end":126250,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126251,"byte_end":126298,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126299,"byte_end":126364,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126365,"byte_end":126393,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126394,"byte_end":126397,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126398,"byte_end":126427,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126428,"byte_end":126475,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/     // my_subscriber is the default","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126476,"byte_end":126515,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126516,"byte_end":126523,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126524,"byte_end":126527,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // no default subscriber again","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126528,"byte_end":126562,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126563,"byte_end":126570,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ It's important to note that `with_default` will not propagate the current","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126571,"byte_end":126648,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126649,"byte_end":126729,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ block. To propagate the default subscriber to new threads, either use","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126730,"byte_end":126803,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126804,"byte_end":126872,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126873,"byte_end":126876,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126877,"byte_end":126954,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":126955,"byte_end":127031,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ program. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127032,"byte_end":127057,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127058,"byte_end":127069,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127070,"byte_end":127101,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127102,"byte_end":127127,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127128,"byte_end":127164,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127165,"byte_end":127203,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127204,"byte_end":127212,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127213,"byte_end":127268,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127269,"byte_end":127337,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127338,"byte_end":127385,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127386,"byte_end":127423,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127424,"byte_end":127480,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127481,"byte_end":127538,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127539,"byte_end":127573,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127574,"byte_end":127607,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127608,"byte_end":127615,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127616,"byte_end":127679,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127680,"byte_end":127727,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127728,"byte_end":127793,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127794,"byte_end":127822,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127823,"byte_end":127826,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ dispatcher::set_global_default(my_dispatch)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127827,"byte_end":127874,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     // `set_global_default` will return an error if the global default","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127875,"byte_end":127949,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/     // subscriber has already been set.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127950,"byte_end":127993,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/     .expect(\"global default was already set!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":127994,"byte_end":128045,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128046,"byte_end":128049,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `my_subscriber` is now the default","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128050,"byte_end":128091,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128092,"byte_end":128099,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128100,"byte_end":128103,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128104,"byte_end":128169,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The thread-local scoped dispatcher (<code>with_default</code>)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128170,"byte_end":128259,"line_start":112,"line_end":112,"column_start":1,"column_end":90}},{"value":"/ requires the Rust standard library. <code>no_std</code> users should","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128260,"byte_end":128332,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ use <a href=\"fn.set_global_default.html\"><code>set_global_default</code></a>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128333,"byte_end":128413,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128414,"byte_end":128426,"line_start":115,"line_end":115,"column_start":1,"column_end":13}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128427,"byte_end":128437,"line_start":116,"line_end":116,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128438,"byte_end":128441,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the Default Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128442,"byte_end":128481,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128482,"byte_end":128485,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ A thread's current default subscriber can be accessed using the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128486,"byte_end":128553,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/ [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128554,"byte_end":128632,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128633,"byte_end":128702,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/ instrumentation.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128703,"byte_end":128723,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128724,"byte_end":128727,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128728,"byte_end":128765,"line_start":125,"line_end":125,"column_start":1,"column_end":38}},{"value":"/ [`with_default`]: with_default","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128766,"byte_end":128800,"line_start":126,"line_end":126,"column_start":1,"column_end":35}},{"value":"/ [`set_global_default`]: set_global_default","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128801,"byte_end":128847,"line_start":127,"line_end":127,"column_start":1,"column_end":47}},{"value":"/ [`get_default`]: get_default","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128848,"byte_end":128880,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/ [`Dispatch`]: Dispatch","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/dispatcher.rs","byte_start":128881,"byte_end":128907,"line_start":129,"line_end":129,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":100},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117}],"decl_id":null,"docs":" `Span` and `Event` key-value data.","sig":null,"attributes":[{"value":"/ `Span` and `Event` key-value data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":129691,"byte_end":129729,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":129730,"byte_end":129733,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Spans and events may be annotated with key-value data, referred to as known","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":129734,"byte_end":129813,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ as _fields_. These fields consist of a mapping from a key (corresponding to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":129814,"byte_end":129893,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ a `&str` but represented internally as an array index) to a [`Value`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":129894,"byte_end":129968,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":129969,"byte_end":129972,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Value`s and `Subscriber`s","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":129973,"byte_end":130005,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130006,"byte_end":130009,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s consume `Value`s as fields attached to [span]s or [`Event`]s.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130010,"byte_end":130089,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ The set of field keys on a given span or is defined on its [`Metadata`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130090,"byte_end":130166,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ When a span is created, it provides [`Attributes`] to the `Subscriber`'s","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130167,"byte_end":130243,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`new_span`] method, containing any fields whose values were provided when","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130244,"byte_end":130322,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ the span was created; and may call the `Subscriber`'s [`record`] method","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130323,"byte_end":130398,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ with additional [`Record`]s if values are added for more of its fields.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130399,"byte_end":130474,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ Similarly, the [`Event`] type passed to the subscriber's [`event`] method","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130475,"byte_end":130552,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ will contain any fields attached to each event.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130553,"byte_end":130604,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130605,"byte_end":130608,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `tracing` represents values as either one of a set of Rust primitives","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130609,"byte_end":130682,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ (`i64`, `u64`, `f64`, `bool`, and `&str`) or using a `fmt::Display` or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130683,"byte_end":130757,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ `fmt::Debug` implementation. `Subscriber`s are provided these primitive","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130758,"byte_end":130833,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ value types as `dyn Value` trait objects.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130834,"byte_end":130879,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130880,"byte_end":130883,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These trait objects can be formatted using `fmt::Debug`, but may also be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130884,"byte_end":130960,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ recorded as typed data by calling the [`Value::record`] method on these","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":130961,"byte_end":131036,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ trait objects with a _visitor_ implementing the [`Visit`] trait. This trait","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131037,"byte_end":131116,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ represents the behavior used to record values of various types. For example,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131117,"byte_end":131197,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ an implementation of `Visit` might record integers by incrementing counters","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131198,"byte_end":131277,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ for their field names rather than printing them.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131278,"byte_end":131330,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131331,"byte_end":131334,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131335,"byte_end":131338,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Using `valuable`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131339,"byte_end":131361,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131362,"byte_end":131365,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `tracing`'s [`Value`] trait is intentionally minimalist: it supports only a small","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131366,"byte_end":131451,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ number of Rust primitives as typed values, and only permits recording","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131452,"byte_end":131525,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ user-defined types with their [`fmt::Debug`] or [`fmt::Display`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131526,"byte_end":131594,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ implementations. However, there are some cases where it may be useful to record","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131595,"byte_end":131678,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ nested values (such as arrays, `Vec`s, or `HashMap`s containing values), or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131679,"byte_end":131758,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ user-defined `struct` and `enum` types without having to format them as","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131759,"byte_end":131834,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ unstructured text.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131835,"byte_end":131857,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131858,"byte_end":131861,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ To address `Value`'s limitations, `tracing` offers experimental support for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131862,"byte_end":131941,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ the [`valuable`] crate, which provides object-safe inspection of structured","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":131942,"byte_end":132021,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ values. User-defined types can implement the [`valuable::Valuable`] trait,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132022,"byte_end":132100,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ and be recorded as a `tracing` field by calling their [`as_value`] method.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132101,"byte_end":132179,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ If the [`Subscriber`] also supports the `valuable` crate, it can","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132180,"byte_end":132248,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ then visit those types fields as structured values using `valuable`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132249,"byte_end":132321,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132322,"byte_end":132325,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132326,"byte_end":132391,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: <code>valuable</code> support is an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132392,"byte_end":132458,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/     <a href = \"../index.html#unstable-features\">unstable feature</a>. See","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132459,"byte_end":132536,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/     the documentation on unstable features for details on how to enable it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132537,"byte_end":132616,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132617,"byte_end":132627,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132628,"byte_end":132631,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132632,"byte_end":132648,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132649,"byte_end":132662,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ // Derive `Valuable` for our types:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132663,"byte_end":132702,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/ use valuable::Valuable;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132703,"byte_end":132730,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132731,"byte_end":132734,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132735,"byte_end":132772,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/ struct User {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132773,"byte_end":132790,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     name: String,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132791,"byte_end":132812,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     age: u32,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132813,"byte_end":132830,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     address: Address,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132831,"byte_end":132856,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132857,"byte_end":132862,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132863,"byte_end":132866,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132867,"byte_end":132904,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/ struct Address {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132905,"byte_end":132925,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/     country: String,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132926,"byte_end":132950,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     city: String,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132951,"byte_end":132972,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     street: String,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132973,"byte_end":132996,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":132997,"byte_end":133002,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133003,"byte_end":133006,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let user = User {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133007,"byte_end":133028,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     name: \"Arwen Undomiel\".to_string(),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133029,"byte_end":133072,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/     age: 3000,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133073,"byte_end":133091,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/     address: Address {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133092,"byte_end":133118,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/         country: \"Middle Earth\".to_string(),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133119,"byte_end":133167,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/         city: \"Rivendell\".to_string(),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133168,"byte_end":133210,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/         street: \"leafy lane\".to_string(),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133211,"byte_end":133256,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     },","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133257,"byte_end":133267,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133268,"byte_end":133274,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133275,"byte_end":133278,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Recording `user` as a `valuable::Value` will allow the `tracing` subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133279,"byte_end":133361,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ // to traverse its fields as a nested, typed structure:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133362,"byte_end":133421,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ tracing::info!(current_user = user.as_value());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133422,"byte_end":133473,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133474,"byte_end":133481,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133482,"byte_end":133485,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Alternatively, the [`valuable()`] function may be used to convert a type","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133486,"byte_end":133562,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ implementing [`Valuable`] into a `tracing` field value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133563,"byte_end":133622,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133623,"byte_end":133626,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ When the `valuable` feature is enabled, the [`Visit`] trait will include an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133627,"byte_end":133706,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ optional [`record_value`] method. `Visit` implementations that wish to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133707,"byte_end":133781,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ record `valuable` values can implement this method with custom behavior.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133782,"byte_end":133858,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ If a visitor does not implement `record_value`, the [`valuable::Value`] will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133859,"byte_end":133939,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ be forwarded to the visitor's [`record_debug`] method.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133940,"byte_end":133998,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":133999,"byte_end":134002,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ [`fmt::Debug`]: std::fmt::Debug","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134003,"byte_end":134038,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"/ [`fmt::Display`]: std::fmt::Debug","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134039,"byte_end":134076,"line_start":98,"line_end":98,"column_start":1,"column_end":38}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134077,"byte_end":134128,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ [`valuable::Valuable`]: https://docs.rs/valuable/latest/valuable/trait.Valuable.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134129,"byte_end":134217,"line_start":100,"line_end":100,"column_start":1,"column_end":89}},{"value":"/ [`as_value`]: https://docs.rs/valuable/latest/valuable/trait.Valuable.html#tymethod.as_value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134218,"byte_end":134314,"line_start":101,"line_end":101,"column_start":1,"column_end":97}},{"value":"/ [`valuable::Value`]: https://docs.rs/valuable/latest/valuable/enum.Value.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134315,"byte_end":134396,"line_start":102,"line_end":102,"column_start":1,"column_end":82}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134397,"byte_end":134434,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/ [`record_value`]: Visit::record_value","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134435,"byte_end":134476,"line_start":104,"line_end":104,"column_start":1,"column_end":42}},{"value":"/ [`record_debug`]: Visit::record_debug","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134477,"byte_end":134518,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"/ [span]: mod@crate::span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134519,"byte_end":134546,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/ [`Event`]: crate::event::Event","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134547,"byte_end":134581,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/ [`Metadata`]: crate::Metadata","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134582,"byte_end":134615,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/ [`Attributes`]: crate::span::Attributes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134616,"byte_end":134659,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/ [`Record`]: crate::span::Record","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134660,"byte_end":134695,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`new_span`]: crate::Subscriber::new_span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134696,"byte_end":134741,"line_start":111,"line_end":111,"column_start":1,"column_end":46}},{"value":"/ [`record`]: crate::Subscriber::record","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134742,"byte_end":134783,"line_start":112,"line_end":112,"column_start":1,"column_end":42}},{"value":"/ [`event`]: crate::Subscriber::event","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134784,"byte_end":134823,"line_start":113,"line_end":113,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135494,"byte_end":135501,"line_start":129,"line_end":129,"column_start":11,"column_end":18},"name":"AsField","qualname":"::field::AsField","value":"AsField: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":106}],"decl_id":null,"docs":" Trait implemented to allow a type to be used as a field key.","sig":null,"attributes":[{"value":"/ Trait implemented to allow a type to be used as a field key.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134879,"byte_end":134943,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134944,"byte_end":134947,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":134948,"byte_end":135013,"line_start":120,"line_end":120,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Although this is implemented for both the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135014,"byte_end":135082,"line_start":121,"line_end":121,"column_start":1,"column_end":69}},{"value":"/ <a href=\"./struct.Field.html\"><code>Field</code></a> type <em>and</em> any","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135083,"byte_end":135161,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ type that can be borrowed as an <code>&str</code>, only <code>Field</code>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135162,"byte_end":135240,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ allows <em>O</em>(1) access.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135241,"byte_end":135273,"line_start":124,"line_end":124,"column_start":1,"column_end":33}},{"value":"/ Indexing a field with a string results in an iterative search that performs","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135274,"byte_end":135353,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ string comparisons. Thus, if possible, once the key for a field is known, it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135354,"byte_end":135434,"line_start":126,"line_end":126,"column_start":1,"column_end":81}},{"value":"/ should be used whenever possible.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135435,"byte_end":135472,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135473,"byte_end":135483,"line_start":128,"line_end":128,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135734,"byte_end":135742,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"as_field","qualname":"::field::AsField::as_field","value":"pub fn as_field(&Self, &Metadata) -> Option<Field>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Attempts to convert `&self` into a `Field` with the specified `metadata`.","sig":null,"attributes":[{"value":"/ Attempts to convert `&self` into a `Field` with the specified `metadata`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135531,"byte_end":135608,"line_start":130,"line_end":130,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135613,"byte_end":135616,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ If `metadata` defines this field, then the field is returned. Otherwise,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135621,"byte_end":135697,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ this returns `None`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135702,"byte_end":135726,"line_start":133,"line_end":133,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":118},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"instrument","qualname":"::instrument","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":448},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":179}],"decl_id":null,"docs":" Attach a span to a `std::future::Future`.\n","sig":null,"attributes":[{"value":"/ Attach a span to a `std::future::Future`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39354,"byte_end":39399,"line_start":961,"line_end":961,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":150},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137000,"byte_end":137010,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"Instrument","qualname":"::instrument::Instrument","value":"Instrument: Sized","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":" Attaches spans to a [`std::future::Future`].","sig":null,"attributes":[{"value":"/ Attaches spans to a [`std::future::Future`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":136824,"byte_end":136872,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":136873,"byte_end":136876,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Extension trait allowing futures to be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":136877,"byte_end":136919,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/ instrumented with a `tracing` [span].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":136920,"byte_end":136961,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":136962,"byte_end":136965,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [span]: super::Span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":136966,"byte_end":136989,"line_start":15,"line_end":15,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139239,"byte_end":139249,"line_start":82,"line_end":82,"column_start":8,"column_end":18},"name":"instrument","qualname":"::instrument::Instrument::instrument","value":"pub fn instrument(Self, Span) -> Instrumented<Self>","parent":{"krate":0,"index":150},"children":[],"decl_id":null,"docs":" Instruments this type with the provided [`Span`], returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the provided [`Span`], returning an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137024,"byte_end":137090,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137095,"byte_end":137122,"line_start":18,"line_end":18,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137127,"byte_end":137130,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The attached [`Span`] will be [entered] every time the instrumented","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137135,"byte_end":137206,"line_start":20,"line_end":20,"column_start":5,"column_end":76}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137211,"byte_end":137236,"line_start":21,"line_end":21,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137241,"byte_end":137244,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137249,"byte_end":137263,"line_start":23,"line_end":23,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137268,"byte_end":137271,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Instrumenting a future:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137276,"byte_end":137303,"line_start":25,"line_end":25,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137308,"byte_end":137311,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137316,"byte_end":137327,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137332,"byte_end":137360,"line_start":28,"line_end":28,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137365,"byte_end":137368,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # async fn doc() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137373,"byte_end":137395,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ let my_future = async {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137400,"byte_end":137427,"line_start":31,"line_end":31,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137432,"byte_end":137446,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137451,"byte_end":137457,"line_start":33,"line_end":33,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137462,"byte_end":137465,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ my_future","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137470,"byte_end":137483,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/     .instrument(tracing::info_span!(\"my_future\"))","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137488,"byte_end":137541,"line_start":36,"line_end":36,"column_start":5,"column_end":58}},{"value":"/     .await","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137546,"byte_end":137560,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137565,"byte_end":137572,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137577,"byte_end":137584,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137589,"byte_end":137592,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ The [`Span::or_current`] combinator can be used in combination with","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137597,"byte_end":137668,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ `instrument` to ensure that the [current span] is attached to the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137673,"byte_end":137742,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ future if the span passed to `instrument` is [disabled]:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137747,"byte_end":137807,"line_start":43,"line_end":43,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137812,"byte_end":137815,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137820,"byte_end":137827,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137832,"byte_end":137860,"line_start":46,"line_end":46,"column_start":5,"column_end":33}},{"value":"/ # mod tokio {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137865,"byte_end":137882,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137887,"byte_end":137948,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137953,"byte_end":137960,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137965,"byte_end":137968,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let my_future = async {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137973,"byte_end":138000,"line_start":51,"line_end":51,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138005,"byte_end":138019,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138024,"byte_end":138030,"line_start":53,"line_end":53,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138035,"byte_end":138038,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let outer_span = tracing::info_span!(\"outer\").entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138043,"byte_end":138103,"line_start":55,"line_end":55,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138108,"byte_end":138111,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ // If the \"my_future\" span is enabled, then the spawned task will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138116,"byte_end":138185,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ // be within both \"my_future\" *and* \"outer\", since \"outer\" is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138190,"byte_end":138255,"line_start":58,"line_end":58,"column_start":5,"column_end":70}},{"value":"/ // \"my_future\"'s parent. However, if \"my_future\" is disabled,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138260,"byte_end":138325,"line_start":59,"line_end":59,"column_start":5,"column_end":70}},{"value":"/ // the spawned task will *not* be in any span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138330,"byte_end":138380,"line_start":60,"line_end":60,"column_start":5,"column_end":55}},{"value":"/ tokio::spawn(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138385,"byte_end":138402,"line_start":61,"line_end":61,"column_start":5,"column_end":22}},{"value":"/     my_future","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138407,"byte_end":138424,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         .instrument(tracing::debug_span!(\"my_future\"))","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138429,"byte_end":138487,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138492,"byte_end":138498,"line_start":64,"line_end":64,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138503,"byte_end":138506,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ // Using `Span::or_current` ensures the spawned task is instrumented","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138511,"byte_end":138583,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ // with the current span, if the new span passed to `instrument` is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138588,"byte_end":138659,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ // not enabled. This means that if the \"my_future\"  span is disabled,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138664,"byte_end":138737,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ // the spawned task will still be instrumented with the \"outer\" span:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138742,"byte_end":138815,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ # let my_future = async {};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138820,"byte_end":138851,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ tokio::spawn(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138856,"byte_end":138873,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/    my_future","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138878,"byte_end":138894,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/         .instrument(tracing::debug_span!(\"my_future\").or_current())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138899,"byte_end":138970,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ );","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138975,"byte_end":138981,"line_start":74,"line_end":74,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138986,"byte_end":138993,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":138998,"byte_end":139001,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [entered]: super::Span::enter()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139006,"byte_end":139041,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ [`Span::or_current`]: super::Span::or_current()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139046,"byte_end":139097,"line_start":78,"line_end":78,"column_start":5,"column_end":56}},{"value":"/ [current span]: super::Span::current()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139102,"byte_end":139144,"line_start":79,"line_end":79,"column_start":5,"column_end":47}},{"value":"/ [disabled]: super::Span::is_disabled()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139149,"byte_end":139191,"line_start":80,"line_end":80,"column_start":5,"column_end":47}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139196,"byte_end":139231,"line_start":81,"line_end":81,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140370,"byte_end":140385,"line_start":121,"line_end":121,"column_start":8,"column_end":23},"name":"in_current_span","qualname":"::instrument::Instrument::in_current_span","value":"pub fn in_current_span(Self) -> Instrumented<Self>","parent":{"krate":0,"index":150},"children":[],"decl_id":null,"docs":" Instruments this type with the [current] [`Span`], returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the [current] [`Span`], returning an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139346,"byte_end":139413,"line_start":86,"line_end":86,"column_start":5,"column_end":72}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139418,"byte_end":139445,"line_start":87,"line_end":87,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139450,"byte_end":139453,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The attached [`Span`] will be [entered] every time the instrumented","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139458,"byte_end":139529,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139534,"byte_end":139559,"line_start":90,"line_end":90,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139564,"byte_end":139567,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current span when spawning a new future.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139572,"byte_end":139650,"line_start":92,"line_end":92,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139655,"byte_end":139658,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139663,"byte_end":139677,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139682,"byte_end":139685,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139690,"byte_end":139701,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139706,"byte_end":139734,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139739,"byte_end":139742,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # mod tokio {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139747,"byte_end":139764,"line_start":99,"line_end":99,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139769,"byte_end":139830,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139835,"byte_end":139842,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # async fn doc() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139847,"byte_end":139869,"line_start":102,"line_end":102,"column_start":5,"column_end":27}},{"value":"/ let span = tracing::info_span!(\"my_span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139874,"byte_end":139920,"line_start":103,"line_end":103,"column_start":5,"column_end":51}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139925,"byte_end":139955,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139960,"byte_end":139963,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139968,"byte_end":139978,"line_start":106,"line_end":106,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139983,"byte_end":139986,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let future = async {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":139991,"byte_end":140015,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/     tracing::debug!(\"this event will occur inside `my_span`\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140020,"byte_end":140086,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140091,"byte_end":140105,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140110,"byte_end":140116,"line_start":111,"line_end":111,"column_start":5,"column_end":11}},{"value":"/ tokio::spawn(future.in_current_span());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140121,"byte_end":140164,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140169,"byte_end":140176,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140181,"byte_end":140188,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140193,"byte_end":140196,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [current]: super::Span::current()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140201,"byte_end":140238,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/ [entered]: super::Span::enter()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140243,"byte_end":140278,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/ [`Span`]: crate::Span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140283,"byte_end":140308,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140313,"byte_end":140348,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140353,"byte_end":140362,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":153},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140635,"byte_end":140649,"line_start":129,"line_end":129,"column_start":11,"column_end":25},"name":"WithSubscriber","qualname":"::instrument::WithSubscriber","value":"WithSubscriber: Sized","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156}],"decl_id":null,"docs":" Extension trait allowing futures to be instrumented with\n a `tracing` [`Subscriber`](crate::Subscriber).\n","sig":null,"attributes":[{"value":"/ Extension trait allowing futures to be instrumented with","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140466,"byte_end":140526,"line_start":126,"line_end":126,"column_start":1,"column_end":61}},{"value":"/ a `tracing` [`Subscriber`](crate::Subscriber).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140527,"byte_end":140577,"line_start":127,"line_end":127,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142177,"byte_end":142192,"line_start":169,"line_end":169,"column_start":8,"column_end":23},"name":"with_subscriber","qualname":"::instrument::WithSubscriber::with_subscriber","value":"pub fn with_subscriber<S>(Self, S) -> WithDispatch<Self> where\nS: Into<Dispatch>","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Attaches the provided [`Subscriber`] to this type, returning a\n [`WithDispatch`] wrapper.","sig":null,"attributes":[{"value":"/ Attaches the provided [`Subscriber`] to this type, returning a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140663,"byte_end":140729,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/ [`WithDispatch`] wrapper.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140734,"byte_end":140763,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140768,"byte_end":140771,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The attached [`Subscriber`] will be set as the [default] when the returned","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140776,"byte_end":140854,"line_start":133,"line_end":133,"column_start":5,"column_end":83}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140859,"byte_end":140884,"line_start":134,"line_end":134,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140889,"byte_end":140892,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140897,"byte_end":140911,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140916,"byte_end":140919,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140924,"byte_end":140931,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ # use tracing::subscriber::NoSubscriber as MySubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140936,"byte_end":140996,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ # use tracing::subscriber::NoSubscriber as MyOtherSubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141001,"byte_end":141066,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/ # async fn docs() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141071,"byte_end":141094,"line_start":141,"line_end":141,"column_start":5,"column_end":28}},{"value":"/ use tracing::instrument::WithSubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141099,"byte_end":141143,"line_start":142,"line_end":142,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141148,"byte_end":141151,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ // Set the default `Subscriber`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141156,"byte_end":141191,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/ let _default = tracing::subscriber::set_default(MySubscriber::default());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141196,"byte_end":141273,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141278,"byte_end":141281,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ tracing::info!(\"this event will be recorded by the default `Subscriber`\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141286,"byte_end":141364,"line_start":147,"line_end":147,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141369,"byte_end":141372,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // Create a different `Subscriber` and attach it to a future.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141377,"byte_end":141442,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ let other_subscriber = MyOtherSubscriber::default();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141447,"byte_end":141503,"line_start":150,"line_end":150,"column_start":5,"column_end":61}},{"value":"/ let future = async {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141508,"byte_end":141532,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/     tracing::info!(\"this event will be recorded by the other `Subscriber`\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141537,"byte_end":141617,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141622,"byte_end":141636,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141641,"byte_end":141647,"line_start":154,"line_end":154,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141652,"byte_end":141655,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ future","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141660,"byte_end":141670,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/     // Attach the other `Subscriber` to the future before awaiting it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141675,"byte_end":141748,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/     .with_subscriber(other_subscriber)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141753,"byte_end":141795,"line_start":158,"line_end":158,"column_start":5,"column_end":47}},{"value":"/     .await;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141800,"byte_end":141815,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141820,"byte_end":141823,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // Once the future has completed, we return to the default `Subscriber`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141828,"byte_end":141904,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ tracing::info!(\"this event will be recorded by the default `Subscriber`\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141909,"byte_end":141987,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":141992,"byte_end":141999,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142004,"byte_end":142011,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142016,"byte_end":142019,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: super::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142024,"byte_end":142061,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/ [default]: crate::dispatcher#setting-the-default-subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142066,"byte_end":142129,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142134,"byte_end":142169,"line_start":168,"line_end":168,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":144075,"byte_end":144098,"line_start":221,"line_end":221,"column_start":8,"column_end":31},"name":"with_current_subscriber","qualname":"::instrument::WithSubscriber::with_current_subscriber","value":"pub fn with_current_subscriber(Self) -> WithDispatch<Self>","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Attaches the current [default] [`Subscriber`] to this type, returning a\n [`WithDispatch`] wrapper.","sig":null,"attributes":[{"value":"/ Attaches the current [default] [`Subscriber`] to this type, returning a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142394,"byte_end":142469,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ [`WithDispatch`] wrapper.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142474,"byte_end":142503,"line_start":180,"line_end":180,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142508,"byte_end":142511,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The attached `Subscriber` will be set as the [default] when the returned","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142516,"byte_end":142592,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142597,"byte_end":142622,"line_start":183,"line_end":183,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142627,"byte_end":142630,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current dispatcher context when","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142635,"byte_end":142704,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ spawning a new future that may run on a different thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142709,"byte_end":142770,"line_start":186,"line_end":186,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142775,"byte_end":142778,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142783,"byte_end":142797,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142802,"byte_end":142805,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142810,"byte_end":142817,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # mod tokio {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142822,"byte_end":142839,"line_start":191,"line_end":191,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142844,"byte_end":142905,"line_start":192,"line_end":192,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142910,"byte_end":142917,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ # use tracing::subscriber::NoSubscriber as MySubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142922,"byte_end":142982,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"/ # async fn docs() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":142987,"byte_end":143010,"line_start":195,"line_end":195,"column_start":5,"column_end":28}},{"value":"/ use tracing::instrument::WithSubscriber;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143015,"byte_end":143059,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143064,"byte_end":143067,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // Using `set_default` (rather than `set_global_default`) sets the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143072,"byte_end":143142,"line_start":198,"line_end":198,"column_start":5,"column_end":75}},{"value":"/ // default `Subscriber` for *this* thread only.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143147,"byte_end":143198,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ let _default = tracing::subscriber::set_default(MySubscriber::default());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143203,"byte_end":143280,"line_start":200,"line_end":200,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143285,"byte_end":143288,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let future = async {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143293,"byte_end":143317,"line_start":202,"line_end":202,"column_start":5,"column_end":29}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143322,"byte_end":143336,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143341,"byte_end":143347,"line_start":204,"line_end":204,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143352,"byte_end":143355,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ // If a multi-threaded async runtime is in use, this spawned task may","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143360,"byte_end":143433,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ // run on a different thread, in a different default `Subscriber`'s context.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143438,"byte_end":143518,"line_start":207,"line_end":207,"column_start":5,"column_end":85}},{"value":"/ tokio::spawn(future);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143523,"byte_end":143548,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143553,"byte_end":143556,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ // However, calling `with_current_subscriber` on the future before","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143561,"byte_end":143631,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ // spawning it, ensures that the current thread's default `Subscriber` is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143636,"byte_end":143713,"line_start":211,"line_end":211,"column_start":5,"column_end":82}},{"value":"/ // propagated to the spawned task, regardless of where it executes:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143718,"byte_end":143789,"line_start":212,"line_end":212,"column_start":5,"column_end":76}},{"value":"/ # let future = async { };","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143794,"byte_end":143823,"line_start":213,"line_end":213,"column_start":5,"column_end":34}},{"value":"/ tokio::spawn(future.with_current_subscriber());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143828,"byte_end":143879,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143884,"byte_end":143891,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143896,"byte_end":143903,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ [`Subscriber`]: super::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143908,"byte_end":143945,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/ [default]: crate::dispatcher#setting-the-default-subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":143950,"byte_end":144013,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":144018,"byte_end":144053,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":144058,"byte_end":144067,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":144764,"byte_end":144776,"line_start":240,"line_end":240,"column_start":16,"column_end":28},"name":"WithDispatch","qualname":"::instrument::WithDispatch","value":"WithDispatch {  }","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"decl_id":null,"docs":" A [`Future`] that has been instrumented with a `tracing` [`Subscriber`].","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13783249,"byte_end":13783258,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145266,"byte_end":145278,"line_start":257,"line_end":257,"column_start":16,"column_end":28},"name":"Instrumented","qualname":"::instrument::Instrumented","value":"Instrumented {  }","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" A [`Future`] that has been instrumented with a `tracing` [`Span`].","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13783249,"byte_end":13783258,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145778,"byte_end":145782,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"span","qualname":"<Instrumented<T>>::span","value":"pub fn span(&Self) -> &Span","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Borrows the `Span` that this type is instrumented by.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145709,"byte_end":145766,"line_start":279,"line_end":279,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145908,"byte_end":145916,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"span_mut","qualname":"<Instrumented<T>>::span_mut","value":"pub fn span_mut(&mut Self) -> &mut Span","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the `Span` that this type is instrumented by.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145831,"byte_end":145896,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146018,"byte_end":146023,"line_start":290,"line_end":290,"column_start":12,"column_end":17},"name":"inner","qualname":"<Instrumented<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145977,"byte_end":146006,"line_start":289,"line_end":289,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146119,"byte_end":146128,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Instrumented<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146070,"byte_end":146107,"line_start":294,"line_end":294,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146246,"byte_end":146259,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<Instrumented<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146187,"byte_end":146234,"line_start":299,"line_end":299,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146402,"byte_end":146415,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<Instrumented<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146335,"byte_end":146390,"line_start":304,"line_end":304,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146614,"byte_end":146624,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Instrumented<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Instrumented`, returning the wrapped type.","sig":null,"attributes":[{"value":"/ Consumes the `Instrumented`, returning the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146495,"byte_end":146555,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146560,"byte_end":146563,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Note that this drops the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146568,"byte_end":146602,"line_start":311,"line_end":311,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147395,"byte_end":147405,"line_start":340,"line_end":340,"column_start":12,"column_end":22},"name":"dispatcher","qualname":"<WithDispatch<T>>::dispatcher","value":"pub fn dispatcher(&Self) -> &Dispatch","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`Dispatch`] that is entered when this type is polled.\n","sig":null,"attributes":[{"value":"/ Borrows the [`Dispatch`] that is entered when this type is polled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147313,"byte_end":147383,"line_start":339,"line_end":339,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147505,"byte_end":147510,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"name":"inner","qualname":"<WithDispatch<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147464,"byte_end":147493,"line_start":344,"line_end":344,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147606,"byte_end":147615,"line_start":350,"line_end":350,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<WithDispatch<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147557,"byte_end":147594,"line_start":349,"line_end":349,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147733,"byte_end":147746,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<WithDispatch<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147674,"byte_end":147721,"line_start":354,"line_end":354,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147889,"byte_end":147902,"line_start":360,"line_end":360,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<WithDispatch<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147822,"byte_end":147877,"line_start":359,"line_end":359,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":148101,"byte_end":148111,"line_start":367,"line_end":367,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WithDispatch<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Instrumented`, returning the wrapped type.","sig":null,"attributes":[{"value":"/ Consumes the `Instrumented`, returning the wrapped type.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147982,"byte_end":148042,"line_start":364,"line_end":364,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":148047,"byte_end":148050,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Note that this drops the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":148055,"byte_end":148089,"line_start":366,"line_end":366,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":187},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"level_filters","qualname":"::level_filters","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":491}],"decl_id":null,"docs":" Trace verbosity level filtering.","sig":null,"attributes":[{"value":"/ Trace verbosity level filtering.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148153,"byte_end":148189,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148190,"byte_end":148193,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Compile time filters","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148194,"byte_end":148220,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148221,"byte_end":148224,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Trace verbosity levels can be statically disabled at compile time via Cargo","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148225,"byte_end":148304,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ features, similar to the [`log` crate]. Trace instrumentation at disabled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148305,"byte_end":148382,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ levels will be skipped and will not even be present in the resulting binary","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148383,"byte_end":148462,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ unless the verbosity level is specified dynamically. This level is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148463,"byte_end":148533,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ configured separately for release and debug builds. The features are:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148534,"byte_end":148607,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148608,"byte_end":148611,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `max_level_off`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148612,"byte_end":148633,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ * `max_level_error`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148634,"byte_end":148657,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ * `max_level_warn`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148658,"byte_end":148680,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/ * `max_level_info`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148681,"byte_end":148703,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ * `max_level_debug`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148704,"byte_end":148727,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/ * `max_level_trace`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148728,"byte_end":148751,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/ * `release_max_level_off`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148752,"byte_end":148781,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ * `release_max_level_error`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148782,"byte_end":148813,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_warn`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148814,"byte_end":148844,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_info`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148845,"byte_end":148875,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_debug`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148876,"byte_end":148907,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_trace`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148908,"byte_end":148939,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148940,"byte_end":148943,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ These features control the value of the `STATIC_MAX_LEVEL` constant. The","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":148944,"byte_end":149020,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ instrumentation macros macros check this value before recording an event or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149021,"byte_end":149100,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ constructing a span. By default, no levels are disabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149101,"byte_end":149161,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149162,"byte_end":149165,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For example, a crate can disable trace level instrumentation in debug builds","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149166,"byte_end":149246,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ and trace, debug, and info level instrumentation in release builds with the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149247,"byte_end":149326,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ following configuration:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149327,"byte_end":149355,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149356,"byte_end":149359,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149360,"byte_end":149371,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149372,"byte_end":149390,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/ tracing = { version = \"0.1\", features = [\"max_level_debug\", \"release_max_level_warn\"] }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149391,"byte_end":149482,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149483,"byte_end":149490,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ## Notes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149491,"byte_end":149503,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149504,"byte_end":149507,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Please note that `tracing`'s static max level features do *not* control the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149508,"byte_end":149587,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ [`log`] records that may be emitted when [`tracing`'s \"log\" feature flag][f] is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149588,"byte_end":149671,"line_start":39,"line_end":39,"column_start":1,"column_end":84}},{"value":"/ enabled. This is to allow `tracing` to be disabled entirely at compile time","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149672,"byte_end":149751,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ while still emitting `log` records --- such as when a library using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149752,"byte_end":149823,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ `tracing` is used by an application using `log` that doesn't want to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149824,"byte_end":149896,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ generate any `tracing`-related code, but does want to collect `log` records.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149897,"byte_end":149977,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149978,"byte_end":149981,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This means that if the \"log\" feature is in use, some code may be generated","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":149982,"byte_end":150060,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ for `log` records emitted by disabled `tracing` events. If this is not","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150061,"byte_end":150135,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ desirable, `log` records may be disabled separately using [`log`'s static","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150136,"byte_end":150213,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ max level features][`log` crate].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150214,"byte_end":150251,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150252,"byte_end":150255,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150256,"byte_end":150289,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ [`log` crate]: https://docs.rs/log/latest/log/#compile-time-filters","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150290,"byte_end":150361,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ [f]: https://docs.rs/tracing/latest/tracing/#emitting-log-records","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150362,"byte_end":150431,"line_start":52,"line_end":52,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150995,"byte_end":151011,"line_start":66,"line_end":66,"column_start":11,"column_end":27},"name":"STATIC_MAX_LEVEL","qualname":"::level_filters::STATIC_MAX_LEVEL","value":"LevelFilter","parent":null,"children":[],"decl_id":null,"docs":" The statically configured maximum trace level.","sig":null,"attributes":[{"value":"/ The statically configured maximum trace level.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150503,"byte_end":150553,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150554,"byte_end":150557,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation] for information on how to configure","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150558,"byte_end":150634,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ this.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150635,"byte_end":150644,"line_start":58,"line_end":58,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150645,"byte_end":150648,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This value is checked by the `event!` and `span!` macros. Code that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150649,"byte_end":150720,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ manually constructs events or spans via the `Event::record` function or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150721,"byte_end":150796,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ `Span` constructors should compare the level against this value to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150797,"byte_end":150867,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ determine if those spans or events are enabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150868,"byte_end":150919,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150920,"byte_end":150923,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [module-level documentation]: super#compile-time-filters","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/level_filters.rs","byte_start":150924,"byte_end":150984,"line_start":65,"line_end":65,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":196},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":246},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":" Spans represent periods of time in which a program was executing in a\n particular context.","sig":null,"attributes":[{"value":"/ Spans represent periods of time in which a program was executing in a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152552,"byte_end":152625,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ particular context.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152626,"byte_end":152649,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152650,"byte_end":152653,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A span consists of [fields], user-defined key-value pairs of arbitrary data","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152654,"byte_end":152733,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ that describe the context the span represents, and a set of fixed attributes","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152734,"byte_end":152814,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ that describe all `tracing` spans and events. Attributes describing spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152815,"byte_end":152892,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ include:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152893,"byte_end":152905,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152906,"byte_end":152909,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - An [`Id`] assigned by the subscriber that uniquely identifies it in relation","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152910,"byte_end":152992,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/   to other spans.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":152993,"byte_end":153014,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/ - The span's [parent] in the trace tree.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153015,"byte_end":153059,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ - [Metadata] that describes static characteristics of all spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153060,"byte_end":153127,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/   originating from that callsite, such as its name, source code location,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153128,"byte_end":153205,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   [verbosity level], and the names of its fields.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153206,"byte_end":153259,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153260,"byte_end":153263,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Creating Spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153264,"byte_end":153284,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153285,"byte_end":153288,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Spans are created using the [`span!`] macro. This macro is invoked with the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153289,"byte_end":153368,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ following arguments, in order:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153369,"byte_end":153403,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153404,"byte_end":153407,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - The [`target`] and/or [`parent`][parent] attributes, if the user wishes to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153408,"byte_end":153488,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/   override their default values.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153489,"byte_end":153525,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ - The span's [verbosity level]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153526,"byte_end":153560,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ - A string literal providing the span's name.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153561,"byte_end":153610,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ - Finally, between zero and 32 arbitrary key/value fields.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153611,"byte_end":153673,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153674,"byte_end":153677,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`target`]: super::Metadata::target","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153678,"byte_end":153717,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153718,"byte_end":153721,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153722,"byte_end":153738,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153739,"byte_end":153750,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153751,"byte_end":153782,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153783,"byte_end":153786,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ /// Construct a new span at the `INFO` level named \"my_span\", with a single","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153787,"byte_end":153866,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ /// field named answer , with the value `42`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153867,"byte_end":153916,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ let my_span = span!(Level::INFO, \"my_span\", answer = 42);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153917,"byte_end":153978,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153979,"byte_end":153986,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153987,"byte_end":153990,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The documentation for the [`span!`] macro provides additional examples of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":153991,"byte_end":154068,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ the various options that exist when creating spans.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154069,"byte_end":154124,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154125,"byte_end":154128,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The [`trace_span!`], [`debug_span!`], [`info_span!`], [`warn_span!`], and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154129,"byte_end":154206,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ [`error_span!`] exist as shorthand for constructing spans at various","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154207,"byte_end":154279,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ verbosity levels.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154280,"byte_end":154301,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154302,"byte_end":154305,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Recording Span Creation","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154306,"byte_end":154336,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154337,"byte_end":154340,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The [`Attributes`] type contains data associated with a span, and is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154341,"byte_end":154413,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/ provided to the [`Subscriber`] when a new span is created. It contains","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154414,"byte_end":154488,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ the span's metadata, the ID of [the span's parent][parent] if one was","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154489,"byte_end":154562,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ explicitly set, and any fields whose values were recorded when the span was","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154563,"byte_end":154642,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ constructed. The subscriber, which is responsible for recording `tracing`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154643,"byte_end":154720,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ data, can then store or record these values.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154721,"byte_end":154769,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154770,"byte_end":154773,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # The Span Lifecycle","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154774,"byte_end":154798,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154799,"byte_end":154802,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Entering a Span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154803,"byte_end":154825,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154826,"byte_end":154829,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ A thread of execution is said to _enter_ a span when it begins executing,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154830,"byte_end":154907,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ and _exit_ the span when it switches to another context. Spans may be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154908,"byte_end":154981,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ entered through the [`enter`], [`entered`], and [`in_scope`] methods.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":154982,"byte_end":155055,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155056,"byte_end":155059,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The [`enter`] method enters a span, returning a [guard] that exits the span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155060,"byte_end":155139,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ when dropped","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155140,"byte_end":155156,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155157,"byte_end":155164,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155165,"byte_end":155198,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155199,"byte_end":155223,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155224,"byte_end":155281,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155282,"byte_end":155285,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // `my_span` exists but has not been entered.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155286,"byte_end":155335,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155336,"byte_end":155339,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // Enter `my_span`...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155340,"byte_end":155365,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let _enter = my_span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155366,"byte_end":155399,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155400,"byte_end":155403,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // Perform some work inside of the context of `my_span`...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155404,"byte_end":155466,"line_start":74,"line_end":74,"column_start":1,"column_end":63}},{"value":"/ // Dropping the `_enter` guard will exit the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155467,"byte_end":155521,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155522,"byte_end":155528,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155529,"byte_end":155532,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155533,"byte_end":155659,"line_start":78,"line_end":78,"column_start":1,"column_end":127}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155660,"byte_end":155744,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/     <code>Span::enter</code> may produce incorrect traces if the returned drop","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155745,"byte_end":155827,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/     guard is held across an await point. See","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155828,"byte_end":155876,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/     <a href=\"struct.Span.html#in-asynchronous-code\">the method documentation</a>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155877,"byte_end":155961,"line_start":82,"line_end":82,"column_start":1,"column_end":85}},{"value":"/     for details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155962,"byte_end":155982,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/ </pre></div>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":155983,"byte_end":155999,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156000,"byte_end":156003,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The [`entered`] method is analogous to [`enter`], but moves the span into","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156004,"byte_end":156081,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ the returned guard, rather than borrowing it. This allows creating and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156082,"byte_end":156156,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ entering a span in a single expression:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156157,"byte_end":156200,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156201,"byte_end":156204,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156205,"byte_end":156212,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156213,"byte_end":156246,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/ // Create a span and enter it, returning a guard:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156247,"byte_end":156300,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/ let span = span!(Level::INFO, \"my_span\").entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156301,"byte_end":156356,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156357,"byte_end":156360,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // We are now inside the span! Like `enter()`, the guard returned by","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156361,"byte_end":156433,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/ // `entered()` will exit the span when it is dropped...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156434,"byte_end":156493,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156494,"byte_end":156497,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // ...but, it can also be exited explicitly, returning the `Span`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156498,"byte_end":156567,"line_start":98,"line_end":98,"column_start":1,"column_end":70}},{"value":"/ // struct:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156568,"byte_end":156582,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/ let span = span.exit();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156583,"byte_end":156610,"line_start":100,"line_end":100,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156611,"byte_end":156618,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156619,"byte_end":156622,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Finally, [`in_scope`] takes a closure or function pointer and executes it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156623,"byte_end":156700,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ inside the span:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156701,"byte_end":156721,"line_start":104,"line_end":104,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156722,"byte_end":156725,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156726,"byte_end":156733,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156734,"byte_end":156767,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156768,"byte_end":156792,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var = &my_var);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156793,"byte_end":156860,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156861,"byte_end":156864,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156865,"byte_end":156890,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/     // perform some work in the context of `my_span`...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156891,"byte_end":156950,"line_start":112,"line_end":112,"column_start":1,"column_end":60}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156951,"byte_end":156958,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156959,"byte_end":156962,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ // Perform some work outside of the context of `my_span`...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":156963,"byte_end":157026,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157027,"byte_end":157030,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157031,"byte_end":157056,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/     // Perform some more work in the context of `my_span`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157057,"byte_end":157119,"line_start":118,"line_end":118,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157120,"byte_end":157127,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157128,"byte_end":157135,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157136,"byte_end":157139,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157140,"byte_end":157205,"line_start":122,"line_end":122,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: Since entering a span takes <code>&self</code>, and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157206,"byte_end":157288,"line_start":123,"line_end":123,"column_start":1,"column_end":83}},{"value":"/     <code>Span</code>s are <code>Clone</code>, <code>Send</code>, and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157289,"byte_end":157362,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/     <code>Sync</code>, it is entirely valid for multiple threads to enter the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157363,"byte_end":157444,"line_start":125,"line_end":125,"column_start":1,"column_end":82}},{"value":"/     same span concurrently.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157445,"byte_end":157476,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157477,"byte_end":157487,"line_start":127,"line_end":127,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157488,"byte_end":157491,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ## Span Relationships","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157492,"byte_end":157517,"line_start":129,"line_end":129,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157518,"byte_end":157521,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Spans form a tree structure — unless it is a root span, all spans have a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157522,"byte_end":157600,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ _parent_, and may have one or more _children_. When a new span is created,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157601,"byte_end":157679,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ the current span becomes the new span's parent. The total execution time of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157680,"byte_end":157759,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ a span consists of the time spent in that span and in the entire subtree","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157760,"byte_end":157836,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"/ represented by its children. Thus, a parent span always lasts for at least","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157837,"byte_end":157915,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ as long as the longest-executing span in its subtree.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157916,"byte_end":157973,"line_start":136,"line_end":136,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157974,"byte_end":157977,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157978,"byte_end":157985,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":157986,"byte_end":158019,"line_start":139,"line_end":139,"column_start":1,"column_end":34}},{"value":"/ // this span is considered the \"root\" of a new trace tree:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158020,"byte_end":158082,"line_start":140,"line_end":140,"column_start":1,"column_end":63}},{"value":"/ span!(Level::INFO, \"root\").in_scope(|| {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158083,"byte_end":158127,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/     // since we are now inside \"root\", this span is considered a child","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158128,"byte_end":158202,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/     // of \"root\":","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158203,"byte_end":158224,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/     span!(Level::DEBUG, \"outer_child\").in_scope(|| {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158225,"byte_end":158281,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/         // this span is a child of \"outer_child\", which is in turn a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158282,"byte_end":158354,"line_start":145,"line_end":145,"column_start":1,"column_end":73}},{"value":"/         // child of \"root\":","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158355,"byte_end":158386,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/         span!(Level::TRACE, \"inner_child\").in_scope(|| {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158387,"byte_end":158447,"line_start":147,"line_end":147,"column_start":1,"column_end":61}},{"value":"/             // and so on...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158448,"byte_end":158479,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/         });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158480,"byte_end":158495,"line_start":149,"line_end":149,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158496,"byte_end":158507,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/     // another span created here would also be a child of \"root\".","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158508,"byte_end":158577,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158578,"byte_end":158585,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158586,"byte_end":158592,"line_start":153,"line_end":153,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158593,"byte_end":158596,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ In addition, the parent of a span may be explicitly specified in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158597,"byte_end":158665,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/ the `span!` macro. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158666,"byte_end":158701,"line_start":156,"line_end":156,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158702,"byte_end":158705,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158706,"byte_end":158717,"line_start":158,"line_end":158,"column_start":1,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158718,"byte_end":158751,"line_start":159,"line_end":159,"column_start":1,"column_end":34}},{"value":"/ // Create, but do not enter, a span called \"foo\".","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158752,"byte_end":158805,"line_start":160,"line_end":160,"column_start":1,"column_end":54}},{"value":"/ let foo = span!(Level::INFO, \"foo\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158806,"byte_end":158846,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158847,"byte_end":158850,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // Create and enter a span called \"bar\".","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158851,"byte_end":158895,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ let bar = span!(Level::INFO, \"bar\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158896,"byte_end":158936,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"/ let _enter = bar.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158937,"byte_end":158966,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158967,"byte_end":158970,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ // Although we have currently entered \"bar\", \"baz\"'s parent span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":158971,"byte_end":159039,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ // will be \"foo\".","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159040,"byte_end":159061,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/ let baz = span!(parent: &foo, Level::INFO, \"baz\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159062,"byte_end":159116,"line_start":169,"line_end":169,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159117,"byte_end":159124,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159125,"byte_end":159128,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ A child span should typically be considered _part_ of its parent. For","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159129,"byte_end":159202,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ example, if a subscriber is recording the length of time spent in various","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159203,"byte_end":159280,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ spans, it should generally include the time spent in a span's children as","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159281,"byte_end":159358,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ part of that span's duration.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159359,"byte_end":159392,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159393,"byte_end":159396,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ In addition to having zero or one parent, a span may also _follow from_ any","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159397,"byte_end":159476,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/ number of other spans. This indicates a causal relationship between the span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159477,"byte_end":159557,"line_start":178,"line_end":178,"column_start":1,"column_end":81}},{"value":"/ and the spans that it follows from, but a follower is *not* typically","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159558,"byte_end":159631,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/ considered part of the duration of the span it follows. Unlike the parent, a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159632,"byte_end":159712,"line_start":180,"line_end":180,"column_start":1,"column_end":81}},{"value":"/ span may record that it follows from another span after it is created, using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159713,"byte_end":159793,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ the [`follows_from`] method.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159794,"byte_end":159826,"line_start":182,"line_end":182,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159827,"byte_end":159830,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a listener task in a server. As the listener accepts","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159831,"byte_end":159911,"line_start":184,"line_end":184,"column_start":1,"column_end":81}},{"value":"/ incoming connections, it spawns new tasks that handle those connections. We","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159912,"byte_end":159991,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ might want to have a span representing the listener, and instrument each","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":159992,"byte_end":160068,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ spawned handler task with its own span. We would want our instrumentation to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160069,"byte_end":160149,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ record that the handler tasks were spawned as a result of the listener task.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160150,"byte_end":160230,"line_start":188,"line_end":188,"column_start":1,"column_end":81}},{"value":"/ However, we might not consider the handler tasks to be _part_ of the time","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160231,"byte_end":160308,"line_start":189,"line_end":189,"column_start":1,"column_end":78}},{"value":"/ spent in the listener task, so we would not consider those spans children of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160309,"byte_end":160389,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ the listener span. Instead, we would record that the handler tasks follow","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160390,"byte_end":160467,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ from the listener, recording the causal relationship but treating the spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160468,"byte_end":160547,"line_start":192,"line_end":192,"column_start":1,"column_end":80}},{"value":"/ as separate durations.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160548,"byte_end":160574,"line_start":193,"line_end":193,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160575,"byte_end":160578,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ## Closing Spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160579,"byte_end":160599,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160600,"byte_end":160603,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Execution may enter and exit a span multiple times before that span is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160604,"byte_end":160678,"line_start":197,"line_end":197,"column_start":1,"column_end":75}},{"value":"/ _closed_. Consider, for example, a future which has an associated","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160679,"byte_end":160748,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/ span and enters that span every time it is polled:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160749,"byte_end":160803,"line_start":199,"line_end":199,"column_start":1,"column_end":55}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160804,"byte_end":160815,"line_start":200,"line_end":200,"column_start":1,"column_end":12}},{"value":"/ # use std::future::Future;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160816,"byte_end":160846,"line_start":201,"line_end":201,"column_start":1,"column_end":31}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160847,"byte_end":160884,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160885,"byte_end":160909,"line_start":203,"line_end":203,"column_start":1,"column_end":25}},{"value":"/ struct MyFuture {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160910,"byte_end":160931,"line_start":204,"line_end":204,"column_start":1,"column_end":22}},{"value":"/    // data","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160932,"byte_end":160946,"line_start":205,"line_end":205,"column_start":1,"column_end":15}},{"value":"/    span: tracing::Span,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160947,"byte_end":160974,"line_start":206,"line_end":206,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160975,"byte_end":160980,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160981,"byte_end":160984,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":160985,"byte_end":161015,"line_start":209,"line_end":209,"column_start":1,"column_end":31}},{"value":"/     type Output = ();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161016,"byte_end":161041,"line_start":210,"line_end":210,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161042,"byte_end":161045,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     fn poll(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161046,"byte_end":161130,"line_start":212,"line_end":212,"column_start":1,"column_end":85}},{"value":"/         let _enter = self.span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161131,"byte_end":161174,"line_start":213,"line_end":213,"column_start":1,"column_end":44}},{"value":"/         // Do actual future work...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161175,"byte_end":161214,"line_start":214,"line_end":214,"column_start":1,"column_end":40}},{"value":"/ # Poll::Ready(())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161215,"byte_end":161236,"line_start":215,"line_end":215,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161237,"byte_end":161246,"line_start":216,"line_end":216,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161247,"byte_end":161252,"line_start":217,"line_end":217,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161253,"byte_end":161260,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161261,"byte_end":161264,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ If this future was spawned on an executor, it might yield one or more times","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161265,"byte_end":161344,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ before `poll` returns [`Poll::Ready`]. If the future were to yield, then","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161345,"byte_end":161421,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ the executor would move on to poll the next future, which may _also_ enter","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161422,"byte_end":161500,"line_start":222,"line_end":222,"column_start":1,"column_end":79}},{"value":"/ an associated span or series of spans. Therefore, it is valid for a span to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161501,"byte_end":161580,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ be entered repeatedly before it completes. Only the time when that span or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161581,"byte_end":161659,"line_start":224,"line_end":224,"column_start":1,"column_end":79}},{"value":"/ one of its children was the current span is considered to be time spent in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161660,"byte_end":161738,"line_start":225,"line_end":225,"column_start":1,"column_end":79}},{"value":"/ that span. A span which is not executing and has not yet been closed is said","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161739,"byte_end":161819,"line_start":226,"line_end":226,"column_start":1,"column_end":81}},{"value":"/ to be _idle_.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161820,"byte_end":161837,"line_start":227,"line_end":227,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161838,"byte_end":161841,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Because spans may be entered and exited multiple times before they close,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161842,"byte_end":161919,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/ [`Subscriber`]s have separate trait methods which are called to notify them","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":161920,"byte_end":161999,"line_start":230,"line_end":230,"column_start":1,"column_end":80}},{"value":"/ of span exits and when span handles are dropped. When execution exits a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162000,"byte_end":162075,"line_start":231,"line_end":231,"column_start":1,"column_end":76}},{"value":"/ span, [`exit`] will always be called with that span's ID to notify the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162076,"byte_end":162150,"line_start":232,"line_end":232,"column_start":1,"column_end":75}},{"value":"/ subscriber that the span has been exited. When span handles are dropped, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162151,"byte_end":162231,"line_start":233,"line_end":233,"column_start":1,"column_end":81}},{"value":"/ [`drop_span`] method is called with that span's ID. The subscriber may use","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162232,"byte_end":162310,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ this to determine whether or not the span will be entered again.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162311,"byte_end":162379,"line_start":235,"line_end":235,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162380,"byte_end":162383,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ If there is only a single handle with the capacity to exit a span, dropping","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162384,"byte_end":162463,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ that handle \"closes\" the span, since the capacity to enter it no longer","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162464,"byte_end":162539,"line_start":238,"line_end":238,"column_start":1,"column_end":76}},{"value":"/ exists. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162540,"byte_end":162564,"line_start":239,"line_end":239,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162565,"byte_end":162572,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162573,"byte_end":162606,"line_start":241,"line_end":241,"column_start":1,"column_end":34}},{"value":"/ {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162607,"byte_end":162612,"line_start":242,"line_end":242,"column_start":1,"column_end":6}},{"value":"/     span!(Level::TRACE, \"my_span\").in_scope(|| {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162613,"byte_end":162665,"line_start":243,"line_end":243,"column_start":1,"column_end":53}},{"value":"/         // perform some work in the context of `my_span`...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162666,"byte_end":162729,"line_start":244,"line_end":244,"column_start":1,"column_end":64}},{"value":"/     }); // --> Subscriber::exit(my_span)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162730,"byte_end":162774,"line_start":245,"line_end":245,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162775,"byte_end":162778,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     // The handle to `my_span` only lives inside of this block; when it is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162779,"byte_end":162857,"line_start":247,"line_end":247,"column_start":1,"column_end":79}},{"value":"/     // dropped, the subscriber will be informed via `drop_span`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162858,"byte_end":162926,"line_start":248,"line_end":248,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162927,"byte_end":162930,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ } // --> Subscriber::drop_span(my_span)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162931,"byte_end":162974,"line_start":250,"line_end":250,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162975,"byte_end":162982,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162983,"byte_end":162986,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ However, if multiple handles exist, the span can still be re-entered even if","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":162987,"byte_end":163067,"line_start":253,"line_end":253,"column_start":1,"column_end":81}},{"value":"/ one or more is dropped. For determining when _all_ handles to a span have","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163068,"byte_end":163145,"line_start":254,"line_end":254,"column_start":1,"column_end":78}},{"value":"/ been dropped, `Subscriber`s have a [`clone_span`] method, which is called","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163146,"byte_end":163223,"line_start":255,"line_end":255,"column_start":1,"column_end":78}},{"value":"/ every time a span handle is cloned. Combined with `drop_span`, this may be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163224,"byte_end":163302,"line_start":256,"line_end":256,"column_start":1,"column_end":79}},{"value":"/ used to track the number of handles to a given span — if `drop_span` has","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163303,"byte_end":163381,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ been called one more time than the number of calls to `clone_span` for a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163382,"byte_end":163458,"line_start":258,"line_end":258,"column_start":1,"column_end":77}},{"value":"/ given ID, then no more handles to the span with that ID exist. The","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163459,"byte_end":163529,"line_start":259,"line_end":259,"column_start":1,"column_end":71}},{"value":"/ subscriber may then treat it as closed.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163530,"byte_end":163573,"line_start":260,"line_end":260,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163574,"byte_end":163577,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ # When to use spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163578,"byte_end":163601,"line_start":262,"line_end":262,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163602,"byte_end":163605,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ As a rule of thumb, spans should be used to represent discrete units of work","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163606,"byte_end":163686,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/ (e.g., a given request's lifetime in a server) or periods of time spent in a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163687,"byte_end":163767,"line_start":265,"line_end":265,"column_start":1,"column_end":81}},{"value":"/ given context (e.g., time spent interacting with an instance of an external","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163768,"byte_end":163847,"line_start":266,"line_end":266,"column_start":1,"column_end":80}},{"value":"/ system, such as a database).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163848,"byte_end":163880,"line_start":267,"line_end":267,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163881,"byte_end":163884,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ Which scopes in a program correspond to new spans depend somewhat on user","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163885,"byte_end":163962,"line_start":269,"line_end":269,"column_start":1,"column_end":78}},{"value":"/ intent. For example, consider the case of a loop in a program. Should we","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":163963,"byte_end":164039,"line_start":270,"line_end":270,"column_start":1,"column_end":77}},{"value":"/ construct one span and perform the entire loop inside of that span, like:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164040,"byte_end":164117,"line_start":271,"line_end":271,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164118,"byte_end":164121,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164122,"byte_end":164133,"line_start":273,"line_end":273,"column_start":1,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164134,"byte_end":164167,"line_start":274,"line_end":274,"column_start":1,"column_end":34}},{"value":"/ # let n = 1;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164168,"byte_end":164184,"line_start":275,"line_end":275,"column_start":1,"column_end":17}},{"value":"/ let span = span!(Level::TRACE, \"my_loop\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164185,"byte_end":164231,"line_start":276,"line_end":276,"column_start":1,"column_end":47}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164232,"byte_end":164262,"line_start":277,"line_end":277,"column_start":1,"column_end":31}},{"value":"/ for i in 0..n {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164263,"byte_end":164282,"line_start":278,"line_end":278,"column_start":1,"column_end":20}},{"value":"/     # let _ = i;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164283,"byte_end":164303,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164304,"byte_end":164318,"line_start":280,"line_end":280,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164319,"byte_end":164324,"line_start":281,"line_end":281,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164325,"byte_end":164332,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/ Or, should we create a new span for each iteration of the loop, as in:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164333,"byte_end":164407,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164408,"byte_end":164419,"line_start":284,"line_end":284,"column_start":1,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164420,"byte_end":164453,"line_start":285,"line_end":285,"column_start":1,"column_end":34}},{"value":"/ # let n = 1u64;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164454,"byte_end":164473,"line_start":286,"line_end":286,"column_start":1,"column_end":20}},{"value":"/ for i in 0..n {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164474,"byte_end":164493,"line_start":287,"line_end":287,"column_start":1,"column_end":20}},{"value":"/     let span = span!(Level::TRACE, \"my_loop\", iteration = i);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164494,"byte_end":164559,"line_start":288,"line_end":288,"column_start":1,"column_end":66}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164560,"byte_end":164594,"line_start":289,"line_end":289,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164595,"byte_end":164609,"line_start":290,"line_end":290,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164610,"byte_end":164615,"line_start":291,"line_end":291,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164616,"byte_end":164623,"line_start":292,"line_end":292,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164624,"byte_end":164627,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Depending on the circumstances, we might want to do either, or both. For","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164628,"byte_end":164704,"line_start":294,"line_end":294,"column_start":1,"column_end":77}},{"value":"/ example, if we want to know how long was spent in the loop overall, we would","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164705,"byte_end":164785,"line_start":295,"line_end":295,"column_start":1,"column_end":81}},{"value":"/ create a single span around the entire loop; whereas if we wanted to know how","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164786,"byte_end":164867,"line_start":296,"line_end":296,"column_start":1,"column_end":82}},{"value":"/ much time was spent in each individual iteration, we would enter a new span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164868,"byte_end":164947,"line_start":297,"line_end":297,"column_start":1,"column_end":80}},{"value":"/ on every iteration.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164948,"byte_end":164971,"line_start":298,"line_end":298,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164972,"byte_end":164975,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ [fields]: super::field","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":164976,"byte_end":165002,"line_start":300,"line_end":300,"column_start":1,"column_end":27}},{"value":"/ [Metadata]: super::Metadata","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165003,"byte_end":165034,"line_start":301,"line_end":301,"column_start":1,"column_end":32}},{"value":"/ [verbosity level]: super::Level","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165035,"byte_end":165070,"line_start":302,"line_end":302,"column_start":1,"column_end":36}},{"value":"/ [`Poll::Ready`]: std::task::Poll::Ready","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165071,"byte_end":165114,"line_start":303,"line_end":303,"column_start":1,"column_end":44}},{"value":"/ [`span!`]: super::span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165115,"byte_end":165142,"line_start":304,"line_end":304,"column_start":1,"column_end":28}},{"value":"/ [`trace_span!`]: super::trace_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165143,"byte_end":165182,"line_start":305,"line_end":305,"column_start":1,"column_end":40}},{"value":"/ [`debug_span!`]: super::debug_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165183,"byte_end":165222,"line_start":306,"line_end":306,"column_start":1,"column_end":40}},{"value":"/ [`info_span!`]: super::info_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165223,"byte_end":165260,"line_start":307,"line_end":307,"column_start":1,"column_end":38}},{"value":"/ [`warn_span!`]: super::warn_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165261,"byte_end":165298,"line_start":308,"line_end":308,"column_start":1,"column_end":38}},{"value":"/ [`error_span!`]: super::error_span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165299,"byte_end":165338,"line_start":309,"line_end":309,"column_start":1,"column_end":40}},{"value":"/ [`clone_span`]: super::subscriber::Subscriber::clone_span()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165339,"byte_end":165402,"line_start":310,"line_end":310,"column_start":1,"column_end":64}},{"value":"/ [`drop_span`]: super::subscriber::Subscriber::drop_span()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165403,"byte_end":165464,"line_start":311,"line_end":311,"column_start":1,"column_end":62}},{"value":"/ [`exit`]: super::subscriber::Subscriber::exit","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165465,"byte_end":165514,"line_start":312,"line_end":312,"column_start":1,"column_end":50}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165515,"byte_end":165564,"line_start":313,"line_end":313,"column_start":1,"column_end":50}},{"value":"/ [`enter`]: Span::enter()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165565,"byte_end":165593,"line_start":314,"line_end":314,"column_start":1,"column_end":29}},{"value":"/ [`entered`]: Span::entered()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165594,"byte_end":165626,"line_start":315,"line_end":315,"column_start":1,"column_end":33}},{"value":"/ [`in_scope`]: Span::in_scope()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165627,"byte_end":165661,"line_start":316,"line_end":316,"column_start":1,"column_end":35}},{"value":"/ [`follows_from`]: Span::follows_from()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165662,"byte_end":165704,"line_start":317,"line_end":317,"column_start":1,"column_end":43}},{"value":"/ [guard]: Entered","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165705,"byte_end":165725,"line_start":318,"line_end":318,"column_start":1,"column_end":21}},{"value":"/ [parent]: #span-relationships","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":165726,"byte_end":165759,"line_start":319,"line_end":319,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166066,"byte_end":166070,"line_start":335,"line_end":335,"column_start":11,"column_end":15},"name":"AsId","qualname":"::span::AsId","value":"AsId: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":245}],"decl_id":null,"docs":" Trait implemented by types which have a span `Id`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by types which have a span `Id`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166001,"byte_end":166055,"line_start":334,"line_end":334,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166226,"byte_end":166231,"line_start":338,"line_end":338,"column_start":8,"column_end":13},"name":"as_id","qualname":"::span::AsId::as_id","value":"pub fn as_id(&Self) -> Option<&Id>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Returns the `Id` of the span that `self` corresponds to, or `None` if\n this corresponds to a disabled span.\n","sig":null,"attributes":[{"value":"/ Returns the `Id` of the span that `self` corresponds to, or `None` if","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166100,"byte_end":166173,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/ this corresponds to a disabled span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166178,"byte_end":166218,"line_start":337,"line_end":337,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166616,"byte_end":166620,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"decl_id":null,"docs":" A handle representing a span, with the capability to enter the span if it\n exists.","sig":null,"attributes":[{"value":"/ A handle representing a span, with the capability to enter the span if it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166258,"byte_end":166335,"line_start":341,"line_end":341,"column_start":1,"column_end":78}},{"value":"/ exists.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166336,"byte_end":166347,"line_start":342,"line_end":342,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166348,"byte_end":166351,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ If the span was rejected by the current `Subscriber`'s filter, entering the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166352,"byte_end":166431,"line_start":344,"line_end":344,"column_start":1,"column_end":80}},{"value":"/ span will silently do nothing. Thus, the handle can be used in the same","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166432,"byte_end":166507,"line_start":345,"line_end":345,"column_start":1,"column_end":76}},{"value":"/ manner regardless of whether or not the trace is currently being collected.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166508,"byte_end":166587,"line_start":346,"line_end":346,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168017,"byte_end":168024,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"Entered","qualname":"::span::Entered","value":"Entered {  }","parent":null,"children":[{"krate":0,"index":504}],"decl_id":null,"docs":" A guard representing a span which has been entered and is currently\n executing.","sig":null,"attributes":[{"value":"/ A guard representing a span which has been entered and is currently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":167674,"byte_end":167745,"line_start":377,"line_end":377,"column_start":1,"column_end":72}},{"value":"/ executing.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":167746,"byte_end":167760,"line_start":378,"line_end":378,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":167761,"byte_end":167764,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ When the guard is dropped, the span will be exited.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":167765,"byte_end":167820,"line_start":380,"line_end":380,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":167821,"byte_end":167824,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Span::enter`] function.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":167825,"byte_end":167878,"line_start":382,"line_end":382,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":167879,"byte_end":167882,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ [`Span::enter`]: super::Span::enter","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":167883,"byte_end":167922,"line_start":384,"line_end":384,"column_start":1,"column_end":40}},{"value":"must_use = \"once a span has been entered, it should be exited\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":167940,"byte_end":168005,"line_start":386,"line_end":386,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":508},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168438,"byte_end":168449,"line_start":401,"line_end":401,"column_start":12,"column_end":23},"name":"EnteredSpan","qualname":"::span::EnteredSpan","value":"EnteredSpan {  }","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"decl_id":null,"docs":" An owned version of [`Entered`], a guard representing a span which has been\n entered and is currently executing.","sig":null,"attributes":[{"value":"/ An owned version of [`Entered`], a guard representing a span which has been","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168054,"byte_end":168133,"line_start":391,"line_end":391,"column_start":1,"column_end":80}},{"value":"/ entered and is currently executing.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168134,"byte_end":168173,"line_start":392,"line_end":392,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168174,"byte_end":168177,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ When the guard is dropped, the span will be exited.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168178,"byte_end":168233,"line_start":394,"line_end":394,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168234,"byte_end":168237,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Span::entered`] function.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168238,"byte_end":168293,"line_start":396,"line_end":396,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168294,"byte_end":168297,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ [`Span::entered`]: super::Span::entered()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168298,"byte_end":168343,"line_start":398,"line_end":398,"column_start":1,"column_end":46}},{"value":"must_use = \"once a span has been entered, it should be exited\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168361,"byte_end":168426,"line_start":400,"line_end":400,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169563,"byte_end":169566,"line_start":436,"line_end":436,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"pub fn new(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` with the given [metadata] and set of\n [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` with the given [metadata] and set of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168990,"byte_end":169054,"line_start":423,"line_end":423,"column_start":5,"column_end":69}},{"value":"/ [field values].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169059,"byte_end":169078,"line_start":424,"line_end":424,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169083,"byte_end":169086,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The new span will be constructed by the currently-active [`Subscriber`],","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169091,"byte_end":169167,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ with the current span as its parent (if one exists).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169172,"byte_end":169228,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169233,"byte_end":169236,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169241,"byte_end":169314,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169319,"byte_end":169354,"line_start":430,"line_end":430,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169359,"byte_end":169362,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ [metadata]: super::Metadata","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169367,"byte_end":169398,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169403,"byte_end":169452,"line_start":433,"line_end":433,"column_start":5,"column_end":54}},{"value":"/ [field values]: super::field::ValueSet","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169457,"byte_end":169499,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/ [`follows_from`]: super::Span::follows_from","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169504,"byte_end":169551,"line_start":435,"line_end":435,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169775,"byte_end":169783,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"new_with","qualname":"<Span>::new_with","value":"pub fn new_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":169735,"byte_end":169744,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170429,"byte_end":170437,"line_start":460,"line_end":460,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Span>::new_root","value":"pub fn new_root(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as the root of its own trace tree, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as the root of its own trace tree, with the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170025,"byte_end":170096,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170101,"byte_end":170148,"line_start":452,"line_end":452,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170153,"byte_end":170156,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170161,"byte_end":170234,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170239,"byte_end":170274,"line_start":455,"line_end":455,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170279,"byte_end":170282,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [metadata]: super::Metadata","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170287,"byte_end":170318,"line_start":457,"line_end":457,"column_start":5,"column_end":36}},{"value":"/ [field values]: super::field::ValueSet","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170323,"byte_end":170365,"line_start":458,"line_end":458,"column_start":5,"column_end":47}},{"value":"/ [`follows_from`]: super::Span::follows_from","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170370,"byte_end":170417,"line_start":459,"line_end":459,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170651,"byte_end":170664,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"new_root_with","qualname":"<Span>::new_root_with","value":"pub fn new_root_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170611,"byte_end":170620,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171315,"byte_end":171323,"line_start":484,"line_end":484,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Span>::child_of","value":"pub fn child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as child of the given parent span, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as child of the given parent span, with the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170911,"byte_end":170982,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":170987,"byte_end":171034,"line_start":476,"line_end":476,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171039,"byte_end":171042,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171047,"byte_end":171120,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171125,"byte_end":171160,"line_start":479,"line_end":479,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171165,"byte_end":171168,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [metadata]: super::Metadata","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171173,"byte_end":171204,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/ [field values]: super::field::ValueSet","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171209,"byte_end":171251,"line_start":482,"line_end":482,"column_start":5,"column_end":47}},{"value":"/ [`follows_from`]: super::Span::follows_from","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171256,"byte_end":171303,"line_start":483,"line_end":483,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171695,"byte_end":171708,"line_start":497,"line_end":497,"column_start":12,"column_end":25},"name":"child_of_with","qualname":"<Span>::child_of_with","value":"pub fn child_of_with<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":171655,"byte_end":171664,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172544,"byte_end":172556,"line_start":519,"line_end":519,"column_start":12,"column_end":24},"name":"new_disabled","qualname":"<Span>::new_disabled","value":"pub fn new_disabled(&'static Metadata) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new disabled span with the given `Metadata`.","sig":null,"attributes":[{"value":"/ Constructs a new disabled span with the given `Metadata`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172119,"byte_end":172180,"line_start":510,"line_end":510,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172185,"byte_end":172188,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ This should be used when a span is constructed from a known callsite,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172193,"byte_end":172266,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ but the subscriber indicates that it is disabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172271,"byte_end":172324,"line_start":513,"line_end":513,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172329,"byte_end":172332,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will not notify the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172337,"byte_end":172413,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ `Subscriber` but _may_ record log messages if the `log` feature flag is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172418,"byte_end":172493,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/ enabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172498,"byte_end":172510,"line_start":517,"line_end":517,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172515,"byte_end":172532,"line_start":518,"line_end":518,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172990,"byte_end":172994,"line_start":533,"line_end":533,"column_start":18,"column_end":22},"name":"none","qualname":"<Span>::none","value":"pub const fn none() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span that is *completely disabled*.","sig":null,"attributes":[{"value":"/ Constructs a new span that is *completely disabled*.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172692,"byte_end":172748,"line_start":526,"line_end":526,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172753,"byte_end":172756,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This can be used rather than `Option<Span>` to represent cases where a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172761,"byte_end":172835,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/ span is not present.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172840,"byte_end":172864,"line_start":529,"line_end":529,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172869,"byte_end":172872,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will do nothing.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172877,"byte_end":172950,"line_start":531,"line_end":531,"column_start":5,"column_end":78}},{"value":"inline(always)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":172955,"byte_end":172972,"line_start":532,"line_end":532,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173530,"byte_end":173537,"line_start":549,"line_end":549,"column_start":12,"column_end":19},"name":"current","qualname":"<Span>::current","value":"pub fn current() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the span [considered by the `Subscriber`] to be the\n current span.","sig":null,"attributes":[{"value":"/ Returns a handle to the span [considered by the `Subscriber`] to be the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173092,"byte_end":173167,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ current span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173172,"byte_end":173189,"line_start":541,"line_end":541,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173194,"byte_end":173197,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ If the subscriber indicates that it does not track the current span, or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173202,"byte_end":173277,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ that the thread from which this function is called is not currently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173282,"byte_end":173353,"line_start":544,"line_end":544,"column_start":5,"column_end":76}},{"value":"/ inside a span, the returned span will be disabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173358,"byte_end":173412,"line_start":545,"line_end":545,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173417,"byte_end":173420,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ [considered by the `Subscriber`]:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173425,"byte_end":173462,"line_start":547,"line_end":547,"column_start":5,"column_end":42}},{"value":"/     super::subscriber::Subscriber::current_span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":173467,"byte_end":173518,"line_start":548,"line_end":548,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181778,"byte_end":181783,"line_start":785,"line_end":785,"column_start":12,"column_end":17},"name":"enter","qualname":"<Span>::enter","value":"pub fn enter(&Self) -> Entered","parent":null,"children":[],"decl_id":null,"docs":" Enters this span, returning a guard that will exit the span when dropped.","sig":null,"attributes":[{"value":"/ Enters this span, returning a guard that will exit the span when dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":174781,"byte_end":174858,"line_start":594,"line_end":594,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":174863,"byte_end":174866,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled by the current subscriber, then this function will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":174871,"byte_end":174949,"line_start":596,"line_end":596,"column_start":5,"column_end":83}},{"value":"/ call [`Subscriber::enter`] with the span's [`Id`], and dropping the guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":174954,"byte_end":175031,"line_start":597,"line_end":597,"column_start":5,"column_end":82}},{"value":"/ will call [`Subscriber::exit`]. If the span is disabled, this does","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175036,"byte_end":175106,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ nothing.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175111,"byte_end":175123,"line_start":599,"line_end":599,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175128,"byte_end":175131,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # In Asynchronous Code","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175136,"byte_end":175162,"line_start":601,"line_end":601,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175167,"byte_end":175170,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ **Warning**: in asynchronous code that uses [async/await syntax][syntax],","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175175,"byte_end":175252,"line_start":603,"line_end":603,"column_start":5,"column_end":82}},{"value":"/ `Span::enter` should be used very carefully or avoided entirely. Holding","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175257,"byte_end":175333,"line_start":604,"line_end":604,"column_start":5,"column_end":81}},{"value":"/ the drop guard returned by `Span::enter` across `.await` points will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175338,"byte_end":175410,"line_start":605,"line_end":605,"column_start":5,"column_end":77}},{"value":"/ result in incorrect traces. For example,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175415,"byte_end":175459,"line_start":606,"line_end":606,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175464,"byte_end":175467,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175472,"byte_end":175479,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175484,"byte_end":175513,"line_start":609,"line_end":609,"column_start":5,"column_end":34}},{"value":"/ # async fn some_other_async_function() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175518,"byte_end":175563,"line_start":610,"line_end":610,"column_start":5,"column_end":50}},{"value":"/ async fn my_async_function() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175568,"byte_end":175602,"line_start":611,"line_end":611,"column_start":5,"column_end":39}},{"value":"/     let span = info_span!(\"my_async_function\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175607,"byte_end":175658,"line_start":612,"line_end":612,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175663,"byte_end":175666,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/     // WARNING: This span will remain entered until this","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175671,"byte_end":175731,"line_start":614,"line_end":614,"column_start":5,"column_end":65}},{"value":"/     // guard is dropped...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175736,"byte_end":175766,"line_start":615,"line_end":615,"column_start":5,"column_end":35}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175771,"byte_end":175805,"line_start":616,"line_end":616,"column_start":5,"column_end":39}},{"value":"/     // ...but the `await` keyword may yield, causing the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175810,"byte_end":175870,"line_start":617,"line_end":617,"column_start":5,"column_end":65}},{"value":"/     // runtime to switch to another task, while remaining in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175875,"byte_end":175939,"line_start":618,"line_end":618,"column_start":5,"column_end":69}},{"value":"/     // this span!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175944,"byte_end":175965,"line_start":619,"line_end":619,"column_start":5,"column_end":26}},{"value":"/     some_other_async_function().await","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":175970,"byte_end":176011,"line_start":620,"line_end":620,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176016,"byte_end":176019,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176024,"byte_end":176038,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176043,"byte_end":176048,"line_start":623,"line_end":623,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176053,"byte_end":176060,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176065,"byte_end":176068,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ The drop guard returned by `Span::enter` exits the span when it is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176073,"byte_end":176143,"line_start":626,"line_end":626,"column_start":5,"column_end":75}},{"value":"/ dropped. When an async function or async block yields at an `.await`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176148,"byte_end":176220,"line_start":627,"line_end":627,"column_start":5,"column_end":77}},{"value":"/ point, the current scope is _exited_, but values in that scope are","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176225,"byte_end":176295,"line_start":628,"line_end":628,"column_start":5,"column_end":75}},{"value":"/ **not** dropped (because the async block will eventually resume","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176300,"byte_end":176367,"line_start":629,"line_end":629,"column_start":5,"column_end":72}},{"value":"/ execution from that await point). This means that _another_ task will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176372,"byte_end":176445,"line_start":630,"line_end":630,"column_start":5,"column_end":78}},{"value":"/ begin executing while _remaining_ in the entered span. This results in","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176450,"byte_end":176524,"line_start":631,"line_end":631,"column_start":5,"column_end":79}},{"value":"/ an incorrect trace.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176529,"byte_end":176552,"line_start":632,"line_end":632,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176557,"byte_end":176560,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ Instead of using `Span::enter` in asynchronous code, prefer the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176565,"byte_end":176632,"line_start":634,"line_end":634,"column_start":5,"column_end":72}},{"value":"/ following:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176637,"byte_end":176651,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176656,"byte_end":176659,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ * To enter a span for a synchronous section of code within an async","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176664,"byte_end":176735,"line_start":637,"line_end":637,"column_start":5,"column_end":76}},{"value":"/   block or function, prefer [`Span::in_scope`]. Since `in_scope` takes a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176740,"byte_end":176816,"line_start":638,"line_end":638,"column_start":5,"column_end":81}},{"value":"/   synchronous closure and exits the span when the closure returns, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176821,"byte_end":176895,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/   span will always be exited before the next await point. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176900,"byte_end":176974,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/   ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176979,"byte_end":176988,"line_start":641,"line_end":641,"column_start":5,"column_end":14}},{"value":"/   # use tracing::info_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":176993,"byte_end":177024,"line_start":642,"line_end":642,"column_start":5,"column_end":36}},{"value":"/   # async fn some_other_async_function(_: ()) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177029,"byte_end":177081,"line_start":643,"line_end":643,"column_start":5,"column_end":57}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177086,"byte_end":177122,"line_start":644,"line_end":644,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177127,"byte_end":177180,"line_start":645,"line_end":645,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177185,"byte_end":177188,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/       let some_value = span.in_scope(|| {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177193,"byte_end":177238,"line_start":647,"line_end":647,"column_start":5,"column_end":50}},{"value":"/           // run some synchronous code inside the span...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177243,"byte_end":177304,"line_start":648,"line_end":648,"column_start":5,"column_end":66}},{"value":"/       });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177309,"byte_end":177322,"line_start":649,"line_end":649,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177327,"byte_end":177330,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/       // This is okay! The span has already been exited before we reach","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177335,"byte_end":177410,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/       // the await point.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177415,"byte_end":177444,"line_start":652,"line_end":652,"column_start":5,"column_end":34}},{"value":"/       some_other_async_function(some_value).await;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177449,"byte_end":177503,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177508,"byte_end":177511,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177516,"byte_end":177532,"line_start":655,"line_end":655,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177537,"byte_end":177544,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177549,"byte_end":177558,"line_start":657,"line_end":657,"column_start":5,"column_end":14}},{"value":"/ * For instrumenting asynchronous code, `tracing` provides the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177563,"byte_end":177628,"line_start":658,"line_end":658,"column_start":5,"column_end":70}},{"value":"/   [`Future::instrument` combinator][instrument] for","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177633,"byte_end":177688,"line_start":659,"line_end":659,"column_start":5,"column_end":60}},{"value":"/   attaching a span to a future (async function or block). This will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177693,"byte_end":177764,"line_start":660,"line_end":660,"column_start":5,"column_end":76}},{"value":"/   enter the span _every_ time the future is polled, and exit it whenever","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177769,"byte_end":177845,"line_start":661,"line_end":661,"column_start":5,"column_end":81}},{"value":"/   the future yields.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177850,"byte_end":177874,"line_start":662,"line_end":662,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177879,"byte_end":177882,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/   `Instrument` can be used with an async block inside an async function:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177887,"byte_end":177963,"line_start":664,"line_end":664,"column_start":5,"column_end":81}},{"value":"/   ```ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177968,"byte_end":177983,"line_start":665,"line_end":665,"column_start":5,"column_end":20}},{"value":"/   # use tracing::info_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":177988,"byte_end":178019,"line_start":666,"line_end":666,"column_start":5,"column_end":36}},{"value":"/   use tracing::Instrument;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178024,"byte_end":178054,"line_start":667,"line_end":667,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178059,"byte_end":178062,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178067,"byte_end":178114,"line_start":669,"line_end":669,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178119,"byte_end":178155,"line_start":670,"line_end":670,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178160,"byte_end":178213,"line_start":671,"line_end":671,"column_start":5,"column_end":58}},{"value":"/       async move {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178218,"byte_end":178240,"line_start":672,"line_end":672,"column_start":5,"column_end":27}},{"value":"/          // This is correct! If we yield here, the span will be exited,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178245,"byte_end":178320,"line_start":673,"line_end":673,"column_start":5,"column_end":80}},{"value":"/          // and re-entered when we resume.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178325,"byte_end":178371,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/          some_other_async_function().await;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178376,"byte_end":178423,"line_start":675,"line_end":675,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178428,"byte_end":178431,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/          //more asynchronous code inside the span...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178436,"byte_end":178492,"line_start":677,"line_end":677,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178497,"byte_end":178500,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/       }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178505,"byte_end":178516,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/         // instrument the async block with the span...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178521,"byte_end":178579,"line_start":680,"line_end":680,"column_start":5,"column_end":63}},{"value":"/         .instrument(span)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178584,"byte_end":178613,"line_start":681,"line_end":681,"column_start":5,"column_end":34}},{"value":"/         // ...and await it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178618,"byte_end":178649,"line_start":682,"line_end":682,"column_start":5,"column_end":36}},{"value":"/         .await","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178654,"byte_end":178672,"line_start":683,"line_end":683,"column_start":5,"column_end":23}},{"value":"/   }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178677,"byte_end":178684,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178689,"byte_end":178698,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178703,"byte_end":178706,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/   It can also be used to instrument calls to async functions at the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178711,"byte_end":178782,"line_start":687,"line_end":687,"column_start":5,"column_end":76}},{"value":"/   callsite:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178787,"byte_end":178802,"line_start":688,"line_end":688,"column_start":5,"column_end":20}},{"value":"/   ```ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178807,"byte_end":178822,"line_start":689,"line_end":689,"column_start":5,"column_end":20}},{"value":"/   # use tracing::debug_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178827,"byte_end":178859,"line_start":690,"line_end":690,"column_start":5,"column_end":37}},{"value":"/   use tracing::Instrument;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178864,"byte_end":178894,"line_start":691,"line_end":691,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178899,"byte_end":178902,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178907,"byte_end":178954,"line_start":693,"line_end":693,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":178959,"byte_end":178995,"line_start":694,"line_end":694,"column_start":5,"column_end":41}},{"value":"/       let some_value = some_other_async_function()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179000,"byte_end":179054,"line_start":695,"line_end":695,"column_start":5,"column_end":59}},{"value":"/          .instrument(debug_span!(\"some_other_async_function\"))","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179059,"byte_end":179125,"line_start":696,"line_end":696,"column_start":5,"column_end":71}},{"value":"/          .await;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179130,"byte_end":179150,"line_start":697,"line_end":697,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179155,"byte_end":179158,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179163,"byte_end":179179,"line_start":699,"line_end":699,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179184,"byte_end":179191,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179196,"byte_end":179205,"line_start":701,"line_end":701,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179210,"byte_end":179213,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ * The [`#[instrument]` attribute macro][attr] can automatically generate","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179218,"byte_end":179294,"line_start":703,"line_end":703,"column_start":5,"column_end":81}},{"value":"/   correct code when used on an async function:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179299,"byte_end":179349,"line_start":704,"line_end":704,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179354,"byte_end":179357,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/   ```ignore","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179362,"byte_end":179377,"line_start":706,"line_end":706,"column_start":5,"column_end":20}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179382,"byte_end":179429,"line_start":707,"line_end":707,"column_start":5,"column_end":52}},{"value":"/   #[tracing::instrument(level = \"info\")]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179434,"byte_end":179478,"line_start":708,"line_end":708,"column_start":5,"column_end":49}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179483,"byte_end":179519,"line_start":709,"line_end":709,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179524,"byte_end":179527,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/       // This is correct! If we yield here, the span will be exited,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179532,"byte_end":179604,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/       // and re-entered when we resume.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179609,"byte_end":179652,"line_start":712,"line_end":712,"column_start":5,"column_end":48}},{"value":"/       some_other_async_function().await;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179657,"byte_end":179701,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179706,"byte_end":179709,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179714,"byte_end":179730,"line_start":715,"line_end":715,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179735,"byte_end":179738,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/   }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179743,"byte_end":179750,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179755,"byte_end":179764,"line_start":718,"line_end":718,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179769,"byte_end":179772,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ [syntax]: https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179777,"byte_end":179875,"line_start":720,"line_end":720,"column_start":5,"column_end":103}},{"value":"/ [`Span::in_scope`]: #method.in_scope","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179880,"byte_end":179920,"line_start":721,"line_end":721,"column_start":5,"column_end":45}},{"value":"/ [instrument]: https://docs.rs/tracing/latest/tracing/trait.Instrument.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":179925,"byte_end":180003,"line_start":722,"line_end":722,"column_start":5,"column_end":83}},{"value":"/ [attr]: macro@crate::instrument","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180008,"byte_end":180043,"line_start":723,"line_end":723,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180048,"byte_end":180051,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180056,"byte_end":180070,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180075,"byte_end":180078,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180083,"byte_end":180090,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180095,"byte_end":180128,"line_start":728,"line_end":728,"column_start":5,"column_end":38}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180133,"byte_end":180178,"line_start":729,"line_end":729,"column_start":5,"column_end":50}},{"value":"/ let guard = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180183,"byte_end":180212,"line_start":730,"line_end":730,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180217,"byte_end":180220,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ // code here is within the span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180225,"byte_end":180260,"line_start":732,"line_end":732,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180265,"byte_end":180268,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ drop(guard);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180273,"byte_end":180289,"line_start":734,"line_end":734,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180294,"byte_end":180297,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ // code here is no longer within the span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180302,"byte_end":180347,"line_start":736,"line_end":736,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180352,"byte_end":180355,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180360,"byte_end":180367,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180372,"byte_end":180375,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Guards need not be explicitly dropped:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180380,"byte_end":180422,"line_start":740,"line_end":740,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180427,"byte_end":180430,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180435,"byte_end":180442,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ # use tracing::trace_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180447,"byte_end":180477,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ fn my_function() -> String {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180482,"byte_end":180514,"line_start":744,"line_end":744,"column_start":5,"column_end":37}},{"value":"/     // enter a span for the duration of this function.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180519,"byte_end":180577,"line_start":745,"line_end":745,"column_start":5,"column_end":63}},{"value":"/     let span = trace_span!(\"my_function\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180582,"byte_end":180628,"line_start":746,"line_end":746,"column_start":5,"column_end":51}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180633,"byte_end":180667,"line_start":747,"line_end":747,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180672,"byte_end":180675,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call is still inside the span...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180680,"byte_end":180758,"line_start":749,"line_end":749,"column_start":5,"column_end":83}},{"value":"/     my_other_function();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180763,"byte_end":180791,"line_start":750,"line_end":750,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180796,"byte_end":180799,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180804,"byte_end":180877,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180882,"byte_end":180922,"line_start":753,"line_end":753,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180927,"byte_end":180932,"line_start":754,"line_end":754,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180937,"byte_end":180940,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180945,"byte_end":180973,"line_start":756,"line_end":756,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180978,"byte_end":180992,"line_start":757,"line_end":757,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":180997,"byte_end":181002,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181007,"byte_end":181014,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181019,"byte_end":181022,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ Sub-scopes may be created to limit the duration for which the span is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181027,"byte_end":181100,"line_start":761,"line_end":761,"column_start":5,"column_end":78}},{"value":"/ entered:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181105,"byte_end":181117,"line_start":762,"line_end":762,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181122,"byte_end":181125,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181130,"byte_end":181137,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{info, info_span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181142,"byte_end":181179,"line_start":765,"line_end":765,"column_start":5,"column_end":42}},{"value":"/ let span = info_span!(\"my_great_span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181184,"byte_end":181227,"line_start":766,"line_end":766,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181232,"byte_end":181235,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181240,"byte_end":181245,"line_start":768,"line_end":768,"column_start":5,"column_end":10}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181250,"byte_end":181284,"line_start":769,"line_end":769,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181289,"byte_end":181292,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/     // this event occurs inside the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181297,"byte_end":181342,"line_start":771,"line_end":771,"column_start":5,"column_end":50}},{"value":"/     info!(\"i'm in the span!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181347,"byte_end":181381,"line_start":772,"line_end":772,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181386,"byte_end":181389,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/     // exiting the scope drops the guard, exiting the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181394,"byte_end":181457,"line_start":774,"line_end":774,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181462,"byte_end":181467,"line_start":775,"line_end":775,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181472,"byte_end":181475,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ // this event is not inside the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181480,"byte_end":181521,"line_start":777,"line_end":777,"column_start":5,"column_end":46}},{"value":"/ info!(\"i'm outside the span!\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181526,"byte_end":181560,"line_start":778,"line_end":778,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181565,"byte_end":181572,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181577,"byte_end":181580,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber::enter`]: super::subscriber::Subscriber::enter()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181585,"byte_end":181650,"line_start":781,"line_end":781,"column_start":5,"column_end":70}},{"value":"/ [`Subscriber::exit`]: super::subscriber::Subscriber::exit()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181655,"byte_end":181718,"line_start":782,"line_end":782,"column_start":5,"column_end":68}},{"value":"/ [`Id`]: super::Id","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181723,"byte_end":181744,"line_start":783,"line_end":783,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181749,"byte_end":181766,"line_start":784,"line_end":784,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186089,"byte_end":186096,"line_start":896,"line_end":896,"column_start":12,"column_end":19},"name":"entered","qualname":"<Span>::entered","value":"pub fn entered(Self) -> EnteredSpan","parent":null,"children":[],"decl_id":null,"docs":" Enters this span, consuming it and returning a [guard][`EnteredSpan`]\n that will exit the span when dropped.","sig":null,"attributes":[{"value":"/ Enters this span, consuming it and returning a [guard][`EnteredSpan`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181875,"byte_end":181948,"line_start":790,"line_end":790,"column_start":5,"column_end":78}},{"value":"/ that will exit the span when dropped.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181953,"byte_end":181994,"line_start":791,"line_end":791,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":181999,"byte_end":182002,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182007,"byte_end":182078,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182083,"byte_end":182167,"line_start":794,"line_end":794,"column_start":5,"column_end":89}},{"value":"/     <code>Span::entered</code> may produce incorrect traces if the returned drop","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182172,"byte_end":182256,"line_start":795,"line_end":795,"column_start":5,"column_end":89}},{"value":"/     guard is held across an await point. See <a href=\"#in-asynchronous-code\">the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182261,"byte_end":182345,"line_start":796,"line_end":796,"column_start":5,"column_end":89}},{"value":"/     <code>Span::enter</code> documentation</a> for details.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182350,"byte_end":182413,"line_start":797,"line_end":797,"column_start":5,"column_end":68}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182418,"byte_end":182428,"line_start":798,"line_end":798,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182433,"byte_end":182436,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182441,"byte_end":182444,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled by the current subscriber, then this function will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182449,"byte_end":182527,"line_start":801,"line_end":801,"column_start":5,"column_end":83}},{"value":"/ call [`Subscriber::enter`] with the span's [`Id`], and dropping the guard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182532,"byte_end":182609,"line_start":802,"line_end":802,"column_start":5,"column_end":82}},{"value":"/ will call [`Subscriber::exit`]. If the span is disabled, this does","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182614,"byte_end":182684,"line_start":803,"line_end":803,"column_start":5,"column_end":75}},{"value":"/ nothing.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182689,"byte_end":182701,"line_start":804,"line_end":804,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182706,"byte_end":182709,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`Span::enter`] method, except that it moves the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182714,"byte_end":182789,"line_start":806,"line_end":806,"column_start":5,"column_end":80}},{"value":"/ span by value into the returned guard, rather than borrowing it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182794,"byte_end":182862,"line_start":807,"line_end":807,"column_start":5,"column_end":73}},{"value":"/ Therefore, this method can be used to create and enter a span in a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182867,"byte_end":182937,"line_start":808,"line_end":808,"column_start":5,"column_end":75}},{"value":"/ single expression, without requiring a `let`-binding. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":182942,"byte_end":183012,"line_start":809,"line_end":809,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183017,"byte_end":183020,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183025,"byte_end":183032,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183037,"byte_end":183066,"line_start":812,"line_end":812,"column_start":5,"column_end":34}},{"value":"/ let _span = info_span!(\"something_interesting\").entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183071,"byte_end":183133,"line_start":813,"line_end":813,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183138,"byte_end":183145,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ rather than:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183150,"byte_end":183166,"line_start":815,"line_end":815,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183171,"byte_end":183178,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183183,"byte_end":183212,"line_start":817,"line_end":817,"column_start":5,"column_end":34}},{"value":"/ let span = info_span!(\"something_interesting\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183217,"byte_end":183268,"line_start":818,"line_end":818,"column_start":5,"column_end":56}},{"value":"/ let _e = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183273,"byte_end":183299,"line_start":819,"line_end":819,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183304,"byte_end":183311,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183316,"byte_end":183319,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ Furthermore, `entered` may be used when the span must be stored in some","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183324,"byte_end":183399,"line_start":822,"line_end":822,"column_start":5,"column_end":80}},{"value":"/ other struct or be passed to a function while remaining entered.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183404,"byte_end":183472,"line_start":823,"line_end":823,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183477,"byte_end":183480,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183485,"byte_end":183550,"line_start":825,"line_end":825,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: The returned <a href=\"../struct.EnteredSpan.html\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183555,"byte_end":183636,"line_start":826,"line_end":826,"column_start":5,"column_end":86}},{"value":"/     <code>EnteredSpan</a></code> guard does not implement <code>Send</code>.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183641,"byte_end":183721,"line_start":827,"line_end":827,"column_start":5,"column_end":85}},{"value":"/     Dropping the guard will exit <em>this</em> span, and if the guard is sent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183726,"byte_end":183807,"line_start":828,"line_end":828,"column_start":5,"column_end":86}},{"value":"/     to another thread and dropped there, that thread may never have entered","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183812,"byte_end":183891,"line_start":829,"line_end":829,"column_start":5,"column_end":84}},{"value":"/     this span. Thus, <code>EnteredSpan</code>s should not be sent between threads.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183896,"byte_end":183982,"line_start":830,"line_end":830,"column_start":5,"column_end":91}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":183987,"byte_end":183997,"line_start":831,"line_end":831,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184002,"byte_end":184005,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ [syntax]: https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184010,"byte_end":184108,"line_start":833,"line_end":833,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184113,"byte_end":184116,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184121,"byte_end":184135,"line_start":835,"line_end":835,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184140,"byte_end":184143,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ The returned guard can be [explicitly exited][EnteredSpan::exit],","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184148,"byte_end":184217,"line_start":837,"line_end":837,"column_start":5,"column_end":74}},{"value":"/ returning the un-entered span:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184222,"byte_end":184256,"line_start":838,"line_end":838,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184261,"byte_end":184264,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184269,"byte_end":184276,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184281,"byte_end":184314,"line_start":841,"line_end":841,"column_start":5,"column_end":38}},{"value":"/ let span = span!(Level::INFO, \"doing_something\").entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184319,"byte_end":184382,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184387,"byte_end":184390,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ // code here is within the span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184395,"byte_end":184430,"line_start":844,"line_end":844,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184435,"byte_end":184438,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ // explicitly exit the span, returning it","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184443,"byte_end":184488,"line_start":846,"line_end":846,"column_start":5,"column_end":50}},{"value":"/ let span = span.exit();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184493,"byte_end":184520,"line_start":847,"line_end":847,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184525,"byte_end":184528,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ // code here is no longer within the span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184533,"byte_end":184578,"line_start":849,"line_end":849,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184583,"byte_end":184586,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ // enter the span again","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184591,"byte_end":184618,"line_start":851,"line_end":851,"column_start":5,"column_end":32}},{"value":"/ let span = span.entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184623,"byte_end":184653,"line_start":852,"line_end":852,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184658,"byte_end":184661,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ // now we are inside the span once again","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184666,"byte_end":184710,"line_start":854,"line_end":854,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184715,"byte_end":184722,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184727,"byte_end":184730,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Guards need not be explicitly dropped:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184735,"byte_end":184777,"line_start":857,"line_end":857,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184782,"byte_end":184785,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184790,"byte_end":184797,"line_start":859,"line_end":859,"column_start":5,"column_end":12}},{"value":"/ # use tracing::trace_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184802,"byte_end":184832,"line_start":860,"line_end":860,"column_start":5,"column_end":35}},{"value":"/ fn my_function() -> String {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184837,"byte_end":184869,"line_start":861,"line_end":861,"column_start":5,"column_end":37}},{"value":"/     // enter a span for the duration of this function.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184874,"byte_end":184932,"line_start":862,"line_end":862,"column_start":5,"column_end":63}},{"value":"/     let span = trace_span!(\"my_function\").entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184937,"byte_end":184993,"line_start":863,"line_end":863,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":184998,"byte_end":185001,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call is still inside the span...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185006,"byte_end":185084,"line_start":865,"line_end":865,"column_start":5,"column_end":83}},{"value":"/     my_other_function();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185089,"byte_end":185117,"line_start":866,"line_end":866,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185122,"byte_end":185125,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185130,"byte_end":185203,"line_start":868,"line_end":868,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185208,"byte_end":185248,"line_start":869,"line_end":869,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185253,"byte_end":185258,"line_start":870,"line_end":870,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185263,"byte_end":185266,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185271,"byte_end":185299,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185304,"byte_end":185318,"line_start":873,"line_end":873,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185323,"byte_end":185328,"line_start":874,"line_end":874,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185333,"byte_end":185340,"line_start":875,"line_end":875,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185345,"byte_end":185348,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ Since the [`EnteredSpan`] guard can dereference to the [`Span`] itself,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185353,"byte_end":185428,"line_start":877,"line_end":877,"column_start":5,"column_end":80}},{"value":"/ the span may still be accessed while entered. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185433,"byte_end":185495,"line_start":878,"line_end":878,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185500,"byte_end":185503,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185508,"byte_end":185519,"line_start":880,"line_end":880,"column_start":5,"column_end":16}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185524,"byte_end":185553,"line_start":881,"line_end":881,"column_start":5,"column_end":34}},{"value":"/ use tracing::field;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185558,"byte_end":185581,"line_start":882,"line_end":882,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185586,"byte_end":185589,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ // create the span with an empty field, and enter it.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185594,"byte_end":185651,"line_start":884,"line_end":884,"column_start":5,"column_end":62}},{"value":"/ let span = info_span!(\"my_span\", some_field = field::Empty).entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185656,"byte_end":185730,"line_start":885,"line_end":885,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185735,"byte_end":185738,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ // we can still record a value for the field while the span is entered.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185743,"byte_end":185818,"line_start":887,"line_end":887,"column_start":5,"column_end":80}},{"value":"/ span.record(\"some_field\", &\"hello world!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185823,"byte_end":185870,"line_start":888,"line_end":888,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185875,"byte_end":185882,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185887,"byte_end":185890,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber::enter`]: super::subscriber::Subscriber::enter()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185896,"byte_end":185961,"line_start":892,"line_end":892,"column_start":5,"column_end":70}},{"value":"/ [`Subscriber::exit`]: super::subscriber::Subscriber::exit()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":185966,"byte_end":186029,"line_start":893,"line_end":893,"column_start":5,"column_end":68}},{"value":"/ [`Id`]: super::Id","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186034,"byte_end":186055,"line_start":894,"line_end":894,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186060,"byte_end":186077,"line_start":895,"line_end":895,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190538,"byte_end":190548,"line_start":1027,"line_end":1027,"column_start":12,"column_end":22},"name":"or_current","qualname":"<Span>::or_current","value":"pub fn or_current(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this span, if it was [enabled] by the current [`Subscriber`], or\n the [current span] (whose lexical distance may be further than expected),\n  if this span [is disabled].","sig":null,"attributes":[{"value":"/ Returns this span, if it was [enabled] by the current [`Subscriber`], or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186251,"byte_end":186327,"line_start":904,"line_end":904,"column_start":5,"column_end":81}},{"value":"/ the [current span] (whose lexical distance may be further than expected),","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186332,"byte_end":186409,"line_start":905,"line_end":905,"column_start":5,"column_end":82}},{"value":"/  if this span [is disabled].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186414,"byte_end":186446,"line_start":906,"line_end":906,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186451,"byte_end":186454,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ This method can be useful when propagating spans to spawned threads or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186459,"byte_end":186533,"line_start":908,"line_end":908,"column_start":5,"column_end":79}},{"value":"/ [async tasks]. Consider the following:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186538,"byte_end":186580,"line_start":909,"line_end":909,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186585,"byte_end":186588,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186593,"byte_end":186600,"line_start":911,"line_end":911,"column_start":5,"column_end":12}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186605,"byte_end":186668,"line_start":912,"line_end":912,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186673,"byte_end":186676,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186681,"byte_end":186691,"line_start":914,"line_end":914,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186696,"byte_end":186699,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ let child_span = tracing::debug_span!(\"child\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186704,"byte_end":186755,"line_start":916,"line_end":916,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186760,"byte_end":186763,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186768,"byte_end":186800,"line_start":918,"line_end":918,"column_start":5,"column_end":37}},{"value":"/     let _entered = child_span.entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186805,"byte_end":186849,"line_start":919,"line_end":919,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186854,"byte_end":186857,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     tracing::info!(\"spawned a thread!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186862,"byte_end":186906,"line_start":921,"line_end":921,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186911,"byte_end":186914,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186919,"byte_end":186933,"line_start":923,"line_end":923,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186938,"byte_end":186945,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186950,"byte_end":186957,"line_start":925,"line_end":925,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186962,"byte_end":186965,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ If the current [`Subscriber`] enables the [`DEBUG`] level, then both","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":186970,"byte_end":187042,"line_start":927,"line_end":927,"column_start":5,"column_end":77}},{"value":"/ the \"parent\" and \"child\" spans will be enabled. Thus, when the \"spawaned","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187047,"byte_end":187123,"line_start":928,"line_end":928,"column_start":5,"column_end":81}},{"value":"/ a thread!\" event occurs, it will be inside of the \"child\" span. Because","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187128,"byte_end":187203,"line_start":929,"line_end":929,"column_start":5,"column_end":80}},{"value":"/ \"parent\" is the parent of \"child\", the event will _also_ be inside of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187208,"byte_end":187281,"line_start":930,"line_end":930,"column_start":5,"column_end":78}},{"value":"/ \"parent\".","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187286,"byte_end":187299,"line_start":931,"line_end":931,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187304,"byte_end":187307,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ However, if the [`Subscriber`] only enables the [`INFO`] level, the \"child\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187312,"byte_end":187391,"line_start":933,"line_end":933,"column_start":5,"column_end":84}},{"value":"/ span will be disabled. When the thread is spawned, the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187396,"byte_end":187454,"line_start":934,"line_end":934,"column_start":5,"column_end":63}},{"value":"/ `child_span.entered()` call will do nothing, since \"child\" is not","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187459,"byte_end":187528,"line_start":935,"line_end":935,"column_start":5,"column_end":74}},{"value":"/ enabled. In this case, the \"spawned a thread!\" event occurs outside of","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187533,"byte_end":187607,"line_start":936,"line_end":936,"column_start":5,"column_end":79}},{"value":"/ *any* span, since the \"child\" span was responsible for propagating its","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187612,"byte_end":187686,"line_start":937,"line_end":937,"column_start":5,"column_end":79}},{"value":"/ parent to the spawned thread.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187691,"byte_end":187724,"line_start":938,"line_end":938,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187729,"byte_end":187732,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ If this is not the desired behavior, `Span::or_current` can be used to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187737,"byte_end":187811,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ ensure that the \"parent\" span is propagated in both cases, either as a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187816,"byte_end":187890,"line_start":941,"line_end":941,"column_start":5,"column_end":79}},{"value":"/ parent of \"child\" _or_ directly. For example:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187895,"byte_end":187944,"line_start":942,"line_end":942,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187949,"byte_end":187952,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187957,"byte_end":187964,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":187969,"byte_end":188032,"line_start":945,"line_end":945,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188037,"byte_end":188040,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188045,"byte_end":188055,"line_start":947,"line_end":947,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188060,"byte_end":188063,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ // If DEBUG is enabled, then \"child\" will be enabled, and `or_current`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188068,"byte_end":188142,"line_start":949,"line_end":949,"column_start":5,"column_end":79}},{"value":"/ // returns \"child\". Otherwise, if DEBUG is not enabled, \"child\" will be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188147,"byte_end":188222,"line_start":950,"line_end":950,"column_start":5,"column_end":80}},{"value":"/ // disabled, and `or_current` returns \"parent\".","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188227,"byte_end":188278,"line_start":951,"line_end":951,"column_start":5,"column_end":56}},{"value":"/ let child_span = tracing::debug_span!(\"child\").or_current();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188283,"byte_end":188347,"line_start":952,"line_end":952,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188352,"byte_end":188355,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188360,"byte_end":188392,"line_start":954,"line_end":954,"column_start":5,"column_end":37}},{"value":"/     let _entered = child_span.entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188397,"byte_end":188441,"line_start":955,"line_end":955,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188446,"byte_end":188449,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/     tracing::info!(\"spawned a thread!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188454,"byte_end":188498,"line_start":957,"line_end":957,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188503,"byte_end":188506,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188511,"byte_end":188525,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188530,"byte_end":188537,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188542,"byte_end":188549,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188554,"byte_end":188557,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ When spawning [asynchronous tasks][async tasks], `Span::or_current` can","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188562,"byte_end":188637,"line_start":963,"line_end":963,"column_start":5,"column_end":80}},{"value":"/ be used similarly, in combination with [`instrument`]:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188642,"byte_end":188700,"line_start":964,"line_end":964,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188705,"byte_end":188708,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188713,"byte_end":188720,"line_start":966,"line_end":966,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188725,"byte_end":188753,"line_start":967,"line_end":967,"column_start":5,"column_end":33}},{"value":"/ # // lol","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188758,"byte_end":188770,"line_start":968,"line_end":968,"column_start":5,"column_end":17}},{"value":"/ # mod tokio {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188775,"byte_end":188792,"line_start":969,"line_end":969,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188797,"byte_end":188858,"line_start":970,"line_end":970,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188863,"byte_end":188870,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188875,"byte_end":188878,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188883,"byte_end":188946,"line_start":973,"line_end":973,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188951,"byte_end":188954,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188959,"byte_end":188969,"line_start":975,"line_end":975,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188974,"byte_end":188977,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ let child_span = tracing::debug_span!(\"child\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":188982,"byte_end":189033,"line_start":977,"line_end":977,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189038,"byte_end":189041,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ tokio::spawn(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189046,"byte_end":189063,"line_start":979,"line_end":979,"column_start":5,"column_end":22}},{"value":"/     async {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189068,"byte_end":189083,"line_start":980,"line_end":980,"column_start":5,"column_end":20}},{"value":"/         tracing::info!(\"spawned a task!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189088,"byte_end":189134,"line_start":981,"line_end":981,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189139,"byte_end":189142,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/         // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189147,"byte_end":189165,"line_start":983,"line_end":983,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189170,"byte_end":189173,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/     }.instrument(child_span.or_current())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189178,"byte_end":189223,"line_start":985,"line_end":985,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189228,"byte_end":189234,"line_start":986,"line_end":986,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189239,"byte_end":189246,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189251,"byte_end":189254,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ In general, `or_current` should be preferred over nesting an","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189259,"byte_end":189323,"line_start":989,"line_end":989,"column_start":5,"column_end":69}},{"value":"/ [`instrument`]  call inside of an [`in_current_span`] call, as using","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189328,"byte_end":189400,"line_start":990,"line_end":990,"column_start":5,"column_end":77}},{"value":"/ `or_current` will be more efficient.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189405,"byte_end":189445,"line_start":991,"line_end":991,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189450,"byte_end":189453,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189458,"byte_end":189465,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189470,"byte_end":189498,"line_start":994,"line_end":994,"column_start":5,"column_end":33}},{"value":"/ # // lol","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189503,"byte_end":189515,"line_start":995,"line_end":995,"column_start":5,"column_end":17}},{"value":"/ # mod tokio {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189520,"byte_end":189537,"line_start":996,"line_end":996,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189542,"byte_end":189603,"line_start":997,"line_end":997,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189608,"byte_end":189615,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ async fn my_async_fn() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189620,"byte_end":189648,"line_start":999,"line_end":999,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189653,"byte_end":189667,"line_start":1000,"line_end":1000,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189672,"byte_end":189677,"line_start":1001,"line_end":1001,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189682,"byte_end":189685,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189690,"byte_end":189753,"line_start":1003,"line_end":1003,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189758,"byte_end":189761,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ // Do this:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189766,"byte_end":189781,"line_start":1005,"line_end":1005,"column_start":5,"column_end":20}},{"value":"/ tokio::spawn(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189786,"byte_end":189803,"line_start":1006,"line_end":1006,"column_start":5,"column_end":22}},{"value":"/     my_async_fn().instrument(tracing::debug_span!(\"child\").or_current())","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189808,"byte_end":189884,"line_start":1007,"line_end":1007,"column_start":5,"column_end":81}},{"value":"/ );","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189889,"byte_end":189895,"line_start":1008,"line_end":1008,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189900,"byte_end":189903,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ // ...rather than this:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189908,"byte_end":189935,"line_start":1010,"line_end":1010,"column_start":5,"column_end":32}},{"value":"/ tokio::spawn(","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189940,"byte_end":189957,"line_start":1011,"line_end":1011,"column_start":5,"column_end":22}},{"value":"/     my_async_fn()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189962,"byte_end":189983,"line_start":1012,"line_end":1012,"column_start":5,"column_end":26}},{"value":"/         .instrument(tracing::debug_span!(\"child\"))","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":189988,"byte_end":190042,"line_start":1013,"line_end":1013,"column_start":5,"column_end":59}},{"value":"/         .in_current_span()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190047,"byte_end":190077,"line_start":1014,"line_end":1014,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190082,"byte_end":190088,"line_start":1015,"line_end":1015,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190093,"byte_end":190100,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190105,"byte_end":190108,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ [enabled]: crate::Subscriber::enabled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190113,"byte_end":190154,"line_start":1018,"line_end":1018,"column_start":5,"column_end":46}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190159,"byte_end":190196,"line_start":1019,"line_end":1019,"column_start":5,"column_end":42}},{"value":"/ [current span]: Span::current","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190201,"byte_end":190234,"line_start":1020,"line_end":1020,"column_start":5,"column_end":38}},{"value":"/ [is disabled]: Span::is_disabled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190239,"byte_end":190275,"line_start":1021,"line_end":1021,"column_start":5,"column_end":41}},{"value":"/ [`INFO`]: crate::Level::INFO","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190280,"byte_end":190312,"line_start":1022,"line_end":1022,"column_start":5,"column_end":37}},{"value":"/ [`DEBUG`]: crate::Level::DEBUG","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190317,"byte_end":190351,"line_start":1023,"line_end":1023,"column_start":5,"column_end":39}},{"value":"/ [async tasks]: std::task","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190356,"byte_end":190384,"line_start":1024,"line_end":1024,"column_start":5,"column_end":33}},{"value":"/ [`instrument`]: crate::instrument::Instrument::instrument","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190389,"byte_end":190450,"line_start":1025,"line_end":1025,"column_start":5,"column_end":66}},{"value":"/ [`in_current_span`]: crate::instrument::Instrument::in_current_span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":190455,"byte_end":190526,"line_start":1026,"line_end":1026,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192830,"byte_end":192838,"line_start":1100,"line_end":1100,"column_start":12,"column_end":20},"name":"in_scope","qualname":"<Span>::in_scope","value":"pub fn in_scope<F: FnOnce() -> T, T>(&Self, F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes the given function in the context of this span.","sig":null,"attributes":[{"value":"/ Executes the given function in the context of this span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":191643,"byte_end":191703,"line_start":1064,"line_end":1064,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":191708,"byte_end":191711,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled, then this function enters the span, invokes `f`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":191716,"byte_end":191792,"line_start":1066,"line_end":1066,"column_start":5,"column_end":81}},{"value":"/ and then exits the span. If the span is disabled, `f` will still be","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":191797,"byte_end":191868,"line_start":1067,"line_end":1067,"column_start":5,"column_end":76}},{"value":"/ invoked, but in the context of the currently-executing span (if there is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":191873,"byte_end":191949,"line_start":1068,"line_end":1068,"column_start":5,"column_end":81}},{"value":"/ one).","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":191954,"byte_end":191963,"line_start":1069,"line_end":1069,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":191968,"byte_end":191971,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ Returns the result of evaluating `f`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":191976,"byte_end":192017,"line_start":1071,"line_end":1071,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192022,"byte_end":192025,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192030,"byte_end":192044,"line_start":1073,"line_end":1073,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192049,"byte_end":192052,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192057,"byte_end":192064,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{trace, span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192069,"byte_end":192109,"line_start":1076,"line_end":1076,"column_start":5,"column_end":45}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192114,"byte_end":192163,"line_start":1077,"line_end":1077,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192168,"byte_end":192171,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192176,"byte_end":192201,"line_start":1079,"line_end":1079,"column_start":5,"column_end":30}},{"value":"/     // this event occurs within the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192206,"byte_end":192251,"line_start":1080,"line_end":1080,"column_start":5,"column_end":50}},{"value":"/     trace!(\"i'm in the span!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192256,"byte_end":192291,"line_start":1081,"line_end":1081,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192296,"byte_end":192303,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192308,"byte_end":192311,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ // this event occurs outside the span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192316,"byte_end":192358,"line_start":1084,"line_end":1084,"column_start":5,"column_end":47}},{"value":"/ trace!(\"i'm not in the span!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192363,"byte_end":192398,"line_start":1085,"line_end":1085,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192403,"byte_end":192410,"line_start":1086,"line_end":1086,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192415,"byte_end":192418,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ Calling a function and returning the result:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192423,"byte_end":192471,"line_start":1088,"line_end":1088,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192476,"byte_end":192483,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{info_span, Level};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192488,"byte_end":192526,"line_start":1090,"line_end":1090,"column_start":5,"column_end":43}},{"value":"/ fn hello_world() -> String {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192531,"byte_end":192563,"line_start":1091,"line_end":1091,"column_start":5,"column_end":37}},{"value":"/     \"Hello world!\".to_owned()","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192568,"byte_end":192601,"line_start":1092,"line_end":1092,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192606,"byte_end":192611,"line_start":1093,"line_end":1093,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192616,"byte_end":192619,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ let span = info_span!(\"hello_world\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192624,"byte_end":192665,"line_start":1095,"line_end":1095,"column_start":5,"column_end":46}},{"value":"/ // the span will be entered for the duration of the call to","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192670,"byte_end":192733,"line_start":1096,"line_end":1096,"column_start":5,"column_end":68}},{"value":"/ // `hello_world`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192738,"byte_end":192759,"line_start":1097,"line_end":1097,"column_start":5,"column_end":26}},{"value":"/ let a_string = span.in_scope(hello_world);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192764,"byte_end":192810,"line_start":1098,"line_end":1098,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192815,"byte_end":192818,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193054,"byte_end":193059,"line_start":1107,"line_end":1107,"column_start":12,"column_end":17},"name":"field","qualname":"<Span>::field","value":"pub fn field<Q: ?Sized>(&Self, &Q) -> Option<field::Field> where\nQ: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Field`][super::field::Field] for the field with the\n given `name`, if one exists,\n","sig":null,"attributes":[{"value":"/ Returns a [`Field`][super::field::Field] for the field with the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":192938,"byte_end":193005,"line_start":1105,"line_end":1105,"column_start":5,"column_end":72}},{"value":"/ given `name`, if one exists,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193010,"byte_end":193042,"line_start":1106,"line_end":1106,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193366,"byte_end":193375,"line_start":1117,"line_end":1117,"column_start":12,"column_end":21},"name":"has_field","qualname":"<Span>::has_field","value":"pub fn has_field<Q: ?Sized>(&Self, &Q) -> bool where Q: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Span` has a field for the given\n [`Field`][super::field::Field] or field name.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Span` has a field for the given","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193229,"byte_end":193286,"line_start":1114,"line_end":1114,"column_start":5,"column_end":62}},{"value":"/ [`Field`][super::field::Field] or field name.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193291,"byte_end":193340,"line_start":1115,"line_end":1115,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193345,"byte_end":193354,"line_start":1116,"line_end":1116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196578,"byte_end":196584,"line_start":1194,"line_end":1194,"column_start":12,"column_end":18},"name":"record","qualname":"<Span>::record","value":"pub fn record<Q: ?Sized, V>(&Self, &Q, &V) -> &Self where Q: field::AsField,\nV: field::Value","parent":null,"children":[],"decl_id":null,"docs":" Records that the field described by `field` has the value `value`.","sig":null,"attributes":[{"value":"/ Records that the field described by `field` has the value `value`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193503,"byte_end":193573,"line_start":1124,"line_end":1124,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193578,"byte_end":193581,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ This may be used with [`field::Empty`] to declare fields whose values","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193586,"byte_end":193659,"line_start":1126,"line_end":1126,"column_start":5,"column_end":78}},{"value":"/ are not known when the span is created, and record them later:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193664,"byte_end":193730,"line_start":1127,"line_end":1127,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193735,"byte_end":193742,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193747,"byte_end":193784,"line_start":1129,"line_end":1129,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193789,"byte_end":193792,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193797,"byte_end":193880,"line_start":1131,"line_end":1131,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193885,"byte_end":193919,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":193924,"byte_end":194012,"line_start":1133,"line_end":1133,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194017,"byte_end":194020,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194025,"byte_end":194035,"line_start":1135,"line_end":1135,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194040,"byte_end":194043,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194048,"byte_end":194095,"line_start":1137,"line_end":1137,"column_start":5,"column_end":52}},{"value":"/ // (note that the field name is passed as a string slice)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194100,"byte_end":194161,"line_start":1138,"line_end":1138,"column_start":5,"column_end":66}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194166,"byte_end":194212,"line_start":1139,"line_end":1139,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194217,"byte_end":194224,"line_start":1140,"line_end":1140,"column_start":5,"column_end":12}},{"value":"/ However, it may also be used to record a _new_ value for a field whose","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194229,"byte_end":194303,"line_start":1141,"line_end":1141,"column_start":5,"column_end":79}},{"value":"/ value was already recorded:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194308,"byte_end":194339,"line_start":1142,"line_end":1142,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194344,"byte_end":194351,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}},{"value":"/ use tracing::info_span;","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194356,"byte_end":194383,"line_start":1144,"line_end":1144,"column_start":5,"column_end":32}},{"value":"/ # fn do_something() -> Result<(), ()> { Err(()) }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194388,"byte_end":194441,"line_start":1145,"line_end":1145,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194446,"byte_end":194449,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ // Initially, let's assume that our attempt to do something is going okay...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194454,"byte_end":194534,"line_start":1147,"line_end":1147,"column_start":5,"column_end":85}},{"value":"/ let span = info_span!(\"doing_something\", is_okay = true);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194539,"byte_end":194600,"line_start":1148,"line_end":1148,"column_start":5,"column_end":66}},{"value":"/ let _e = span.enter();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194605,"byte_end":194631,"line_start":1149,"line_end":1149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194636,"byte_end":194639,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ match do_something() {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194644,"byte_end":194670,"line_start":1151,"line_end":1151,"column_start":5,"column_end":31}},{"value":"/     Ok(something) => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194675,"byte_end":194701,"line_start":1152,"line_end":1152,"column_start":5,"column_end":31}},{"value":"/         // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194706,"byte_end":194724,"line_start":1153,"line_end":1153,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194729,"byte_end":194738,"line_start":1154,"line_end":1154,"column_start":5,"column_end":14}},{"value":"/     Err(_) => {","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194743,"byte_end":194762,"line_start":1155,"line_end":1155,"column_start":5,"column_end":24}},{"value":"/         // Things are no longer okay!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194767,"byte_end":194808,"line_start":1156,"line_end":1156,"column_start":5,"column_end":46}},{"value":"/         span.record(\"is_okay\", &false);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194813,"byte_end":194856,"line_start":1157,"line_end":1157,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194861,"byte_end":194870,"line_start":1158,"line_end":1158,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194875,"byte_end":194880,"line_start":1159,"line_end":1159,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194885,"byte_end":194892,"line_start":1160,"line_end":1160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194897,"byte_end":194900,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194905,"byte_end":194970,"line_start":1162,"line_end":1162,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: The fields associated with a span are part","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":194975,"byte_end":195048,"line_start":1163,"line_end":1163,"column_start":5,"column_end":78}},{"value":"/     of its <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195053,"byte_end":195128,"line_start":1164,"line_end":1164,"column_start":5,"column_end":80}},{"value":"/     The <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195133,"byte_end":195204,"line_start":1165,"line_end":1165,"column_start":5,"column_end":76}},{"value":"/     describing a particular span is constructed statically when the span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195209,"byte_end":195285,"line_start":1166,"line_end":1166,"column_start":5,"column_end":81}},{"value":"/     is created and cannot be extended later to add new fields. Therefore,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195290,"byte_end":195367,"line_start":1167,"line_end":1167,"column_start":5,"column_end":82}},{"value":"/     you cannot record a value for a field that was not specified when the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195372,"byte_end":195449,"line_start":1168,"line_end":1168,"column_start":5,"column_end":82}},{"value":"/     span was created:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195454,"byte_end":195479,"line_start":1169,"line_end":1169,"column_start":5,"column_end":30}},{"value":"/ </pre>","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195484,"byte_end":195494,"line_start":1170,"line_end":1170,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195499,"byte_end":195502,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195507,"byte_end":195514,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195519,"byte_end":195556,"line_start":1173,"line_end":1173,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195561,"byte_end":195564,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195569,"byte_end":195652,"line_start":1175,"line_end":1175,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195657,"byte_end":195691,"line_start":1176,"line_end":1176,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195696,"byte_end":195784,"line_start":1177,"line_end":1177,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195789,"byte_end":195792,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195797,"byte_end":195807,"line_start":1179,"line_end":1179,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195812,"byte_end":195815,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ // Now, you try to record a value for a new field, `new_field`, which was not","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195820,"byte_end":195901,"line_start":1181,"line_end":1181,"column_start":5,"column_end":86}},{"value":"/ // declared as `Empty` or populated when you created `span`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195906,"byte_end":195970,"line_start":1182,"line_end":1182,"column_start":5,"column_end":69}},{"value":"/ // You won't get any error, but the assignment will have no effect!","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":195975,"byte_end":196046,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/ span.record(\"new_field\", &\"interesting_value_you_really_need\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196051,"byte_end":196118,"line_start":1184,"line_end":1184,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196123,"byte_end":196126,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ // Instead, all fields that may be recorded after span creation should be declared up front,","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196131,"byte_end":196227,"line_start":1186,"line_end":1186,"column_start":5,"column_end":101}},{"value":"/ // using field::Empty when a value is not known, as we did for `parting`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196232,"byte_end":196309,"line_start":1187,"line_end":1187,"column_start":5,"column_end":82}},{"value":"/ // This `record` call will indeed replace field::Empty with \"you will be remembered\".","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196314,"byte_end":196403,"line_start":1188,"line_end":1188,"column_start":5,"column_end":94}},{"value":"/ span.record(\"parting\", &\"you will be remembered\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196408,"byte_end":196462,"line_start":1189,"line_end":1189,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196467,"byte_end":196474,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196479,"byte_end":196482,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ [`field::Empty`]: super::field::Empty","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196487,"byte_end":196528,"line_start":1192,"line_end":1192,"column_start":5,"column_end":46}},{"value":"/ [`Metadata`]: super::Metadata","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":196533,"byte_end":196566,"line_start":1193,"line_end":1193,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":197111,"byte_end":197121,"line_start":1213,"line_end":1213,"column_start":12,"column_end":22},"name":"record_all","qualname":"<Span>::record_all","value":"pub fn record_all(&Self, &field::ValueSet) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in the provided `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Records all the fields in the provided `ValueSet`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":197045,"byte_end":197099,"line_start":1212,"line_end":1212,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198048,"byte_end":198059,"line_start":1244,"line_end":1244,"column_start":12,"column_end":23},"name":"is_disabled","qualname":"<Span>::is_disabled","value":"pub fn is_disabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was disabled by the subscriber and does not\n exist.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was disabled by the subscriber and does not","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":197849,"byte_end":197924,"line_start":1237,"line_end":1237,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":197929,"byte_end":197939,"line_start":1238,"line_end":1238,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":197944,"byte_end":197947,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ See also [`is_none`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":197952,"byte_end":197977,"line_start":1240,"line_end":1240,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":197982,"byte_end":197985,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ [`is_none`]: #method.is_none","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":197990,"byte_end":198022,"line_start":1242,"line_end":1242,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198027,"byte_end":198036,"line_start":1243,"line_end":1243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198617,"byte_end":198624,"line_start":1259,"line_end":1259,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Span>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was constructed by [`Span::none`] and is\n empty.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was constructed by [`Span::none`] and is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198117,"byte_end":198189,"line_start":1248,"line_end":1248,"column_start":5,"column_end":77}},{"value":"/ empty.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198194,"byte_end":198204,"line_start":1249,"line_end":1249,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198209,"byte_end":198212,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ If `is_none` returns `true` for a given span, then [`is_disabled`] will","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198217,"byte_end":198292,"line_start":1251,"line_end":1251,"column_start":5,"column_end":80}},{"value":"/ also return `true`. However, when a span is disabled by the subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198297,"byte_end":198371,"line_start":1252,"line_end":1252,"column_start":5,"column_end":79}},{"value":"/ rather than constructed by `Span::none`, this method will return","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198376,"byte_end":198444,"line_start":1253,"line_end":1253,"column_start":5,"column_end":73}},{"value":"/ `false`, while `is_disabled` will return `true`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198449,"byte_end":198501,"line_start":1254,"line_end":1254,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198506,"byte_end":198509,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ [`Span::none`]: #method.none","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198514,"byte_end":198546,"line_start":1256,"line_end":1256,"column_start":5,"column_end":37}},{"value":"/ [`is_disabled`]: #method.is_disabled","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198551,"byte_end":198591,"line_start":1257,"line_end":1257,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198596,"byte_end":198605,"line_start":1258,"line_end":1258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200650,"byte_end":200662,"line_start":1310,"line_end":1310,"column_start":12,"column_end":24},"name":"follows_from","qualname":"<Span>::follows_from","value":"pub fn follows_from<impl Into<Option<Id>>: Into<Option<Id>>>(&Self,\nimpl Into<Option<Id>>) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the span with the given ID has an indirect causal\n relationship with this span.","sig":null,"attributes":[{"value":"/ Indicates that the span with the given ID has an indirect causal","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198703,"byte_end":198771,"line_start":1263,"line_end":1263,"column_start":5,"column_end":73}},{"value":"/ relationship with this span.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198776,"byte_end":198808,"line_start":1264,"line_end":1264,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198813,"byte_end":198816,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198821,"byte_end":198897,"line_start":1266,"line_end":1266,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198902,"byte_end":198976,"line_start":1267,"line_end":1267,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":198981,"byte_end":199052,"line_start":1268,"line_end":1268,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199057,"byte_end":199131,"line_start":1269,"line_end":1269,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199136,"byte_end":199202,"line_start":1270,"line_end":1270,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199207,"byte_end":199281,"line_start":1271,"line_end":1271,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199286,"byte_end":199358,"line_start":1272,"line_end":1272,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199363,"byte_end":199432,"line_start":1273,"line_end":1273,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199437,"byte_end":199440,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ If this span is disabled, or the resulting follows-from relationship","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199445,"byte_end":199517,"line_start":1275,"line_end":1275,"column_start":5,"column_end":77}},{"value":"/ would be invalid, this function will do nothing.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199522,"byte_end":199574,"line_start":1276,"line_end":1276,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199579,"byte_end":199582,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199587,"byte_end":199601,"line_start":1278,"line_end":1278,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199606,"byte_end":199609,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span`:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199614,"byte_end":199670,"line_start":1280,"line_end":1280,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199675,"byte_end":199682,"line_start":1281,"line_end":1281,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199687,"byte_end":199730,"line_start":1282,"line_end":1282,"column_start":5,"column_end":48}},{"value":"/ let span1 = span!(Level::INFO, \"span_1\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199735,"byte_end":199780,"line_start":1283,"line_end":1283,"column_start":5,"column_end":50}},{"value":"/ let span2 = span!(Level::DEBUG, \"span_2\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199785,"byte_end":199831,"line_start":1284,"line_end":1284,"column_start":5,"column_end":51}},{"value":"/ span2.follows_from(span1);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199836,"byte_end":199866,"line_start":1285,"line_end":1285,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199871,"byte_end":199878,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199883,"byte_end":199886,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with the current span:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199891,"byte_end":199955,"line_start":1288,"line_end":1288,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199960,"byte_end":199967,"line_start":1289,"line_end":1289,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":199972,"byte_end":200015,"line_start":1290,"line_end":1290,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200020,"byte_end":200064,"line_start":1291,"line_end":1291,"column_start":5,"column_end":49}},{"value":"/ span.follows_from(Span::current());","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200069,"byte_end":200108,"line_start":1292,"line_end":1292,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200113,"byte_end":200120,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200125,"byte_end":200128,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span` reference:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200133,"byte_end":200199,"line_start":1295,"line_end":1295,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200204,"byte_end":200211,"line_start":1296,"line_end":1296,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200216,"byte_end":200259,"line_start":1297,"line_end":1297,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200264,"byte_end":200308,"line_start":1298,"line_end":1298,"column_start":5,"column_end":49}},{"value":"/ let curr = Span::current();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200313,"byte_end":200344,"line_start":1299,"line_end":1299,"column_start":5,"column_end":36}},{"value":"/ span.follows_from(&curr);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200349,"byte_end":200378,"line_start":1300,"line_end":1300,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200383,"byte_end":200390,"line_start":1301,"line_end":1301,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200395,"byte_end":200398,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with an `Id`:","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200403,"byte_end":200458,"line_start":1303,"line_end":1303,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200463,"byte_end":200470,"line_start":1304,"line_end":1304,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200475,"byte_end":200518,"line_start":1305,"line_end":1305,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200523,"byte_end":200567,"line_start":1306,"line_end":1306,"column_start":5,"column_end":49}},{"value":"/ let id = span.id();","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200572,"byte_end":200595,"line_start":1307,"line_end":1307,"column_start":5,"column_end":28}},{"value":"/ span.follows_from(id);","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200600,"byte_end":200626,"line_start":1308,"line_end":1308,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200631,"byte_end":200638,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200952,"byte_end":200954,"line_start":1320,"line_end":1320,"column_start":12,"column_end":14},"name":"id","qualname":"<Span>::id","value":"pub fn id(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Id`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Id`, if it is enabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":200893,"byte_end":200940,"line_start":1319,"line_end":1319,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":201097,"byte_end":201105,"line_start":1325,"line_end":1325,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Span>::metadata","value":"pub fn metadata(&Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Metadata`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Metadata`, if it is enabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":201032,"byte_end":201085,"line_start":1324,"line_end":1324,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":202945,"byte_end":202960,"line_start":1368,"line_end":1368,"column_start":12,"column_end":27},"name":"with_subscriber","qualname":"<Span>::with_subscriber","value":"pub fn with_subscriber<T,\nimpl FnOnce((&Id, &Dispatch)) -> T: FnOnce((&Id, &Dispatch)) ->\nT>(&Self, impl FnOnce((&Id, &Dispatch)) -> T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes a function with a reference to this span's ID and subscriber.","sig":null,"attributes":[{"value":"/ Invokes a function with a reference to this span's ID and subscriber.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":202649,"byte_end":202722,"line_start":1363,"line_end":1363,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":202727,"byte_end":202730,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/ if this span is enabled, the provided function is called, and the result is returned.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":202735,"byte_end":202824,"line_start":1365,"line_end":1365,"column_start":5,"column_end":94}},{"value":"/ If the span is disabled, the function is not called, and this method returns `None`","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":202829,"byte_end":202916,"line_start":1366,"line_end":1366,"column_start":5,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":202921,"byte_end":202933,"line_start":1367,"line_end":1367,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207663,"byte_end":207665,"line_start":1542,"line_end":1542,"column_start":12,"column_end":14},"name":"id","qualname":"<EnteredSpan>::id","value":"pub fn id(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Id`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Id`, if it is enabled.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207604,"byte_end":207651,"line_start":1541,"line_end":1541,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207824,"byte_end":207828,"line_start":1548,"line_end":1548,"column_start":12,"column_end":16},"name":"exit","qualname":"<EnteredSpan>::exit","value":"pub fn exit(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Exits this span, returning the underlying [`Span`].\n","sig":null,"attributes":[{"value":"/ Exits this span, returning the underlying [`Span`].","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207743,"byte_end":207798,"line_start":1546,"line_end":1546,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207803,"byte_end":207812,"line_start":1547,"line_end":1547,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":342},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":355}],"decl_id":null,"docs":" Collects and records trace data.\n","sig":null,"attributes":[{"value":"/ Collects and records trace data.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211434,"byte_end":211470,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":347},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212149,"byte_end":212161,"line_start":20,"line_end":20,"column_start":8,"column_end":20},"name":"with_default","qualname":"::subscriber::with_default","value":"pub fn with_default<T, S, impl FnOnce() -> T: FnOnce() ->\nT>(S, impl FnOnce() -> T) -> T where S: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this subscriber as the default for the duration of a closure.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211629,"byte_end":211699,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211700,"byte_end":211703,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211704,"byte_end":211770,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211771,"byte_end":211845,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211846,"byte_end":211918,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211919,"byte_end":211949,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211950,"byte_end":211953,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: super::span::Span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211954,"byte_end":211985,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":211986,"byte_end":212035,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ [`Event`]: super::event::Event","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212036,"byte_end":212070,"line_start":17,"line_end":17,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212071,"byte_end":212094,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212934,"byte_end":212952,"line_start":39,"line_end":39,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::subscriber::set_global_default","value":"pub fn set_global_default<S>(S) -> Result<(), SetGlobalDefaultError> where\nS: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this subscriber as the global default for the duration of the entire program.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212339,"byte_end":212425,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/ Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212426,"byte_end":212535,"line_start":28,"line_end":28,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212536,"byte_end":212539,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212540,"byte_end":212622,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ Returns whether the initialization was successful.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212623,"byte_end":212677,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212678,"byte_end":212681,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note: Libraries should *NOT* call `set_global_default()`! That will cause conflicts when","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212682,"byte_end":212774,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ executables try to set them later.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212775,"byte_end":212813,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212814,"byte_end":212817,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [span]: super::span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212818,"byte_end":212841,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212842,"byte_end":212891,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ [`Event`]: super::event::Event","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":212892,"byte_end":212926,"line_start":38,"line_end":38,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":353},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213813,"byte_end":213824,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"set_default","qualname":"::subscriber::set_default","value":"pub fn set_default<S>(S) -> DefaultGuard where S: Subscriber + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the subscriber as the default for the duration of the lifetime of the\n returned [`DefaultGuard`]","sig":null,"attributes":[{"value":"/ Sets the subscriber as the default for the duration of the lifetime of the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213138,"byte_end":213216,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ returned [`DefaultGuard`]","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213217,"byte_end":213246,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213247,"byte_end":213250,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213251,"byte_end":213317,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213318,"byte_end":213392,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213393,"byte_end":213465,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213466,"byte_end":213496,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213497,"byte_end":213500,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: super::span::Span","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213501,"byte_end":213532,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/ [`Subscriber`]: super::subscriber::Subscriber","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213533,"byte_end":213582,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/ [`Event`]: super::event::Event","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213583,"byte_end":213617,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ [`DefaultGuard`]: super::dispatcher::DefaultGuard","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213618,"byte_end":213671,"line_start":57,"line_end":57,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213672,"byte_end":213695,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the subscriber.\"","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/subscriber.rs","byte_start":213743,"byte_end":213805,"line_start":60,"line_end":60,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":358},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39524,"byte_end":39539,"line_start":969,"line_end":969,"column_start":9,"column_end":24},"name":"__macro_support","qualname":"::__macro_support","value":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":398},{"krate":0,"index":401}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40256,"byte_end":40269,"line_start":987,"line_end":987,"column_start":16,"column_end":29},"name":"MacroCallsite","qualname":"::__macro_support::MacroCallsite","value":"MacroCallsite {  }","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389}],"decl_id":null,"docs":" Callsite implementation used by macro-generated code.","sig":null,"attributes":[{"value":"/ Callsite implementation used by macro-generated code.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39781,"byte_end":39838,"line_start":979,"line_end":979,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39843,"byte_end":39846,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39851,"byte_end":39899,"line_start":981,"line_end":981,"column_start":5,"column_end":53}},{"value":"/ This type, and all code contained in the `__macro_support` module, is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39904,"byte_end":39977,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39982,"byte_end":40057,"line_start":983,"line_end":983,"column_start":5,"column_end":80}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40062,"byte_end":40138,"line_start":984,"line_end":984,"column_start":5,"column_end":81}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40143,"byte_end":40215,"line_start":985,"line_end":985,"column_start":5,"column_end":77}},{"value":"/ without warning.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40220,"byte_end":40240,"line_start":986,"line_end":986,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40931,"byte_end":40934,"line_start":1002,"line_end":1002,"column_start":22,"column_end":25},"name":"new","qualname":"<MacroCallsite>::new","value":"pub const fn new(&'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `MacroCallsite` with the specified `Metadata`.","sig":null,"attributes":[{"value":"/ Returns a new `MacroCallsite` with the specified `Metadata`.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40413,"byte_end":40477,"line_start":994,"line_end":994,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40486,"byte_end":40489,"line_start":995,"line_end":995,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40498,"byte_end":40546,"line_start":996,"line_end":996,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40555,"byte_end":40630,"line_start":997,"line_end":997,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40639,"byte_end":40714,"line_start":998,"line_end":998,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40723,"byte_end":40799,"line_start":999,"line_end":999,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40808,"byte_end":40880,"line_start":1000,"line_end":1000,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40889,"byte_end":40909,"line_start":1001,"line_end":1001,"column_start":9,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41864,"byte_end":41872,"line_start":1023,"line_end":1023,"column_start":16,"column_end":24},"name":"register","qualname":"<MacroCallsite>::register","value":"pub fn register(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers this callsite with the global callsite registry.","sig":null,"attributes":[{"value":"/ Registers this callsite with the global callsite registry.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41148,"byte_end":41210,"line_start":1010,"line_end":1010,"column_start":9,"column_end":71}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41219,"byte_end":41222,"line_start":1011,"line_end":1011,"column_start":9,"column_end":12}},{"value":"/ If the callsite is already registered, this does nothing.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41231,"byte_end":41292,"line_start":1012,"line_end":1012,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41301,"byte_end":41304,"line_start":1013,"line_end":1013,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41313,"byte_end":41361,"line_start":1014,"line_end":1014,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41370,"byte_end":41445,"line_start":1015,"line_end":1015,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41454,"byte_end":41529,"line_start":1016,"line_end":1016,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41538,"byte_end":41614,"line_start":1017,"line_end":1017,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41623,"byte_end":41695,"line_start":1018,"line_end":1018,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41704,"byte_end":41724,"line_start":1019,"line_end":1019,"column_start":9,"column_end":29}},{"value":"inline(never)","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41733,"byte_end":41749,"line_start":1020,"line_end":1020,"column_start":9,"column_end":25}},{"value":"cold","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":41841,"byte_end":41848,"line_start":1022,"line_end":1022,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42803,"byte_end":42811,"line_start":1043,"line_end":1043,"column_start":16,"column_end":24},"name":"interest","qualname":"<MacroCallsite>::interest","value":"pub fn interest(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Returns the callsite's cached Interest, or registers it for the\n first time if it has not yet been registered.","sig":null,"attributes":[{"value":"/ Returns the callsite's cached Interest, or registers it for the","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42212,"byte_end":42279,"line_start":1033,"line_end":1033,"column_start":9,"column_end":76}},{"value":"/ first time if it has not yet been registered.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42288,"byte_end":42337,"line_start":1034,"line_end":1034,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42346,"byte_end":42349,"line_start":1035,"line_end":1035,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42358,"byte_end":42406,"line_start":1036,"line_end":1036,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42415,"byte_end":42490,"line_start":1037,"line_end":1037,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42499,"byte_end":42574,"line_start":1038,"line_end":1038,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42583,"byte_end":42659,"line_start":1039,"line_end":1039,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42668,"byte_end":42740,"line_start":1040,"line_end":1040,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42749,"byte_end":42769,"line_start":1041,"line_end":1041,"column_start":9,"column_end":29}},{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":42778,"byte_end":42787,"line_start":1042,"line_end":1042,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":43102,"byte_end":43112,"line_start":1052,"line_end":1052,"column_start":16,"column_end":26},"name":"is_enabled","qualname":"<MacroCallsite>::is_enabled","value":"pub fn is_enabled(&Self, Interest) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":43515,"byte_end":43528,"line_start":1065,"line_end":1065,"column_start":16,"column_end":29},"name":"disabled_span","qualname":"<MacroCallsite>::disabled_span","value":"pub fn disabled_span(&Self) -> crate::Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":43453,"byte_end":43462,"line_start":1063,"line_end":1063,"column_start":9,"column_end":18}},{"value":"cfg(not(feature = \"log\"))","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":43471,"byte_end":43499,"line_start":1064,"line_end":1064,"column_start":9,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":404},"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":47195,"byte_end":47201,"line_start":1182,"line_end":1182,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135842,"byte_end":135847,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":136503,"byte_end":136508,"line_start":168,"line_end":168,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145403,"byte_end":145415,"line_start":266,"line_end":266,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145673,"byte_end":145674,"line_start":276,"line_end":276,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145687,"byte_end":145699,"line_start":278,"line_end":278,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146794,"byte_end":146806,"line_start":321,"line_end":321,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147206,"byte_end":147207,"line_start":334,"line_end":334,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147291,"byte_end":147303,"line_start":338,"line_end":338,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168979,"byte_end":168983,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":203159,"byte_end":203163,"line_start":1375,"line_end":1375,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":203442,"byte_end":203446,"line_start":1386,"line_end":1386,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":203559,"byte_end":203563,"line_start":1392,"line_end":1392,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":204502,"byte_end":204508,"line_start":1425,"line_end":1425,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":204645,"byte_end":204651,"line_start":1431,"line_end":1431,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":204768,"byte_end":204774,"line_start":1437,"line_end":1437,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":204902,"byte_end":204908,"line_start":1443,"line_end":1443,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":205059,"byte_end":205065,"line_start":1449,"line_end":1449,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":205183,"byte_end":205187,"line_start":1455,"line_end":1455,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":205746,"byte_end":205751,"line_start":1480,"line_end":1480,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207168,"byte_end":207173,"line_start":1517,"line_end":1517,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207268,"byte_end":207273,"line_start":1523,"line_end":1523,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207376,"byte_end":207381,"line_start":1529,"line_end":1529,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207586,"byte_end":207597,"line_start":1540,"line_end":1540,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":208038,"byte_end":208049,"line_start":1556,"line_end":1556,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":208168,"byte_end":208175,"line_start":1565,"line_end":1565,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":208280,"byte_end":208291,"line_start":1572,"line_end":1572,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":209466,"byte_end":209480,"line_start":1604,"line_end":1604,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40389,"byte_end":40402,"line_start":993,"line_end":993,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":44433,"byte_end":44446,"line_start":1095,"line_end":1095,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":44886,"byte_end":44899,"line_start":1111,"line_end":1111,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39327,"byte_end":39337,"line_start":959,"line_end":959,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":74}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39347,"byte_end":39352,"line_start":960,"line_end":960,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":100}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39408,"byte_end":39418,"line_start":962,"line_end":962,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":118}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39428,"byte_end":39441,"line_start":963,"line_end":963,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":187}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39451,"byte_end":39455,"line_start":964,"line_end":964,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":196}},{"kind":"Mod","span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":39488,"byte_end":39498,"line_start":966,"line_end":966,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":342}}],"macro_refs":[],"relations":[{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135518,"byte_end":135524,"line_start":129,"line_end":129,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":404},"to":{"krate":0,"index":105}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":135842,"byte_end":135847,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":20,"index":852},"to":{"krate":0,"index":105}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/field.rs","byte_start":136503,"byte_end":136508,"line_start":168,"line_end":168,"column_start":32,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":20,"index":852},"to":{"krate":0,"index":404}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":137012,"byte_end":137017,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":150}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":140651,"byte_end":140656,"line_start":129,"line_end":129,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":153}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145403,"byte_end":145415,"line_start":266,"line_end":266,"column_start":28,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":12960}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145673,"byte_end":145674,"line_start":276,"line_end":276,"column_start":31,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":163},"to":{"krate":0,"index":150}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":145687,"byte_end":145699,"line_start":278,"line_end":278,"column_start":9,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":146794,"byte_end":146806,"line_start":321,"line_end":321,"column_start":28,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":12960}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147206,"byte_end":147207,"line_start":334,"line_end":334,"column_start":35,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":178},"to":{"krate":0,"index":153}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/instrument.rs","byte_start":147291,"byte_end":147303,"line_start":338,"line_end":338,"column_start":9,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":166087,"byte_end":166093,"line_start":335,"line_end":335,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":404},"to":{"krate":0,"index":244}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":168979,"byte_end":168983,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":203159,"byte_end":203163,"line_start":1375,"line_end":1375,"column_start":25,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":203442,"byte_end":203446,"line_start":1386,"line_end":1386,"column_start":15,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":9802}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":203559,"byte_end":203563,"line_start":1392,"line_end":1392,"column_start":21,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":204502,"byte_end":204508,"line_start":1425,"line_end":1425,"column_start":29,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":45974},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":204645,"byte_end":204651,"line_start":1431,"line_end":1431,"column_start":29,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":45974},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":204768,"byte_end":204774,"line_start":1437,"line_end":1437,"column_start":21,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":45974},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":204902,"byte_end":204908,"line_start":1443,"line_end":1443,"column_start":36,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":45974},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":205059,"byte_end":205065,"line_start":1449,"line_end":1449,"column_start":36,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":45974},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":205183,"byte_end":205187,"line_start":1455,"line_end":1455,"column_start":15,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":205746,"byte_end":205751,"line_start":1480,"line_end":1480,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207168,"byte_end":207173,"line_start":1517,"line_end":1517,"column_start":25,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":497},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207268,"byte_end":207273,"line_start":1523,"line_end":1523,"column_start":15,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":497},"to":{"krate":2,"index":9802}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207376,"byte_end":207381,"line_start":1529,"line_end":1529,"column_start":16,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":497},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":207586,"byte_end":207597,"line_start":1540,"line_end":1540,"column_start":6,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":208038,"byte_end":208049,"line_start":1556,"line_end":1556,"column_start":16,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":208168,"byte_end":208175,"line_start":1565,"line_end":1565,"column_start":19,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":208280,"byte_end":208291,"line_start":1572,"line_end":1572,"column_start":15,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/span.rs","byte_start":209466,"byte_end":209480,"line_start":1604,"line_end":1604,"column_start":22,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":513},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":40389,"byte_end":40402,"line_start":993,"line_end":993,"column_start":10,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":44433,"byte_end":44446,"line_start":1095,"line_end":1095,"column_start":23,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":386},"to":{"krate":20,"index":56}},{"span":{"file_name":"/root/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.34/src/lib.rs","byte_start":44886,"byte_end":44899,"line_start":1111,"line_end":1111,"column_start":25,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":386},"to":{"krate":2,"index":9595}}]}